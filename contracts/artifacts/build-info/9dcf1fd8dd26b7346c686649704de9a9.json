{
	"id": "9dcf1fd8dd26b7346c686649704de9a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EWasteToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract EWasteToken is ERC20, AccessControl {\r\n    // Roles\r\n    bytes32 public constant COLLECTOR_ROLE = keccak256(\"COLLECTOR_ROLE\");\r\n    bytes32 public constant RECYCLER_ROLE = keccak256(\"RECYCLER_ROLE\");\r\n    bytes32 public constant DISMANTLER_ROLE = keccak256(\"DISMANTLER_ROLE\");\r\n    bytes32 public constant REPAIRER_ROLE = keccak256(\"REPAIRER_ROLE\");\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n\r\n    // Reward Structure\r\n    uint256 public constant BASE_DISPOSAL_REWARD = 10 ether;\r\n    uint256 public constant BASE_COLLECTION_REWARD = 5 ether;\r\n    uint256 public constant BASE_RECYCLING_REWARD = 7 ether;\r\n    uint256 public constant BASE_REPAIR_REWARD = 8 ether;\r\n    uint256 public constant BASE_DISMANTLE_REWARD = 6 ether;\r\n    uint256 public constant PER_ITEM_REWARD = 1 ether;\r\n    uint256 public constant PER_GRAM_REWARD = 0.01 ether;\r\n\r\n    struct WasteItem {\r\n        uint256 id;\r\n        address creator;\r\n        string itemType;\r\n        uint256 weight;\r\n        uint256 quantity;\r\n        Status status;\r\n        address currentHandler;\r\n        bool isRepairable;\r\n    }\r\n\r\n    enum Status { \r\n        CREATED, \r\n        COLLECTED, \r\n        REPAIRABLE,\r\n        REPAIRED,\r\n        RECYCLED, \r\n        DISMANTLED, \r\n        RESOLD \r\n    }\r\n\r\n    mapping(uint256 => WasteItem) public wasteItems;\r\n    uint256 public itemCounter;\r\n\r\n    // Status-Specific Events (One per status)\r\n    event ItemCreated(uint256 indexed id, address indexed creator, uint256 quantity, uint256 weight);\r\n    event ItemCollected(uint256 indexed id, address indexed collector, uint256 reward);\r\n    event ItemMarkedRepairable(uint256 indexed id, address indexed collector);\r\n    event ItemRepaired(uint256 indexed id, address indexed repairer, uint256 reward);\r\n    event ItemRecycled(uint256 indexed id, address indexed recycler, uint256 reward);\r\n    event ItemDismantled(uint256 indexed id, address indexed dismantler, uint256 reward);\r\n    event ItemResold(uint256 indexed id, address indexed seller);\r\n\r\n    // Reward Calculation Event\r\n    event RewardCalculated(\r\n        uint256 indexed id,\r\n        Status status,\r\n        uint256 baseReward,\r\n        uint256 quantityBonus,\r\n        uint256 weightBonus,\r\n        uint256 totalReward\r\n    );\r\n\r\n    constructor() ERC20(\"EWasteToken\", \"EWT\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n        _mint(msg.sender, 10_000_000 * 10**decimals());\r\n    }\r\n\r\n    function createItem(\r\n        string memory _itemType,\r\n        uint256 _weight,\r\n        uint256 _quantity,\r\n        bool _isRepairable\r\n    ) external {\r\n        require(_quantity > 0 && _weight > 0, \"Invalid input\");\r\n        \r\n        uint256 newId = itemCounter++;\r\n        wasteItems[newId] = WasteItem({\r\n            id: newId,\r\n            creator: msg.sender,\r\n            itemType: _itemType,\r\n            weight: _weight,\r\n            quantity: _quantity,\r\n            status: Status.CREATED,\r\n            currentHandler: msg.sender,\r\n            isRepairable: _isRepairable\r\n        });\r\n\r\n        // uint256 reward = _calculateAndMintReward(newId, Status.CREATED);\r\n        emit ItemCreated(newId, msg.sender, _quantity, _weight);\r\n    }\r\n\r\n    function collectItem(uint256 _id) external onlyRole(COLLECTOR_ROLE) {\r\n        require(wasteItems[_id].status == Status.CREATED, \"Invalid status\");\r\n        wasteItems[_id].status = Status.COLLECTED;\r\n        wasteItems[_id].currentHandler = msg.sender;\r\n        \r\n        uint256 reward = _calculateAndMintReward(_id, Status.COLLECTED);\r\n        emit ItemCollected(_id, msg.sender, reward);\r\n    }\r\n\r\n    function markAsRepairable(uint256 _id) external onlyRole(COLLECTOR_ROLE) {\r\n        require(wasteItems[_id].status == Status.COLLECTED, \"Invalid status\");\r\n        require(wasteItems[_id].isRepairable, \"Item not repairable\");\r\n        \r\n        wasteItems[_id].status = Status.REPAIRABLE;\r\n        emit ItemMarkedRepairable(_id, msg.sender);\r\n    }\r\n\r\n    function repairItem(uint256 _id) external onlyRole(REPAIRER_ROLE) {\r\n        require(wasteItems[_id].status == Status.REPAIRABLE, \"Invalid status\");\r\n        \r\n        wasteItems[_id].status = Status.REPAIRED;\r\n        wasteItems[_id].currentHandler = msg.sender;\r\n        \r\n        uint256 reward = _calculateAndMintReward(_id, Status.REPAIRED);\r\n        emit ItemRepaired(_id, msg.sender, reward);\r\n    }\r\n\r\n    function recycleItem(uint256 _id) external onlyRole(RECYCLER_ROLE) {\r\n        require(\r\n            wasteItems[_id].status == Status.COLLECTED || \r\n            wasteItems[_id].status == Status.REPAIRED,\r\n            \"Invalid status\"\r\n        );\r\n        \r\n        wasteItems[_id].status = Status.RECYCLED;\r\n        wasteItems[_id].currentHandler = msg.sender;\r\n        \r\n        uint256 reward = _calculateAndMintReward(_id, Status.RECYCLED);\r\n        emit ItemRecycled(_id, msg.sender, reward);\r\n    }\r\n\r\n    function dismantleItem(uint256 _id) external onlyRole(DISMANTLER_ROLE) {\r\n        require(wasteItems[_id].status == Status.RECYCLED, \"Invalid status\");\r\n        \r\n        wasteItems[_id].status = Status.DISMANTLED;\r\n        wasteItems[_id].currentHandler = msg.sender;\r\n        \r\n        uint256 reward = _calculateAndMintReward(_id, Status.DISMANTLED);\r\n        emit ItemDismantled(_id, msg.sender, reward);\r\n    }\r\n\r\n    function resellItem(uint256 _id) external {\r\n        require(wasteItems[_id].status == Status.DISMANTLED, \"Invalid status\");\r\n        require(wasteItems[_id].currentHandler == msg.sender, \"Not owner\");\r\n        \r\n        wasteItems[_id].status = Status.RESOLD;\r\n        emit ItemResold(_id, msg.sender);\r\n    }\r\n\r\n    // Internal reward calculation and minting\r\n    function _calculateAndMintReward(uint256 _id, Status _status) internal returns (uint256) {\r\n        (uint256 base, uint256 qBonus, uint256 wBonus) = _getRewardComponents(_id, _status);\r\n        uint256 totalReward = base + qBonus + wBonus;\r\n        \r\n        _mint(msg.sender, totalReward);\r\n        \r\n        emit RewardCalculated(\r\n            _id,\r\n            _status,\r\n            base,\r\n            qBonus,\r\n            wBonus,\r\n            totalReward\r\n        );\r\n        \r\n        return totalReward;\r\n    }\r\n\r\n    function _getRewardComponents(uint256 _id, Status _status) internal view returns (\r\n        uint256 baseReward,\r\n        uint256 quantityBonus,\r\n        uint256 weightBonus\r\n    ) {\r\n        WasteItem memory item = wasteItems[_id];\r\n        \r\n        if (_status == Status.CREATED) {\r\n            baseReward = BASE_DISPOSAL_REWARD;\r\n        } else if (_status == Status.COLLECTED) {\r\n            baseReward = BASE_COLLECTION_REWARD;\r\n        } else if (_status == Status.REPAIRED) {\r\n            baseReward = BASE_REPAIR_REWARD;\r\n        } else if (_status == Status.RECYCLED) {\r\n            baseReward = BASE_RECYCLING_REWARD;\r\n        } else if (_status == Status.DISMANTLED) {\r\n            baseReward = BASE_DISMANTLE_REWARD;\r\n        }\r\n\r\n        quantityBonus = PER_ITEM_REWARD * item.quantity;\r\n        \r\n        // Apply multipliers for certain statuses\r\n        if (_status == Status.REPAIRED) {\r\n            quantityBonus *= 2; // Double reward for repair\r\n        } else if (_status == Status.RECYCLED) {\r\n            weightBonus = (PER_GRAM_REWARD * item.weight) * 2;\r\n        } else if (_status == Status.DISMANTLED) {\r\n            weightBonus = (PER_GRAM_REWARD * item.weight) * 3;\r\n        } else {\r\n            weightBonus = PER_GRAM_REWARD * item.weight;\r\n        }\r\n    }\r\n\r\n    // Admin functions\r\n    function addRole(address _account, bytes32 _role) external onlyRole(ADMIN_ROLE) {\r\n        grantRole(_role, _account);\r\n    }\r\n\r\n    function mintTokens(address _to, uint256 _amount) external onlyRole(ADMIN_ROLE) {\r\n        _mint(_to, _amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/EWasteToken.sol": {
				"EWasteToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "collector",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "ItemCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "ItemCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "dismantler",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "ItemDismantled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "collector",
									"type": "address"
								}
							],
							"name": "ItemMarkedRepairable",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recycler",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "ItemRecycled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repairer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "ItemRepaired",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								}
							],
							"name": "ItemResold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum EWasteToken.Status",
									"name": "status",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantityBonus",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weightBonus",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								}
							],
							"name": "RewardCalculated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_COLLECTION_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_DISMANTLE_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_DISPOSAL_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_RECYCLING_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_REPAIR_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COLLECTOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISMANTLER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PER_GRAM_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PER_ITEM_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RECYCLER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REPAIRER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_role",
									"type": "bytes32"
								}
							],
							"name": "addRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "collectItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_itemType",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_isRepairable",
									"type": "bool"
								}
							],
							"name": "createItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "dismantleItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "itemCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "markAsRepairable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mintTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "recycleItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "repairItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "resellItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "wasteItems",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "itemType",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "enum EWasteToken.Status",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "currentHandler",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isRepairable",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EWasteToken.sol\":179:8005  contract EWasteToken is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/EWasteToken.sol\":2461:2666  constructor() ERC20(\"EWasteToken\", \"EWT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x455761737465546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4557540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/EWasteToken.sol\":2514:2556  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/EWasteToken.sol\":2525:2543  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/EWasteToken.sol\":2545:2555  msg.sender */\n  caller\n    /* \"contracts/EWasteToken.sol\":2514:2524  _grantRole */\n  shl(0x20, tag_10)\n    /* \"contracts/EWasteToken.sol\":2514:2556  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/EWasteToken.sol\":2567:2601  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_11\n    /* \"contracts/EWasteToken.sol\":580:603  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/EWasteToken.sol\":2590:2600  msg.sender */\n  caller\n    /* \"contracts/EWasteToken.sol\":2567:2577  _grantRole */\n  shl(0x20, tag_10)\n    /* \"contracts/EWasteToken.sol\":2567:2601  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/EWasteToken.sol\":2612:2658  _mint(msg.sender, 10_000_000 * 10**decimals()) */\n  tag_12\n    /* \"contracts/EWasteToken.sol\":2618:2628  msg.sender */\n  caller\n    /* \"contracts/EWasteToken.sol\":2647:2657  decimals() */\n  tag_13\n    /* \"contracts/EWasteToken.sol\":2647:2655  decimals */\n  shl(0x20, tag_14)\n    /* \"contracts/EWasteToken.sol\":2647:2657  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/EWasteToken.sol\":2643:2645  10 */\n  0x0a\n    /* \"contracts/EWasteToken.sol\":2643:2657  10**decimals() */\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"contracts/EWasteToken.sol\":2630:2640  10_000_000 */\n  0x989680\n    /* \"contracts/EWasteToken.sol\":2630:2657  10_000_000 * 10**decimals() */\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"contracts/EWasteToken.sol\":2612:2617  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/EWasteToken.sol\":2612:2658  _mint(msg.sender, 10_000_000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/EWasteToken.sol\":179:8005  contract EWasteToken is ERC20, AccessControl {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_22\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_25\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_21:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_34)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_41)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_46)\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_49:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_50:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_51:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_52:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_83:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_85\n  tag_51\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":714:798   */\ntag_84:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_53:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_54:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_55:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_56:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_90\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_55\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1429:1468   */\n  tag_91\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_55\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_57:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_58:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_59:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_95\n    /* \"#utility.yul\":1818:1852   */\n  tag_96\n    /* \"#utility.yul\":1827:1851   */\n  tag_97\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_57\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1818:1852   */\n  tag_58\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1800:1853   */\n  tag_57\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_60:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_61:\n    /* \"#utility.yul\":2056:2095   */\n  tag_100\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_59\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2117:2208   */\n  tag_101\n    /* \"#utility.yul\":2166:2207   */\n  tag_102\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_60\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_56\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_62:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_63:\n    /* \"#utility.yul\":2377:2409   */\n  tag_105\n  tag_62\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2418:2483   */\n  tag_106\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_61\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_64:\n    /* \"#utility.yul\":2555:2675   */\ntag_108:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_111\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_108)\ntag_110:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_65:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_114\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_53\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2906:2935   */\n  tag_115\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_54\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_116:\n    /* \"#utility.yul\":3133:3213   */\n  tag_117\n    /* \"#utility.yul\":3189:3211   */\n  tag_118\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_54\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_64\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_113:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_66:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_67:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_121\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_66\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_68:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_123\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_67\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_125\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_49\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_127\n  tag_50\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4038:4094   */\ntag_126:\n    /* \"#utility.yul\":4118:4156   */\n  tag_128\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_52\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4203:4270   */\n  tag_129\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_65\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_132:\n    /* \"#utility.yul\":5144:5211   */\n  tag_133\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_68\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_130)\n    /* \"#utility.yul\":4365:4983   */\ntag_131:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_134\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_53\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_135:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_135)\ntag_137:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_139\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_67\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_138:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_130:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_69:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_70:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_71:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_143:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_147\n  tag_69\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5753:5803   */\ntag_146:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_148:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_149\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_70\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_72:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_150)\n    /* \"#utility.yul\":6617:6657   */\ntag_151:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_150)\n    /* \"#utility.yul\":6666:6702   */\ntag_152:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_154\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_153)\n    /* \"#utility.yul\":6805:6832   */\ntag_154:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_150)\n    /* \"#utility.yul\":6841:7032   */\ntag_155:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_157\n  tag_69\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6870:6913   */\ntag_156:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_159\n  tag_69\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6964:7004   */\ntag_158:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_150)\n    /* \"#utility.yul\":6755:7032   */\ntag_153:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_162\n  tag_69\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7219:7259   */\ntag_161:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_150)\n    /* \"#utility.yul\":7041:7287   */\ntag_160:\n    /* \"#utility.yul\":7312:7354   */\n  tag_163\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_71\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_165\n  tag_69\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7364:7415   */\ntag_164:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_150:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7547   */\ntag_73:\n    /* \"#utility.yul\":7496:7503   */\n  0x00\n    /* \"#utility.yul\":7536:7540   */\n  0xff\n    /* \"#utility.yul\":7529:7534   */\n  dup3\n    /* \"#utility.yul\":7525:7541   */\n  and\n    /* \"#utility.yul\":7514:7541   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7834   */\ntag_16:\n    /* \"#utility.yul\":7611:7616   */\n  0x00\n    /* \"#utility.yul\":7635:7658   */\n  tag_168\n    /* \"#utility.yul\":7653:7657   */\n  dup3\n    /* \"#utility.yul\":7635:7658   */\n  tag_57\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7627:7658   */\n  swap2\n  pop\n    /* \"#utility.yul\":7679:7704   */\n  tag_169\n    /* \"#utility.yul\":7695:7703   */\n  dup4\n    /* \"#utility.yul\":7679:7704   */\n  tag_73\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7667:7704   */\n  swap3\n  pop\n    /* \"#utility.yul\":7723:7827   */\n  tag_170\n    /* \"#utility.yul\":7760:7826   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7750:7758   */\n  dup5\n    /* \"#utility.yul\":7744:7748   */\n  dup5\n    /* \"#utility.yul\":7723:7827   */\n  tag_72\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7714:7827   */\n  swap1\n  pop\n    /* \"#utility.yul\":7553:7834   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7840:8250   */\ntag_18:\n    /* \"#utility.yul\":7880:7887   */\n  0x00\n    /* \"#utility.yul\":7903:7923   */\n  tag_172\n    /* \"#utility.yul\":7921:7922   */\n  dup3\n    /* \"#utility.yul\":7903:7923   */\n  tag_57\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7898:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7937:7957   */\n  tag_173\n    /* \"#utility.yul\":7955:7956   */\n  dup4\n    /* \"#utility.yul\":7937:7957   */\n  tag_57\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7932:7957   */\n  swap3\n  pop\n    /* \"#utility.yul\":7992:7993   */\n  dup3\n    /* \"#utility.yul\":7989:7990   */\n  dup3\n    /* \"#utility.yul\":7985:7994   */\n  mul\n    /* \"#utility.yul\":8014:8044   */\n  tag_174\n    /* \"#utility.yul\":8032:8043   */\n  dup2\n    /* \"#utility.yul\":8014:8044   */\n  tag_57\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8003:8044   */\n  swap2\n  pop\n    /* \"#utility.yul\":8193:8194   */\n  dup3\n    /* \"#utility.yul\":8184:8191   */\n  dup3\n    /* \"#utility.yul\":8180:8195   */\n  div\n    /* \"#utility.yul\":8177:8178   */\n  dup5\n    /* \"#utility.yul\":8174:8196   */\n  eq\n    /* \"#utility.yul\":8154:8155   */\n  dup4\n    /* \"#utility.yul\":8147:8156   */\n  iszero\n    /* \"#utility.yul\":8127:8210   */\n  or\n    /* \"#utility.yul\":8104:8243   */\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8223:8241   */\n  tag_176\n  tag_69\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8104:8243   */\ntag_175:\n    /* \"#utility.yul\":7888:8250   */\n  pop\n    /* \"#utility.yul\":7840:8250   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8382   */\ntag_74:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8333:8375   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8326:8331   */\n  dup3\n    /* \"#utility.yul\":8322:8376   */\n  and\n    /* \"#utility.yul\":8311:8376   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8382   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8388:8484   */\ntag_75:\n    /* \"#utility.yul\":8425:8432   */\n  0x00\n    /* \"#utility.yul\":8454:8478   */\n  tag_179\n    /* \"#utility.yul\":8472:8477   */\n  dup3\n    /* \"#utility.yul\":8454:8478   */\n  tag_74\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8443:8478   */\n  swap1\n  pop\n    /* \"#utility.yul\":8388:8484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8490:8608   */\ntag_76:\n    /* \"#utility.yul\":8577:8601   */\n  tag_181\n    /* \"#utility.yul\":8595:8600   */\n  dup2\n    /* \"#utility.yul\":8577:8601   */\n  tag_75\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8572:8575   */\n  dup3\n    /* \"#utility.yul\":8565:8602   */\n  mstore\n    /* \"#utility.yul\":8490:8608   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8614:8836   */\ntag_32:\n    /* \"#utility.yul\":8707:8711   */\n  0x00\n    /* \"#utility.yul\":8745:8747   */\n  0x20\n    /* \"#utility.yul\":8734:8743   */\n  dup3\n    /* \"#utility.yul\":8730:8748   */\n  add\n    /* \"#utility.yul\":8722:8748   */\n  swap1\n  pop\n    /* \"#utility.yul\":8758:8829   */\n  tag_183\n    /* \"#utility.yul\":8826:8827   */\n  0x00\n    /* \"#utility.yul\":8815:8824   */\n  dup4\n    /* \"#utility.yul\":8811:8828   */\n  add\n    /* \"#utility.yul\":8802:8808   */\n  dup5\n    /* \"#utility.yul\":8758:8829   */\n  tag_76\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8614:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9033   */\ntag_40:\n    /* \"#utility.yul\":8882:8885   */\n  0x00\n    /* \"#utility.yul\":8901:8921   */\n  tag_185\n    /* \"#utility.yul\":8919:8920   */\n  dup3\n    /* \"#utility.yul\":8901:8921   */\n  tag_57\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8896:8921   */\n  swap2\n  pop\n    /* \"#utility.yul\":8935:8955   */\n  tag_186\n    /* \"#utility.yul\":8953:8954   */\n  dup4\n    /* \"#utility.yul\":8935:8955   */\n  tag_57\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8930:8955   */\n  swap3\n  pop\n    /* \"#utility.yul\":8978:8979   */\n  dup3\n    /* \"#utility.yul\":8975:8976   */\n  dup3\n    /* \"#utility.yul\":8971:8980   */\n  add\n    /* \"#utility.yul\":8964:8980   */\n  swap1\n  pop\n    /* \"#utility.yul\":8999:9002   */\n  dup1\n    /* \"#utility.yul\":8996:8997   */\n  dup3\n    /* \"#utility.yul\":8993:9003   */\n  gt\n    /* \"#utility.yul\":8990:9026   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9006:9024   */\n  tag_188\n  tag_69\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8990:9026   */\ntag_187:\n    /* \"#utility.yul\":8842:9033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9157   */\ntag_77:\n    /* \"#utility.yul\":9126:9150   */\n  tag_190\n    /* \"#utility.yul\":9144:9149   */\n  dup2\n    /* \"#utility.yul\":9126:9150   */\n  tag_57\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9121:9124   */\n  dup3\n    /* \"#utility.yul\":9114:9151   */\n  mstore\n    /* \"#utility.yul\":9039:9157   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9605   */\ntag_44:\n    /* \"#utility.yul\":9312:9316   */\n  0x00\n    /* \"#utility.yul\":9350:9352   */\n  0x60\n    /* \"#utility.yul\":9339:9348   */\n  dup3\n    /* \"#utility.yul\":9335:9353   */\n  add\n    /* \"#utility.yul\":9327:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9363:9434   */\n  tag_192\n    /* \"#utility.yul\":9431:9432   */\n  0x00\n    /* \"#utility.yul\":9420:9429   */\n  dup4\n    /* \"#utility.yul\":9416:9433   */\n  add\n    /* \"#utility.yul\":9407:9413   */\n  dup7\n    /* \"#utility.yul\":9363:9434   */\n  tag_76\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9444:9516   */\n  tag_193\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup4\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9488:9494   */\n  dup6\n    /* \"#utility.yul\":9444:9516   */\n  tag_77\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9526:9598   */\n  tag_194\n    /* \"#utility.yul\":9594:9596   */\n  0x40\n    /* \"#utility.yul\":9583:9592   */\n  dup4\n    /* \"#utility.yul\":9579:9597   */\n  add\n    /* \"#utility.yul\":9570:9576   */\n  dup5\n    /* \"#utility.yul\":9526:9598   */\n  tag_77\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9163:9605   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9611:9833   */\ntag_48:\n    /* \"#utility.yul\":9704:9708   */\n  0x00\n    /* \"#utility.yul\":9742:9744   */\n  0x20\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9727:9745   */\n  add\n    /* \"#utility.yul\":9719:9745   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9826   */\n  tag_196\n    /* \"#utility.yul\":9823:9824   */\n  0x00\n    /* \"#utility.yul\":9812:9821   */\n  dup4\n    /* \"#utility.yul\":9808:9825   */\n  add\n    /* \"#utility.yul\":9799:9805   */\n  dup5\n    /* \"#utility.yul\":9755:9826   */\n  tag_77\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9611:9833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/EWasteToken.sol\":179:8005  contract EWasteToken is ERC20, AccessControl {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/EWasteToken.sol\":179:8005  contract EWasteToken is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8287662c\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xb8fe58e4\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd8101dcd\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xed276caf\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf0dda65c\n      eq\n      tag_41\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0xb8fe58e4\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xbe651316\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xbf313778\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc53b4b09\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xcb963a39\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x990281b8\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x990281b8\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x9ca39ae9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa73f7f8a\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x8287662c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x855c72fb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x91810674\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x313ce567\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x65258b66\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x65258b66\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6d6d00ed\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x74e4d700\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x352b6dc3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3609a1eb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x579108f7\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x0f555c54\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x0f555c54\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x091929c0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":1473:1520  mapping(uint256 => WasteItem) public wasteItems */\n    tag_5:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":945:994  uint256 public constant PER_ITEM_REWARD = 1 ether */\n    tag_7:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_10:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":2674:3424  function createItem(... */\n    tag_13:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/EWasteToken.sol\":3432:3830  function collectItem(uint256 _id) external onlyRole(COLLECTOR_ROLE) {... */\n    tag_14:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_15:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/EWasteToken.sol\":393:463  bytes32 public constant DISMANTLER_ROLE = keccak256(\"DISMANTLER_ROLE\") */\n    tag_16:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":1001:1053  uint256 public constant PER_GRAM_REWARD = 0.01 ether */\n    tag_17:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":1527:1553  uint256 public itemCounter */\n    tag_18:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":637:692  uint256 public constant BASE_DISPOSAL_REWARD = 10 ether */\n    tag_20:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":543:603  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_21:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":4194:4600  function repairItem(uint256 _id) external onlyRole(REPAIRER_ROLE) {... */\n    tag_22:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/EWasteToken.sol\":4608:5110  function recycleItem(uint256 _id) external onlyRole(RECYCLER_ROLE) {... */\n    tag_23:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      stop\n        /* \"contracts/EWasteToken.sol\":5118:5533  function dismantleItem(uint256 _id) external onlyRole(DISMANTLER_ROLE) {... */\n    tag_24:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_25:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_26:\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":3838:4186  function markAsRepairable(uint256 _id) external onlyRole(COLLECTOR_ROLE) {... */\n    tag_27:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"contracts/EWasteToken.sol\":245:313  bytes32 public constant COLLECTOR_ROLE = keccak256(\"COLLECTOR_ROLE\") */\n    tag_28:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_29:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":7751:7876  function addRole(address _account, bytes32 _role) external onlyRole(ADMIN_ROLE) {... */\n    tag_30:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n    tag_151:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":824:876  uint256 public constant BASE_REPAIR_REWARD = 8 ether */\n    tag_32:\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":470:536  bytes32 public constant REPAIRER_ROLE = keccak256(\"REPAIRER_ROLE\") */\n    tag_33:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":320:386  bytes32 public constant RECYCLER_ROLE = keccak256(\"RECYCLER_ROLE\") */\n    tag_34:\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":762:817  uint256 public constant BASE_RECYCLING_REWARD = 7 ether */\n    tag_35:\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":699:755  uint256 public constant BASE_COLLECTION_REWARD = 5 ether */\n    tag_36:\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_37:\n      tag_174\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n    tag_174:\n      stop\n        /* \"contracts/EWasteToken.sol\":5541:5851  function resellItem(uint256 _id) external {... */\n    tag_38:\n      tag_177\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_178:\n      tag_179\n      jump\t// in\n    tag_177:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_39:\n      tag_180\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      tag_183\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":883:938  uint256 public constant BASE_DISMANTLE_REWARD = 6 ether */\n    tag_40:\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EWasteToken.sol\":7884:8002  function mintTokens(address _to, uint256 _amount) external onlyRole(ADMIN_ROLE) {... */\n    tag_41:\n      tag_188\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_189:\n      tag_190\n      jump\t// in\n    tag_188:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_192\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_198\n      swap1\n      tag_197\n      jump\t// in\n    tag_198:\n      dup1\n      iszero\n      tag_199\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_200\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_199)\n    tag_200:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_201:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_201\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":1473:1520  mapping(uint256 => WasteItem) public wasteItems */\n    tag_62:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_197\n      jump\t// in\n    tag_202:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_197\n      jump\t// in\n    tag_203:\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_205\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_204)\n    tag_205:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_206:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_206\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":945:994  uint256 public constant PER_ITEM_REWARD = 1 ether */\n    tag_71:\n        /* \"contracts/EWasteToken.sol\":987:994  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/EWasteToken.sol\":945:994  uint256 public constant PER_ITEM_REWARD = 1 ether */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":2674:3424  function createItem(... */\n    tag_99:\n        /* \"contracts/EWasteToken.sol\":2858:2859  0 */\n      0x00\n        /* \"contracts/EWasteToken.sol\":2846:2855  _quantity */\n      dup3\n        /* \"contracts/EWasteToken.sol\":2846:2859  _quantity > 0 */\n      gt\n        /* \"contracts/EWasteToken.sol\":2846:2874  _quantity > 0 && _weight > 0 */\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n        /* \"contracts/EWasteToken.sol\":2873:2874  0 */\n      0x00\n        /* \"contracts/EWasteToken.sol\":2863:2870  _weight */\n      dup4\n        /* \"contracts/EWasteToken.sol\":2863:2874  _weight > 0 */\n      gt\n        /* \"contracts/EWasteToken.sol\":2846:2874  _quantity > 0 && _weight > 0 */\n    tag_229:\n        /* \"contracts/EWasteToken.sol\":2838:2892  require(_quantity > 0 && _weight > 0, \"Invalid input\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/EWasteToken.sol\":2913:2926  uint256 newId */\n      0x00\n        /* \"contracts/EWasteToken.sol\":2929:2940  itemCounter */\n      0x07\n      0x00\n        /* \"contracts/EWasteToken.sol\":2929:2942  itemCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/EWasteToken.sol\":2913:2942  uint256 newId = itemCounter++ */\n      swap1\n      pop\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/EWasteToken.sol\":3002:3007  newId */\n      dup3\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EWasteToken.sol\":3031:3041  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EWasteToken.sol\":3066:3075  _itemType */\n      dup7\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EWasteToken.sol\":3098:3105  _weight */\n      dup6\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EWasteToken.sol\":3130:3139  _quantity */\n      dup5\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EWasteToken.sol\":3162:3176  Status.CREATED */\n      0x00\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_235\n      jumpi\n      tag_236\n      tag_237\n      jump\t// in\n    tag_236:\n    tag_235:\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EWasteToken.sol\":3207:3217  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EWasteToken.sol\":3246:3259  _isRepairable */\n      dup4\n        /* \"contracts/EWasteToken.sol\":2973:3271  WasteItem({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/EWasteToken.sol\":2953:2963  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":2953:2970  wasteItems[newId] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":2964:2969  newId */\n      dup4\n        /* \"contracts/EWasteToken.sol\":2953:2970  wasteItems[newId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":2953:3271  wasteItems[newId] = WasteItem({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_237\n      jump\t// in\n    tag_241:\n    tag_240:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x15)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/EWasteToken.sol\":3385:3395  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":3366:3416  ItemCreated(newId, msg.sender, _quantity, _weight) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":3378:3383  newId */\n      dup2\n        /* \"contracts/EWasteToken.sol\":3366:3416  ItemCreated(newId, msg.sender, _quantity, _weight) */\n      0x46d5e1fa50133f2ad2b0346ff4a3f42484fe3bb406c6c15fd7ae095d10b12581\n        /* \"contracts/EWasteToken.sol\":3397:3406  _quantity */\n      dup6\n        /* \"contracts/EWasteToken.sol\":3408:3415  _weight */\n      dup8\n        /* \"contracts/EWasteToken.sol\":3366:3416  ItemCreated(newId, msg.sender, _quantity, _weight) */\n      mload(0x40)\n      tag_242\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EWasteToken.sol\":2827:3424  {... */\n      pop\n        /* \"contracts/EWasteToken.sol\":2674:3424  function createItem(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":3432:3830  function collectItem(uint256 _id) external onlyRole(COLLECTOR_ROLE) {... */\n    tag_102:\n        /* \"contracts/EWasteToken.sol\":286:313  keccak256(\"COLLECTOR_ROLE\") */\n      0x14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_245\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/EWasteToken.sol\":3545:3559  Status.CREATED */\n      0x00\n        /* \"contracts/EWasteToken.sol\":3519:3559  wasteItems[_id].status == Status.CREATED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_247\n      jumpi\n      tag_248\n      tag_237\n      jump\t// in\n    tag_248:\n    tag_247:\n        /* \"contracts/EWasteToken.sol\":3519:3529  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":3519:3534  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":3530:3533  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":3519:3534  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":3519:3541  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":3519:3559  wasteItems[_id].status == Status.CREATED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_249\n      jumpi\n      tag_250\n      tag_237\n      jump\t// in\n    tag_250:\n    tag_249:\n      eq\n        /* \"contracts/EWasteToken.sol\":3511:3578  require(wasteItems[_id].status == Status.CREATED, \"Invalid status\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"contracts/EWasteToken.sol\":3614:3630  Status.COLLECTED */\n      0x01\n        /* \"contracts/EWasteToken.sol\":3589:3599  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":3589:3604  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":3600:3603  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":3589:3604  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":3589:3611  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n        /* \"contracts/EWasteToken.sol\":3589:3630  wasteItems[_id].status = Status.COLLECTED */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_254\n      jumpi\n      tag_255\n      tag_237\n      jump\t// in\n    tag_255:\n    tag_254:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":3674:3684  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":3641:3651  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":3641:3656  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":3652:3655  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":3641:3656  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":3641:3671  wasteItems[_id].currentHandler */\n      0x05\n      add\n      0x01\n        /* \"contracts/EWasteToken.sol\":3641:3684  wasteItems[_id].currentHandler = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":3705:3719  uint256 reward */\n      0x00\n        /* \"contracts/EWasteToken.sol\":3722:3768  _calculateAndMintReward(_id, Status.COLLECTED) */\n      tag_256\n        /* \"contracts/EWasteToken.sol\":3746:3749  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":3751:3767  Status.COLLECTED */\n      0x01\n        /* \"contracts/EWasteToken.sol\":3722:3745  _calculateAndMintReward */\n      tag_257\n        /* \"contracts/EWasteToken.sol\":3722:3768  _calculateAndMintReward(_id, Status.COLLECTED) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/EWasteToken.sol\":3705:3768  uint256 reward = _calculateAndMintReward(_id, Status.COLLECTED) */\n      swap1\n      pop\n        /* \"contracts/EWasteToken.sol\":3803:3813  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":3784:3822  ItemCollected(_id, msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":3798:3801  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":3784:3822  ItemCollected(_id, msg.sender, reward) */\n      0x2a18ae28442ec525b81831921d81b734ce7861d68a812e4546c7945075766f1d\n        /* \"contracts/EWasteToken.sol\":3815:3821  reward */\n      dup4\n        /* \"contracts/EWasteToken.sol\":3784:3822  ItemCollected(_id, msg.sender, reward) */\n      mload(0x40)\n      tag_258\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EWasteToken.sol\":3500:3830  {... */\n      pop\n        /* \"contracts/EWasteToken.sol\":3432:3830  function collectItem(uint256 _id) external onlyRole(COLLECTOR_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_260\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_262\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_262:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":393:463  bytes32 public constant DISMANTLER_ROLE = keccak256(\"DISMANTLER_ROLE\") */\n    tag_107:\n        /* \"contracts/EWasteToken.sol\":435:463  keccak256(\"DISMANTLER_ROLE\") */\n      0xb636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c755\n        /* \"contracts/EWasteToken.sol\":393:463  bytes32 public constant DISMANTLER_ROLE = keccak256(\"DISMANTLER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":1001:1053  uint256 public constant PER_GRAM_REWARD = 0.01 ether */\n    tag_110:\n        /* \"contracts/EWasteToken.sol\":1043:1053  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/EWasteToken.sol\":1001:1053  uint256 public constant PER_GRAM_REWARD = 0.01 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":1527:1553  uint256 public itemCounter */\n    tag_113:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":637:692  uint256 public constant BASE_DISPOSAL_REWARD = 10 ether */\n    tag_121:\n        /* \"contracts/EWasteToken.sol\":684:692  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/EWasteToken.sol\":637:692  uint256 public constant BASE_DISPOSAL_REWARD = 10 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":543:603  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_124:\n        /* \"contracts/EWasteToken.sol\":580:603  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/EWasteToken.sol\":543:603  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":4194:4600  function repairItem(uint256 _id) external onlyRole(REPAIRER_ROLE) {... */\n    tag_128:\n        /* \"contracts/EWasteToken.sol\":510:536  keccak256(\"REPAIRER_ROLE\") */\n      0xab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e7\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/EWasteToken.sol\":4305:4322  Status.REPAIRABLE */\n      0x02\n        /* \"contracts/EWasteToken.sol\":4279:4322  wasteItems[_id].status == Status.REPAIRABLE */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_268\n      jumpi\n      tag_269\n      tag_237\n      jump\t// in\n    tag_269:\n    tag_268:\n        /* \"contracts/EWasteToken.sol\":4279:4289  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4279:4294  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4290:4293  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4279:4294  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4279:4301  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":4279:4322  wasteItems[_id].status == Status.REPAIRABLE */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_270\n      jumpi\n      tag_271\n      tag_237\n      jump\t// in\n    tag_271:\n    tag_270:\n      eq\n        /* \"contracts/EWasteToken.sol\":4271:4341  require(wasteItems[_id].status == Status.REPAIRABLE, \"Invalid status\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap1\n      tag_253\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_272:\n        /* \"contracts/EWasteToken.sol\":4387:4402  Status.REPAIRED */\n      0x03\n        /* \"contracts/EWasteToken.sol\":4362:4372  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4362:4377  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4373:4376  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4362:4377  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4362:4384  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n        /* \"contracts/EWasteToken.sol\":4362:4402  wasteItems[_id].status = Status.REPAIRED */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_274\n      jumpi\n      tag_275\n      tag_237\n      jump\t// in\n    tag_275:\n    tag_274:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":4446:4456  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":4413:4423  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4413:4428  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4424:4427  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4413:4428  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4413:4443  wasteItems[_id].currentHandler */\n      0x05\n      add\n      0x01\n        /* \"contracts/EWasteToken.sol\":4413:4456  wasteItems[_id].currentHandler = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":4477:4491  uint256 reward */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4494:4539  _calculateAndMintReward(_id, Status.REPAIRED) */\n      tag_276\n        /* \"contracts/EWasteToken.sol\":4518:4521  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":4523:4538  Status.REPAIRED */\n      0x03\n        /* \"contracts/EWasteToken.sol\":4494:4517  _calculateAndMintReward */\n      tag_257\n        /* \"contracts/EWasteToken.sol\":4494:4539  _calculateAndMintReward(_id, Status.REPAIRED) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/EWasteToken.sol\":4477:4539  uint256 reward = _calculateAndMintReward(_id, Status.REPAIRED) */\n      swap1\n      pop\n        /* \"contracts/EWasteToken.sol\":4573:4583  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":4555:4592  ItemRepaired(_id, msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":4568:4571  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":4555:4592  ItemRepaired(_id, msg.sender, reward) */\n      0xe5e46d59e99676fbf7547ce5cc7583dc849e2af037032e0f6611224b75bb8967\n        /* \"contracts/EWasteToken.sol\":4585:4591  reward */\n      dup4\n        /* \"contracts/EWasteToken.sol\":4555:4592  ItemRepaired(_id, msg.sender, reward) */\n      mload(0x40)\n      tag_277\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EWasteToken.sol\":4260:4600  {... */\n      pop\n        /* \"contracts/EWasteToken.sol\":4194:4600  function repairItem(uint256 _id) external onlyRole(REPAIRER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":4608:5110  function recycleItem(uint256 _id) external onlyRole(RECYCLER_ROLE) {... */\n    tag_131:\n        /* \"contracts/EWasteToken.sol\":360:386  keccak256(\"RECYCLER_ROLE\") */\n      0x11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_279\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_279:\n        /* \"contracts/EWasteToken.sol\":4734:4750  Status.COLLECTED */\n      0x01\n        /* \"contracts/EWasteToken.sol\":4708:4750  wasteItems[_id].status == Status.COLLECTED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_281\n      jumpi\n      tag_282\n      tag_237\n      jump\t// in\n    tag_282:\n    tag_281:\n        /* \"contracts/EWasteToken.sol\":4708:4718  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4708:4723  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4719:4722  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4708:4723  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4708:4730  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":4708:4750  wasteItems[_id].status == Status.COLLECTED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_283\n      jumpi\n      tag_284\n      tag_237\n      jump\t// in\n    tag_284:\n    tag_283:\n      eq\n        /* \"contracts/EWasteToken.sol\":4708:4809  wasteItems[_id].status == Status.COLLECTED || ... */\n      dup1\n      tag_285\n      jumpi\n      pop\n        /* \"contracts/EWasteToken.sol\":4794:4809  Status.REPAIRED */\n      0x03\n        /* \"contracts/EWasteToken.sol\":4768:4809  wasteItems[_id].status == Status.REPAIRED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_286\n      jumpi\n      tag_287\n      tag_237\n      jump\t// in\n    tag_287:\n    tag_286:\n        /* \"contracts/EWasteToken.sol\":4768:4778  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4768:4783  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4779:4782  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4768:4783  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4768:4790  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":4768:4809  wasteItems[_id].status == Status.REPAIRED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_288\n      jumpi\n      tag_289\n      tag_237\n      jump\t// in\n    tag_289:\n    tag_288:\n      eq\n        /* \"contracts/EWasteToken.sol\":4708:4809  wasteItems[_id].status == Status.COLLECTED || ... */\n    tag_285:\n        /* \"contracts/EWasteToken.sol\":4686:4851  require(... */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_253\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/EWasteToken.sol\":4897:4912  Status.RECYCLED */\n      0x04\n        /* \"contracts/EWasteToken.sol\":4872:4882  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4872:4887  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4883:4886  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4872:4887  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4872:4894  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n        /* \"contracts/EWasteToken.sol\":4872:4912  wasteItems[_id].status = Status.RECYCLED */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_292\n      jumpi\n      tag_293\n      tag_237\n      jump\t// in\n    tag_293:\n    tag_292:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":4956:4966  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":4923:4933  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4923:4938  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4934:4937  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4923:4938  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4923:4953  wasteItems[_id].currentHandler */\n      0x05\n      add\n      0x01\n        /* \"contracts/EWasteToken.sol\":4923:4966  wasteItems[_id].currentHandler = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":4987:5001  uint256 reward */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5004:5049  _calculateAndMintReward(_id, Status.RECYCLED) */\n      tag_294\n        /* \"contracts/EWasteToken.sol\":5028:5031  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5033:5048  Status.RECYCLED */\n      0x04\n        /* \"contracts/EWasteToken.sol\":5004:5027  _calculateAndMintReward */\n      tag_257\n        /* \"contracts/EWasteToken.sol\":5004:5049  _calculateAndMintReward(_id, Status.RECYCLED) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/EWasteToken.sol\":4987:5049  uint256 reward = _calculateAndMintReward(_id, Status.RECYCLED) */\n      swap1\n      pop\n        /* \"contracts/EWasteToken.sol\":5083:5093  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":5065:5102  ItemRecycled(_id, msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":5078:5081  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5065:5102  ItemRecycled(_id, msg.sender, reward) */\n      0x3f0bdd39c575256b0686bbbc300a04a9c5828c01f9cc42a0179879b48b8eeddf\n        /* \"contracts/EWasteToken.sol\":5095:5101  reward */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5065:5102  ItemRecycled(_id, msg.sender, reward) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EWasteToken.sol\":4675:5110  {... */\n      pop\n        /* \"contracts/EWasteToken.sol\":4608:5110  function recycleItem(uint256 _id) external onlyRole(RECYCLER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":5118:5533  function dismantleItem(uint256 _id) external onlyRole(DISMANTLER_ROLE) {... */\n    tag_134:\n        /* \"contracts/EWasteToken.sol\":435:463  keccak256(\"DISMANTLER_ROLE\") */\n      0xb636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c755\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_297\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_297:\n        /* \"contracts/EWasteToken.sol\":5234:5249  Status.RECYCLED */\n      0x04\n        /* \"contracts/EWasteToken.sol\":5208:5249  wasteItems[_id].status == Status.RECYCLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_299\n      jumpi\n      tag_300\n      tag_237\n      jump\t// in\n    tag_300:\n    tag_299:\n        /* \"contracts/EWasteToken.sol\":5208:5218  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":5208:5223  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5219:5222  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":5208:5223  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":5208:5230  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":5208:5249  wasteItems[_id].status == Status.RECYCLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_302\n      tag_237\n      jump\t// in\n    tag_302:\n    tag_301:\n      eq\n        /* \"contracts/EWasteToken.sol\":5200:5268  require(wasteItems[_id].status == Status.RECYCLED, \"Invalid status\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_253\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"contracts/EWasteToken.sol\":5314:5331  Status.DISMANTLED */\n      0x05\n        /* \"contracts/EWasteToken.sol\":5289:5299  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":5289:5304  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5300:5303  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":5289:5304  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":5289:5311  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n        /* \"contracts/EWasteToken.sol\":5289:5331  wasteItems[_id].status = Status.DISMANTLED */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_305\n      jumpi\n      tag_306\n      tag_237\n      jump\t// in\n    tag_306:\n    tag_305:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":5375:5385  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":5342:5352  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":5342:5357  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5353:5356  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":5342:5357  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":5342:5372  wasteItems[_id].currentHandler */\n      0x05\n      add\n      0x01\n        /* \"contracts/EWasteToken.sol\":5342:5385  wasteItems[_id].currentHandler = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":5406:5420  uint256 reward */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5423:5470  _calculateAndMintReward(_id, Status.DISMANTLED) */\n      tag_307\n        /* \"contracts/EWasteToken.sol\":5447:5450  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5452:5469  Status.DISMANTLED */\n      0x05\n        /* \"contracts/EWasteToken.sol\":5423:5446  _calculateAndMintReward */\n      tag_257\n        /* \"contracts/EWasteToken.sol\":5423:5470  _calculateAndMintReward(_id, Status.DISMANTLED) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/EWasteToken.sol\":5406:5470  uint256 reward = _calculateAndMintReward(_id, Status.DISMANTLED) */\n      swap1\n      pop\n        /* \"contracts/EWasteToken.sol\":5506:5516  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":5486:5525  ItemDismantled(_id, msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":5501:5504  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5486:5525  ItemDismantled(_id, msg.sender, reward) */\n      0x77b29112f6bbaf1890ec3f52fb1f9ef0367e0babd3bcb3aa7d123b7a7734a54c\n        /* \"contracts/EWasteToken.sol\":5518:5524  reward */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5486:5525  ItemDismantled(_id, msg.sender, reward) */\n      mload(0x40)\n      tag_308\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EWasteToken.sol\":5189:5533  {... */\n      pop\n        /* \"contracts/EWasteToken.sol\":5118:5533  function dismantleItem(uint256 _id) external onlyRole(DISMANTLER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_311\n      swap1\n      tag_197\n      jump\t// in\n    tag_311:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_312\n      swap1\n      tag_197\n      jump\t// in\n    tag_312:\n      dup1\n      iszero\n      tag_313\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_314\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_313)\n    tag_314:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_315:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_315\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":3838:4186  function markAsRepairable(uint256 _id) external onlyRole(COLLECTOR_ROLE) {... */\n    tag_144:\n        /* \"contracts/EWasteToken.sol\":286:313  keccak256(\"COLLECTOR_ROLE\") */\n      0x14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_317\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/EWasteToken.sol\":3956:3972  Status.COLLECTED */\n      0x01\n        /* \"contracts/EWasteToken.sol\":3930:3972  wasteItems[_id].status == Status.COLLECTED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_319\n      jumpi\n      tag_320\n      tag_237\n      jump\t// in\n    tag_320:\n    tag_319:\n        /* \"contracts/EWasteToken.sol\":3930:3940  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":3930:3945  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":3941:3944  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":3930:3945  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":3930:3952  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":3930:3972  wasteItems[_id].status == Status.COLLECTED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_321\n      jumpi\n      tag_322\n      tag_237\n      jump\t// in\n    tag_322:\n    tag_321:\n      eq\n        /* \"contracts/EWasteToken.sol\":3922:3991  require(wasteItems[_id].status == Status.COLLECTED, \"Invalid status\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_253\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/EWasteToken.sol\":4010:4020  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4010:4025  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4021:4024  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":4010:4025  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4010:4038  wasteItems[_id].isRepairable */\n      0x05\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":4002:4062  require(wasteItems[_id].isRepairable, \"Item not repairable\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"contracts/EWasteToken.sol\":4108:4125  Status.REPAIRABLE */\n      0x02\n        /* \"contracts/EWasteToken.sol\":4083:4093  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":4083:4098  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":4094:4097  _id */\n      dup5\n        /* \"contracts/EWasteToken.sol\":4083:4098  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":4083:4105  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n        /* \"contracts/EWasteToken.sol\":4083:4125  wasteItems[_id].status = Status.REPAIRABLE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_328\n      jumpi\n      tag_329\n      tag_237\n      jump\t// in\n    tag_329:\n    tag_328:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":4167:4177  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":4141:4178  ItemMarkedRepairable(_id, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":4162:4165  _id */\n      dup3\n        /* \"contracts/EWasteToken.sol\":4141:4178  ItemMarkedRepairable(_id, msg.sender) */\n      0xd0ff3b517d0c850b614729642e089a59aea81eb4ba36827eafe9b43b404da0d7\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EWasteToken.sol\":3838:4186  function markAsRepairable(uint256 _id) external onlyRole(COLLECTOR_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":245:313  bytes32 public constant COLLECTOR_ROLE = keccak256(\"COLLECTOR_ROLE\") */\n    tag_146:\n        /* \"contracts/EWasteToken.sol\":286:313  keccak256(\"COLLECTOR_ROLE\") */\n      0x14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d2\n        /* \"contracts/EWasteToken.sol\":245:313  bytes32 public constant COLLECTOR_ROLE = keccak256(\"COLLECTOR_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":7751:7876  function addRole(address _account, bytes32 _role) external onlyRole(ADMIN_ROLE) {... */\n    tag_154:\n        /* \"contracts/EWasteToken.sol\":580:603  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_331\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_331:\n        /* \"contracts/EWasteToken.sol\":7842:7868  grantRole(_role, _account) */\n      tag_333\n        /* \"contracts/EWasteToken.sol\":7852:7857  _role */\n      dup3\n        /* \"contracts/EWasteToken.sol\":7859:7867  _account */\n      dup5\n        /* \"contracts/EWasteToken.sol\":7842:7851  grantRole */\n      tag_91\n        /* \"contracts/EWasteToken.sol\":7842:7868  grantRole(_role, _account) */\n      jump\t// in\n    tag_333:\n        /* \"contracts/EWasteToken.sol\":7751:7876  function addRole(address _account, bytes32 _role) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":824:876  uint256 public constant BASE_REPAIR_REWARD = 8 ether */\n    tag_160:\n        /* \"contracts/EWasteToken.sol\":869:876  8 ether */\n      0x6f05b59d3b200000\n        /* \"contracts/EWasteToken.sol\":824:876  uint256 public constant BASE_REPAIR_REWARD = 8 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":470:536  bytes32 public constant REPAIRER_ROLE = keccak256(\"REPAIRER_ROLE\") */\n    tag_163:\n        /* \"contracts/EWasteToken.sol\":510:536  keccak256(\"REPAIRER_ROLE\") */\n      0xab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e7\n        /* \"contracts/EWasteToken.sol\":470:536  bytes32 public constant REPAIRER_ROLE = keccak256(\"REPAIRER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":320:386  bytes32 public constant RECYCLER_ROLE = keccak256(\"RECYCLER_ROLE\") */\n    tag_166:\n        /* \"contracts/EWasteToken.sol\":360:386  keccak256(\"RECYCLER_ROLE\") */\n      0x11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd154\n        /* \"contracts/EWasteToken.sol\":320:386  bytes32 public constant RECYCLER_ROLE = keccak256(\"RECYCLER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":762:817  uint256 public constant BASE_RECYCLING_REWARD = 7 ether */\n    tag_169:\n        /* \"contracts/EWasteToken.sol\":810:817  7 ether */\n      0x6124fee993bc0000\n        /* \"contracts/EWasteToken.sol\":762:817  uint256 public constant BASE_RECYCLING_REWARD = 7 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":699:755  uint256 public constant BASE_COLLECTION_REWARD = 5 ether */\n    tag_172:\n        /* \"contracts/EWasteToken.sol\":748:755  5 ether */\n      0x4563918244f40000\n        /* \"contracts/EWasteToken.sol\":699:755  uint256 public constant BASE_COLLECTION_REWARD = 5 ether */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_337\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_339\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_341\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":5541:5851  function resellItem(uint256 _id) external {... */\n    tag_179:\n        /* \"contracts/EWasteToken.sol\":5628:5645  Status.DISMANTLED */\n      0x05\n        /* \"contracts/EWasteToken.sol\":5602:5645  wasteItems[_id].status == Status.DISMANTLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_343\n      jumpi\n      tag_344\n      tag_237\n      jump\t// in\n    tag_344:\n    tag_343:\n        /* \"contracts/EWasteToken.sol\":5602:5612  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":5602:5617  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5613:5616  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5602:5617  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":5602:5624  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EWasteToken.sol\":5602:5645  wasteItems[_id].status == Status.DISMANTLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_345\n      jumpi\n      tag_346\n      tag_237\n      jump\t// in\n    tag_346:\n    tag_345:\n      eq\n        /* \"contracts/EWasteToken.sol\":5594:5664  require(wasteItems[_id].status == Status.DISMANTLED, \"Invalid status\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap1\n      tag_253\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_347:\n        /* \"contracts/EWasteToken.sol\":5717:5727  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":5683:5727  wasteItems[_id].currentHandler == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":5683:5693  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":5683:5698  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5694:5697  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5683:5698  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":5683:5713  wasteItems[_id].currentHandler */\n      0x05\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":5683:5727  wasteItems[_id].currentHandler == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/EWasteToken.sol\":5675:5741  require(wasteItems[_id].currentHandler == msg.sender, \"Not owner\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_349:\n        /* \"contracts/EWasteToken.sol\":5787:5800  Status.RESOLD */\n      0x06\n        /* \"contracts/EWasteToken.sol\":5762:5772  wasteItems */\n      dup1\n        /* \"contracts/EWasteToken.sol\":5762:5777  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":5773:5776  _id */\n      dup4\n        /* \"contracts/EWasteToken.sol\":5762:5777  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":5762:5784  wasteItems[_id].status */\n      0x05\n      add\n      0x00\n        /* \"contracts/EWasteToken.sol\":5762:5800  wasteItems[_id].status = Status.RESOLD */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_352\n      jumpi\n      tag_353\n      tag_237\n      jump\t// in\n    tag_353:\n    tag_352:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EWasteToken.sol\":5832:5842  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":5816:5843  ItemResold(_id, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EWasteToken.sol\":5827:5830  _id */\n      dup2\n        /* \"contracts/EWasteToken.sol\":5816:5843  ItemResold(_id, msg.sender) */\n      0x278ab484a5db5fc05f3a869b94767b4a630943a85f774aa97a69aedb086c269c\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EWasteToken.sol\":5541:5851  function resellItem(uint256 _id) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":883:938  uint256 public constant BASE_DISMANTLE_REWARD = 6 ether */\n    tag_186:\n        /* \"contracts/EWasteToken.sol\":931:938  6 ether */\n      0x53444835ec580000\n        /* \"contracts/EWasteToken.sol\":883:938  uint256 public constant BASE_DISMANTLE_REWARD = 6 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":7884:8002  function mintTokens(address _to, uint256 _amount) external onlyRole(ADMIN_ROLE) {... */\n    tag_190:\n        /* \"contracts/EWasteToken.sol\":580:603  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_356\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_356:\n        /* \"contracts/EWasteToken.sol\":7975:7994  _mint(_to, _amount) */\n      tag_358\n        /* \"contracts/EWasteToken.sol\":7981:7984  _to */\n      dup4\n        /* \"contracts/EWasteToken.sol\":7986:7993  _amount */\n      dup4\n        /* \"contracts/EWasteToken.sol\":7975:7980  _mint */\n      tag_359\n        /* \"contracts/EWasteToken.sol\":7975:7994  _mint(_to, _amount) */\n      jump\t// in\n    tag_358:\n        /* \"contracts/EWasteToken.sol\":7884:8002  function mintTokens(address _to, uint256 _amount) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_363\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_364\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_371\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_364\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_379\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_381\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_382\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_383\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_385\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_387\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_384)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_384:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":5907:6423  function _calculateAndMintReward(uint256 _id, Status _status) internal returns (uint256) {... */\n    tag_257:\n        /* \"contracts/EWasteToken.sol\":5987:5994  uint256 */\n      0x00\n        /* \"contracts/EWasteToken.sol\":6008:6020  uint256 base */\n      dup1\n        /* \"contracts/EWasteToken.sol\":6022:6036  uint256 qBonus */\n      0x00\n        /* \"contracts/EWasteToken.sol\":6038:6052  uint256 wBonus */\n      dup1\n        /* \"contracts/EWasteToken.sol\":6056:6090  _getRewardComponents(_id, _status) */\n      tag_390\n        /* \"contracts/EWasteToken.sol\":6077:6080  _id */\n      dup7\n        /* \"contracts/EWasteToken.sol\":6082:6089  _status */\n      dup7\n        /* \"contracts/EWasteToken.sol\":6056:6076  _getRewardComponents */\n      tag_391\n        /* \"contracts/EWasteToken.sol\":6056:6090  _getRewardComponents(_id, _status) */\n      jump\t// in\n    tag_390:\n        /* \"contracts/EWasteToken.sol\":6007:6090  (uint256 base, uint256 qBonus, uint256 wBonus) = _getRewardComponents(_id, _status) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/EWasteToken.sol\":6101:6120  uint256 totalReward */\n      0x00\n        /* \"contracts/EWasteToken.sol\":6139:6145  wBonus */\n      dup2\n        /* \"contracts/EWasteToken.sol\":6130:6136  qBonus */\n      dup4\n        /* \"contracts/EWasteToken.sol\":6123:6127  base */\n      dup6\n        /* \"contracts/EWasteToken.sol\":6123:6136  base + qBonus */\n      tag_392\n      swap2\n      swap1\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"contracts/EWasteToken.sol\":6123:6145  base + qBonus + wBonus */\n      tag_394\n      swap2\n      swap1\n      tag_393\n      jump\t// in\n    tag_394:\n        /* \"contracts/EWasteToken.sol\":6101:6145  uint256 totalReward = base + qBonus + wBonus */\n      swap1\n      pop\n        /* \"contracts/EWasteToken.sol\":6166:6196  _mint(msg.sender, totalReward) */\n      tag_395\n        /* \"contracts/EWasteToken.sol\":6172:6182  msg.sender */\n      caller\n        /* \"contracts/EWasteToken.sol\":6184:6195  totalReward */\n      dup3\n        /* \"contracts/EWasteToken.sol\":6166:6171  _mint */\n      tag_359\n        /* \"contracts/EWasteToken.sol\":6166:6196  _mint(msg.sender, totalReward) */\n      jump\t// in\n    tag_395:\n        /* \"contracts/EWasteToken.sol\":6253:6256  _id */\n      dup7\n        /* \"contracts/EWasteToken.sol\":6222:6376  RewardCalculated(... */\n      0x8841d639ba79954a7c240dde37b5d6e3990383dc2f87c13e288e408108efb457\n        /* \"contracts/EWasteToken.sol\":6271:6278  _status */\n      dup8\n        /* \"contracts/EWasteToken.sol\":6293:6297  base */\n      dup7\n        /* \"contracts/EWasteToken.sol\":6312:6318  qBonus */\n      dup7\n        /* \"contracts/EWasteToken.sol\":6333:6339  wBonus */\n      dup7\n        /* \"contracts/EWasteToken.sol\":6354:6365  totalReward */\n      dup7\n        /* \"contracts/EWasteToken.sol\":6222:6376  RewardCalculated(... */\n      mload(0x40)\n      tag_396\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/EWasteToken.sol\":6404:6415  totalReward */\n      dup1\n        /* \"contracts/EWasteToken.sol\":6397:6415  return totalReward */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/EWasteToken.sol\":5907:6423  function _calculateAndMintReward(uint256 _id, Status _status) internal returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_399\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_400\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_401\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_398)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_398:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_404\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_405\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_406\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_379\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_413\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_415\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_416\n      swap2\n      swap1\n      tag_393\n      jump\t// in\n    tag_416:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_417)\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_419\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_370\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_421)\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_421:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_422\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_422:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_383:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_424\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_425\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap3\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_425:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EWasteToken.sol\":6431:7719  function _getRewardComponents(uint256 _id, Status _status) internal view returns (... */\n    tag_391:\n        /* \"contracts/EWasteToken.sol\":6523:6541  uint256 baseReward */\n      0x00\n        /* \"contracts/EWasteToken.sol\":6552:6573  uint256 quantityBonus */\n      dup1\n        /* \"contracts/EWasteToken.sol\":6584:6603  uint256 weightBonus */\n      0x00\n        /* \"contracts/EWasteToken.sol\":6622:6643  WasteItem memory item */\n      dup1\n        /* \"contracts/EWasteToken.sol\":6646:6656  wasteItems */\n      0x06\n        /* \"contracts/EWasteToken.sol\":6646:6661  wasteItems[_id] */\n      0x00\n        /* \"contracts/EWasteToken.sol\":6657:6660  _id */\n      dup8\n        /* \"contracts/EWasteToken.sol\":6646:6661  wasteItems[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EWasteToken.sol\":6622:6661  WasteItem memory item = wasteItems[_id] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_429\n      swap1\n      tag_197\n      jump\t// in\n    tag_429:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_430\n      swap1\n      tag_197\n      jump\t// in\n    tag_430:\n      dup1\n      iszero\n      tag_431\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_432\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_431)\n    tag_432:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_433:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_433\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_431:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x06\n      dup2\n      gt\n      iszero\n      tag_434\n      jumpi\n      tag_435\n      tag_237\n      jump\t// in\n    tag_435:\n    tag_434:\n      0x06\n      dup2\n      gt\n      iszero\n      tag_436\n      jumpi\n      tag_437\n      tag_237\n      jump\t// in\n    tag_437:\n    tag_436:\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/EWasteToken.sol\":6697:6711  Status.CREATED */\n      0x00\n        /* \"contracts/EWasteToken.sol\":6686:6711  _status == Status.CREATED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_438\n      jumpi\n      tag_439\n      tag_237\n      jump\t// in\n    tag_439:\n    tag_438:\n        /* \"contracts/EWasteToken.sol\":6686:6693  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":6686:6711  _status == Status.CREATED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_440\n      jumpi\n      tag_441\n      tag_237\n      jump\t// in\n    tag_441:\n    tag_440:\n      sub\n        /* \"contracts/EWasteToken.sol\":6682:7170  if (_status == Status.CREATED) {... */\n      tag_442\n      jumpi\n        /* \"contracts/EWasteToken.sol\":684:692  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/EWasteToken.sol\":6728:6761  baseReward = BASE_DISPOSAL_REWARD */\n      swap4\n      pop\n        /* \"contracts/EWasteToken.sol\":6682:7170  if (_status == Status.CREATED) {... */\n      jump(tag_443)\n    tag_442:\n        /* \"contracts/EWasteToken.sol\":6794:6810  Status.COLLECTED */\n      0x01\n        /* \"contracts/EWasteToken.sol\":6783:6810  _status == Status.COLLECTED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_444\n      jumpi\n      tag_445\n      tag_237\n      jump\t// in\n    tag_445:\n    tag_444:\n        /* \"contracts/EWasteToken.sol\":6783:6790  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":6783:6810  _status == Status.COLLECTED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_446\n      jumpi\n      tag_447\n      tag_237\n      jump\t// in\n    tag_447:\n    tag_446:\n      sub\n        /* \"contracts/EWasteToken.sol\":6779:7170  if (_status == Status.COLLECTED) {... */\n      tag_448\n      jumpi\n        /* \"contracts/EWasteToken.sol\":748:755  5 ether */\n      0x4563918244f40000\n        /* \"contracts/EWasteToken.sol\":6827:6862  baseReward = BASE_COLLECTION_REWARD */\n      swap4\n      pop\n        /* \"contracts/EWasteToken.sol\":6779:7170  if (_status == Status.COLLECTED) {... */\n      jump(tag_449)\n    tag_448:\n        /* \"contracts/EWasteToken.sol\":6895:6910  Status.REPAIRED */\n      0x03\n        /* \"contracts/EWasteToken.sol\":6884:6910  _status == Status.REPAIRED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_450\n      jumpi\n      tag_451\n      tag_237\n      jump\t// in\n    tag_451:\n    tag_450:\n        /* \"contracts/EWasteToken.sol\":6884:6891  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":6884:6910  _status == Status.REPAIRED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_452\n      jumpi\n      tag_453\n      tag_237\n      jump\t// in\n    tag_453:\n    tag_452:\n      sub\n        /* \"contracts/EWasteToken.sol\":6880:7170  if (_status == Status.REPAIRED) {... */\n      tag_454\n      jumpi\n        /* \"contracts/EWasteToken.sol\":869:876  8 ether */\n      0x6f05b59d3b200000\n        /* \"contracts/EWasteToken.sol\":6927:6958  baseReward = BASE_REPAIR_REWARD */\n      swap4\n      pop\n        /* \"contracts/EWasteToken.sol\":6880:7170  if (_status == Status.REPAIRED) {... */\n      jump(tag_455)\n    tag_454:\n        /* \"contracts/EWasteToken.sol\":6991:7006  Status.RECYCLED */\n      0x04\n        /* \"contracts/EWasteToken.sol\":6980:7006  _status == Status.RECYCLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_456\n      jumpi\n      tag_457\n      tag_237\n      jump\t// in\n    tag_457:\n    tag_456:\n        /* \"contracts/EWasteToken.sol\":6980:6987  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":6980:7006  _status == Status.RECYCLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_458\n      jumpi\n      tag_459\n      tag_237\n      jump\t// in\n    tag_459:\n    tag_458:\n      sub\n        /* \"contracts/EWasteToken.sol\":6976:7170  if (_status == Status.RECYCLED) {... */\n      tag_460\n      jumpi\n        /* \"contracts/EWasteToken.sol\":810:817  7 ether */\n      0x6124fee993bc0000\n        /* \"contracts/EWasteToken.sol\":7023:7057  baseReward = BASE_RECYCLING_REWARD */\n      swap4\n      pop\n        /* \"contracts/EWasteToken.sol\":6976:7170  if (_status == Status.RECYCLED) {... */\n      jump(tag_461)\n    tag_460:\n        /* \"contracts/EWasteToken.sol\":7090:7107  Status.DISMANTLED */\n      0x05\n        /* \"contracts/EWasteToken.sol\":7079:7107  _status == Status.DISMANTLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_462\n      jumpi\n      tag_463\n      tag_237\n      jump\t// in\n    tag_463:\n    tag_462:\n        /* \"contracts/EWasteToken.sol\":7079:7086  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":7079:7107  _status == Status.DISMANTLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_464\n      jumpi\n      tag_465\n      tag_237\n      jump\t// in\n    tag_465:\n    tag_464:\n      sub\n        /* \"contracts/EWasteToken.sol\":7075:7170  if (_status == Status.DISMANTLED) {... */\n      tag_466\n      jumpi\n        /* \"contracts/EWasteToken.sol\":931:938  6 ether */\n      0x53444835ec580000\n        /* \"contracts/EWasteToken.sol\":7124:7158  baseReward = BASE_DISMANTLE_REWARD */\n      swap4\n      pop\n        /* \"contracts/EWasteToken.sol\":7075:7170  if (_status == Status.DISMANTLED) {... */\n    tag_466:\n        /* \"contracts/EWasteToken.sol\":6976:7170  if (_status == Status.RECYCLED) {... */\n    tag_461:\n        /* \"contracts/EWasteToken.sol\":6880:7170  if (_status == Status.REPAIRED) {... */\n    tag_455:\n        /* \"contracts/EWasteToken.sol\":6779:7170  if (_status == Status.COLLECTED) {... */\n    tag_449:\n        /* \"contracts/EWasteToken.sol\":6682:7170  if (_status == Status.CREATED) {... */\n    tag_443:\n        /* \"contracts/EWasteToken.sol\":7216:7220  item */\n      dup1\n        /* \"contracts/EWasteToken.sol\":7216:7229  item.quantity */\n      0x80\n      add\n      mload\n        /* \"contracts/EWasteToken.sol\":987:994  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/EWasteToken.sol\":7198:7229  PER_ITEM_REWARD * item.quantity */\n      tag_467\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"contracts/EWasteToken.sol\":7182:7229  quantityBonus = PER_ITEM_REWARD * item.quantity */\n      swap3\n      pop\n        /* \"contracts/EWasteToken.sol\":7316:7331  Status.REPAIRED */\n      0x03\n        /* \"contracts/EWasteToken.sol\":7305:7331  _status == Status.REPAIRED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_469\n      jumpi\n      tag_470\n      tag_237\n      jump\t// in\n    tag_470:\n    tag_469:\n        /* \"contracts/EWasteToken.sol\":7305:7312  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":7305:7331  _status == Status.REPAIRED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_471\n      jumpi\n      tag_472\n      tag_237\n      jump\t// in\n    tag_472:\n    tag_471:\n      sub\n        /* \"contracts/EWasteToken.sol\":7301:7712  if (_status == Status.REPAIRED) {... */\n      tag_473\n      jumpi\n        /* \"contracts/EWasteToken.sol\":7365:7366  2 */\n      0x02\n        /* \"contracts/EWasteToken.sol\":7348:7366  quantityBonus *= 2 */\n      dup4\n      tag_474\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_474:\n      swap3\n      pop\n        /* \"contracts/EWasteToken.sol\":7301:7712  if (_status == Status.REPAIRED) {... */\n      jump(tag_475)\n    tag_473:\n        /* \"contracts/EWasteToken.sol\":7427:7442  Status.RECYCLED */\n      0x04\n        /* \"contracts/EWasteToken.sol\":7416:7442  _status == Status.RECYCLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_476\n      jumpi\n      tag_477\n      tag_237\n      jump\t// in\n    tag_477:\n    tag_476:\n        /* \"contracts/EWasteToken.sol\":7416:7423  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":7416:7442  _status == Status.RECYCLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_478\n      jumpi\n      tag_479\n      tag_237\n      jump\t// in\n    tag_479:\n    tag_478:\n      sub\n        /* \"contracts/EWasteToken.sol\":7412:7712  if (_status == Status.RECYCLED) {... */\n      tag_480\n      jumpi\n        /* \"contracts/EWasteToken.sol\":7507:7508  2 */\n      0x02\n        /* \"contracts/EWasteToken.sol\":7492:7496  item */\n      dup2\n        /* \"contracts/EWasteToken.sol\":7492:7503  item.weight */\n      0x60\n      add\n      mload\n        /* \"contracts/EWasteToken.sol\":1043:1053  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/EWasteToken.sol\":7474:7503  PER_GRAM_REWARD * item.weight */\n      tag_481\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_481:\n        /* \"contracts/EWasteToken.sol\":7473:7508  (PER_GRAM_REWARD * item.weight) * 2 */\n      tag_482\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_482:\n        /* \"contracts/EWasteToken.sol\":7459:7508  weightBonus = (PER_GRAM_REWARD * item.weight) * 2 */\n      swap2\n      pop\n        /* \"contracts/EWasteToken.sol\":7412:7712  if (_status == Status.RECYCLED) {... */\n      jump(tag_483)\n    tag_480:\n        /* \"contracts/EWasteToken.sol\":7541:7558  Status.DISMANTLED */\n      0x05\n        /* \"contracts/EWasteToken.sol\":7530:7558  _status == Status.DISMANTLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_484\n      jumpi\n      tag_485\n      tag_237\n      jump\t// in\n    tag_485:\n    tag_484:\n        /* \"contracts/EWasteToken.sol\":7530:7537  _status */\n      dup6\n        /* \"contracts/EWasteToken.sol\":7530:7558  _status == Status.DISMANTLED */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_486\n      jumpi\n      tag_487\n      tag_237\n      jump\t// in\n    tag_487:\n    tag_486:\n      sub\n        /* \"contracts/EWasteToken.sol\":7526:7712  if (_status == Status.DISMANTLED) {... */\n      tag_488\n      jumpi\n        /* \"contracts/EWasteToken.sol\":7623:7624  3 */\n      0x03\n        /* \"contracts/EWasteToken.sol\":7608:7612  item */\n      dup2\n        /* \"contracts/EWasteToken.sol\":7608:7619  item.weight */\n      0x60\n      add\n      mload\n        /* \"contracts/EWasteToken.sol\":1043:1053  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/EWasteToken.sol\":7590:7619  PER_GRAM_REWARD * item.weight */\n      tag_489\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_489:\n        /* \"contracts/EWasteToken.sol\":7589:7624  (PER_GRAM_REWARD * item.weight) * 3 */\n      tag_490\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_490:\n        /* \"contracts/EWasteToken.sol\":7575:7624  weightBonus = (PER_GRAM_REWARD * item.weight) * 3 */\n      swap2\n      pop\n        /* \"contracts/EWasteToken.sol\":7526:7712  if (_status == Status.DISMANTLED) {... */\n      jump(tag_491)\n    tag_488:\n        /* \"contracts/EWasteToken.sol\":7689:7693  item */\n      dup1\n        /* \"contracts/EWasteToken.sol\":7689:7700  item.weight */\n      0x60\n      add\n      mload\n        /* \"contracts/EWasteToken.sol\":1043:1053  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/EWasteToken.sol\":7671:7700  PER_GRAM_REWARD * item.weight */\n      tag_492\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_492:\n        /* \"contracts/EWasteToken.sol\":7657:7700  weightBonus = PER_GRAM_REWARD * item.weight */\n      swap2\n      pop\n        /* \"contracts/EWasteToken.sol\":7526:7712  if (_status == Status.DISMANTLED) {... */\n    tag_491:\n        /* \"contracts/EWasteToken.sol\":7412:7712  if (_status == Status.RECYCLED) {... */\n    tag_483:\n        /* \"contracts/EWasteToken.sol\":7301:7712  if (_status == Status.REPAIRED) {... */\n    tag_475:\n        /* \"contracts/EWasteToken.sol\":6611:7719  {... */\n      pop\n        /* \"contracts/EWasteToken.sol\":6431:7719  function _getRewardComponents(uint256 _id, Status _status) internal view returns (... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_493:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_494:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_495:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_496:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_497:\n        /* \"#utility.yul\":561:584   */\n      tag_567\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_496\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_568:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_498:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_570\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_497\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_51:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_573\n      tag_494\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":833:952   */\n    tag_572:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_574\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_498\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_499:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_500:\n        /* \"#utility.yul\":1268:1289   */\n      tag_577\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_499\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_54:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_579\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_500\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_501:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_502:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_503:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_504:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_505:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_585\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_501\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":2222:2293   */\n      tag_586\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_502\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_587\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_503\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":2392:2421   */\n      tag_588\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_504\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_58:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_590\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_505\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_506:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_507:\n        /* \"#utility.yul\":2909:2933   */\n      tag_593\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_506\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_594\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_594:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_508:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_596\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_507\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_61:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_599\n      tag_494\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":3185:3304   */\n    tag_598:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_600\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_508\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3562   */\n    tag_509:\n        /* \"#utility.yul\":3531:3555   */\n      tag_602\n        /* \"#utility.yul\":3549:3554   */\n      dup2\n        /* \"#utility.yul\":3531:3555   */\n      tag_506\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":3526:3529   */\n      dup3\n        /* \"#utility.yul\":3519:3556   */\n      mstore\n        /* \"#utility.yul\":3444:3562   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3568:3694   */\n    tag_510:\n        /* \"#utility.yul\":3605:3612   */\n      0x00\n        /* \"#utility.yul\":3645:3687   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3638:3643   */\n      dup3\n        /* \"#utility.yul\":3634:3688   */\n      and\n        /* \"#utility.yul\":3623:3688   */\n      swap1\n      pop\n        /* \"#utility.yul\":3568:3694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3700:3796   */\n    tag_511:\n        /* \"#utility.yul\":3737:3744   */\n      0x00\n        /* \"#utility.yul\":3766:3790   */\n      tag_605\n        /* \"#utility.yul\":3784:3789   */\n      dup3\n        /* \"#utility.yul\":3766:3790   */\n      tag_510\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":3755:3790   */\n      swap1\n      pop\n        /* \"#utility.yul\":3700:3796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:3920   */\n    tag_512:\n        /* \"#utility.yul\":3889:3913   */\n      tag_607\n        /* \"#utility.yul\":3907:3912   */\n      dup2\n        /* \"#utility.yul\":3889:3913   */\n      tag_511\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":3884:3887   */\n      dup3\n        /* \"#utility.yul\":3877:3914   */\n      mstore\n        /* \"#utility.yul\":3802:3920   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3926:4106   */\n    tag_237:\n        /* \"#utility.yul\":3974:4051   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3971:3972   */\n      0x00\n        /* \"#utility.yul\":3964:4052   */\n      mstore\n        /* \"#utility.yul\":4071:4075   */\n      0x21\n        /* \"#utility.yul\":4068:4069   */\n      0x04\n        /* \"#utility.yul\":4061:4076   */\n      mstore\n        /* \"#utility.yul\":4095:4099   */\n      0x24\n        /* \"#utility.yul\":4092:4093   */\n      0x00\n        /* \"#utility.yul\":4085:4100   */\n      revert\n        /* \"#utility.yul\":4112:4228   */\n    tag_513:\n        /* \"#utility.yul\":4196:4197   */\n      0x07\n        /* \"#utility.yul\":4189:4194   */\n      dup2\n        /* \"#utility.yul\":4186:4198   */\n      lt\n        /* \"#utility.yul\":4176:4222   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":4202:4220   */\n      tag_611\n      tag_237\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":4176:4222   */\n    tag_610:\n        /* \"#utility.yul\":4112:4228   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4234:4367   */\n    tag_514:\n        /* \"#utility.yul\":4282:4289   */\n      0x00\n        /* \"#utility.yul\":4311:4316   */\n      dup2\n        /* \"#utility.yul\":4300:4316   */\n      swap1\n      pop\n        /* \"#utility.yul\":4317:4361   */\n      tag_613\n        /* \"#utility.yul\":4355:4360   */\n      dup3\n        /* \"#utility.yul\":4317:4361   */\n      tag_513\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":4234:4367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4373:4506   */\n    tag_515:\n        /* \"#utility.yul\":4432:4441   */\n      0x00\n        /* \"#utility.yul\":4465:4500   */\n      tag_615\n        /* \"#utility.yul\":4494:4499   */\n      dup3\n        /* \"#utility.yul\":4465:4500   */\n      tag_514\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":4452:4500   */\n      swap1\n      pop\n        /* \"#utility.yul\":4373:4506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4512:4661   */\n    tag_516:\n        /* \"#utility.yul\":4608:4654   */\n      tag_617\n        /* \"#utility.yul\":4648:4653   */\n      dup2\n        /* \"#utility.yul\":4608:4654   */\n      tag_515\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":4603:4606   */\n      dup3\n        /* \"#utility.yul\":4596:4655   */\n      mstore\n        /* \"#utility.yul\":4512:4661   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4667:5761   */\n    tag_64:\n        /* \"#utility.yul\":4979:4983   */\n      0x00\n        /* \"#utility.yul\":5017:5020   */\n      0x0100\n        /* \"#utility.yul\":5006:5015   */\n      dup3\n        /* \"#utility.yul\":5002:5021   */\n      add\n        /* \"#utility.yul\":4994:5021   */\n      swap1\n      pop\n        /* \"#utility.yul\":5031:5102   */\n      tag_619\n        /* \"#utility.yul\":5099:5100   */\n      0x00\n        /* \"#utility.yul\":5088:5097   */\n      dup4\n        /* \"#utility.yul\":5084:5101   */\n      add\n        /* \"#utility.yul\":5075:5081   */\n      dup12\n        /* \"#utility.yul\":5031:5102   */\n      tag_509\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":5112:5184   */\n      tag_620\n        /* \"#utility.yul\":5180:5182   */\n      0x20\n        /* \"#utility.yul\":5169:5178   */\n      dup4\n        /* \"#utility.yul\":5165:5183   */\n      add\n        /* \"#utility.yul\":5156:5162   */\n      dup11\n        /* \"#utility.yul\":5112:5184   */\n      tag_512\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5231:5240   */\n      dup2\n        /* \"#utility.yul\":5225:5229   */\n      dup2\n        /* \"#utility.yul\":5221:5241   */\n      sub\n        /* \"#utility.yul\":5216:5218   */\n      0x40\n        /* \"#utility.yul\":5205:5214   */\n      dup4\n        /* \"#utility.yul\":5201:5219   */\n      add\n        /* \"#utility.yul\":5194:5242   */\n      mstore\n        /* \"#utility.yul\":5259:5337   */\n      tag_621\n        /* \"#utility.yul\":5332:5336   */\n      dup2\n        /* \"#utility.yul\":5323:5329   */\n      dup10\n        /* \"#utility.yul\":5259:5337   */\n      tag_505\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":5251:5337   */\n      swap1\n      pop\n        /* \"#utility.yul\":5347:5419   */\n      tag_622\n        /* \"#utility.yul\":5415:5417   */\n      0x60\n        /* \"#utility.yul\":5404:5413   */\n      dup4\n        /* \"#utility.yul\":5400:5418   */\n      add\n        /* \"#utility.yul\":5391:5397   */\n      dup9\n        /* \"#utility.yul\":5347:5419   */\n      tag_509\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":5429:5502   */\n      tag_623\n        /* \"#utility.yul\":5497:5500   */\n      0x80\n        /* \"#utility.yul\":5486:5495   */\n      dup4\n        /* \"#utility.yul\":5482:5501   */\n      add\n        /* \"#utility.yul\":5473:5479   */\n      dup8\n        /* \"#utility.yul\":5429:5502   */\n      tag_509\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":5512:5594   */\n      tag_624\n        /* \"#utility.yul\":5589:5592   */\n      0xa0\n        /* \"#utility.yul\":5578:5587   */\n      dup4\n        /* \"#utility.yul\":5574:5593   */\n      add\n        /* \"#utility.yul\":5565:5571   */\n      dup7\n        /* \"#utility.yul\":5512:5594   */\n      tag_516\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":5604:5677   */\n      tag_625\n        /* \"#utility.yul\":5672:5675   */\n      0xc0\n        /* \"#utility.yul\":5661:5670   */\n      dup4\n        /* \"#utility.yul\":5657:5676   */\n      add\n        /* \"#utility.yul\":5648:5654   */\n      dup6\n        /* \"#utility.yul\":5604:5677   */\n      tag_512\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":5687:5754   */\n      tag_626\n        /* \"#utility.yul\":5749:5752   */\n      0xe0\n        /* \"#utility.yul\":5738:5747   */\n      dup4\n        /* \"#utility.yul\":5734:5753   */\n      add\n        /* \"#utility.yul\":5725:5731   */\n      dup5\n        /* \"#utility.yul\":5687:5754   */\n      tag_500\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":4667:5761   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5767:5889   */\n    tag_517:\n        /* \"#utility.yul\":5840:5864   */\n      tag_628\n        /* \"#utility.yul\":5858:5863   */\n      dup2\n        /* \"#utility.yul\":5840:5864   */\n      tag_511\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":5833:5838   */\n      dup2\n        /* \"#utility.yul\":5830:5865   */\n      eq\n        /* \"#utility.yul\":5820:5883   */\n      tag_629\n      jumpi\n        /* \"#utility.yul\":5879:5880   */\n      0x00\n        /* \"#utility.yul\":5876:5877   */\n      dup1\n        /* \"#utility.yul\":5869:5881   */\n      revert\n        /* \"#utility.yul\":5820:5883   */\n    tag_629:\n        /* \"#utility.yul\":5767:5889   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5895:6034   */\n    tag_518:\n        /* \"#utility.yul\":5941:5946   */\n      0x00\n        /* \"#utility.yul\":5979:5985   */\n      dup2\n        /* \"#utility.yul\":5966:5986   */\n      calldataload\n        /* \"#utility.yul\":5957:5986   */\n      swap1\n      pop\n        /* \"#utility.yul\":5995:6028   */\n      tag_631\n        /* \"#utility.yul\":6022:6027   */\n      dup2\n        /* \"#utility.yul\":5995:6028   */\n      tag_517\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":5895:6034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6040:6514   */\n    tag_67:\n        /* \"#utility.yul\":6108:6114   */\n      0x00\n        /* \"#utility.yul\":6116:6122   */\n      dup1\n        /* \"#utility.yul\":6165:6167   */\n      0x40\n        /* \"#utility.yul\":6153:6162   */\n      dup4\n        /* \"#utility.yul\":6144:6151   */\n      dup6\n        /* \"#utility.yul\":6140:6163   */\n      sub\n        /* \"#utility.yul\":6136:6168   */\n      slt\n        /* \"#utility.yul\":6133:6252   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":6171:6250   */\n      tag_634\n      tag_494\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":6133:6252   */\n    tag_633:\n        /* \"#utility.yul\":6291:6292   */\n      0x00\n        /* \"#utility.yul\":6316:6369   */\n      tag_635\n        /* \"#utility.yul\":6361:6368   */\n      dup6\n        /* \"#utility.yul\":6352:6358   */\n      dup3\n        /* \"#utility.yul\":6341:6350   */\n      dup7\n        /* \"#utility.yul\":6337:6359   */\n      add\n        /* \"#utility.yul\":6316:6369   */\n      tag_518\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":6306:6369   */\n      swap3\n      pop\n        /* \"#utility.yul\":6262:6379   */\n      pop\n        /* \"#utility.yul\":6418:6420   */\n      0x20\n        /* \"#utility.yul\":6444:6497   */\n      tag_636\n        /* \"#utility.yul\":6489:6496   */\n      dup6\n        /* \"#utility.yul\":6480:6486   */\n      dup3\n        /* \"#utility.yul\":6469:6478   */\n      dup7\n        /* \"#utility.yul\":6465:6487   */\n      add\n        /* \"#utility.yul\":6444:6497   */\n      tag_508\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":6434:6497   */\n      swap2\n      pop\n        /* \"#utility.yul\":6389:6507   */\n      pop\n        /* \"#utility.yul\":6040:6514   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6520:6742   */\n    tag_73:\n        /* \"#utility.yul\":6613:6617   */\n      0x00\n        /* \"#utility.yul\":6651:6653   */\n      0x20\n        /* \"#utility.yul\":6640:6649   */\n      dup3\n        /* \"#utility.yul\":6636:6654   */\n      add\n        /* \"#utility.yul\":6628:6654   */\n      swap1\n      pop\n        /* \"#utility.yul\":6664:6735   */\n      tag_638\n        /* \"#utility.yul\":6732:6733   */\n      0x00\n        /* \"#utility.yul\":6721:6730   */\n      dup4\n        /* \"#utility.yul\":6717:6734   */\n      add\n        /* \"#utility.yul\":6708:6714   */\n      dup5\n        /* \"#utility.yul\":6664:6735   */\n      tag_509\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":6520:6742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6748:7367   */\n    tag_79:\n        /* \"#utility.yul\":6825:6831   */\n      0x00\n        /* \"#utility.yul\":6833:6839   */\n      dup1\n        /* \"#utility.yul\":6841:6847   */\n      0x00\n        /* \"#utility.yul\":6890:6892   */\n      0x60\n        /* \"#utility.yul\":6878:6887   */\n      dup5\n        /* \"#utility.yul\":6869:6876   */\n      dup7\n        /* \"#utility.yul\":6865:6888   */\n      sub\n        /* \"#utility.yul\":6861:6893   */\n      slt\n        /* \"#utility.yul\":6858:6977   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":6896:6975   */\n      tag_641\n      tag_494\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":6858:6977   */\n    tag_640:\n        /* \"#utility.yul\":7016:7017   */\n      0x00\n        /* \"#utility.yul\":7041:7094   */\n      tag_642\n        /* \"#utility.yul\":7086:7093   */\n      dup7\n        /* \"#utility.yul\":7077:7083   */\n      dup3\n        /* \"#utility.yul\":7066:7075   */\n      dup8\n        /* \"#utility.yul\":7062:7084   */\n      add\n        /* \"#utility.yul\":7041:7094   */\n      tag_518\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":7031:7094   */\n      swap4\n      pop\n        /* \"#utility.yul\":6987:7104   */\n      pop\n        /* \"#utility.yul\":7143:7145   */\n      0x20\n        /* \"#utility.yul\":7169:7222   */\n      tag_643\n        /* \"#utility.yul\":7214:7221   */\n      dup7\n        /* \"#utility.yul\":7205:7211   */\n      dup3\n        /* \"#utility.yul\":7194:7203   */\n      dup8\n        /* \"#utility.yul\":7190:7212   */\n      add\n        /* \"#utility.yul\":7169:7222   */\n      tag_518\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":7159:7222   */\n      swap3\n      pop\n        /* \"#utility.yul\":7114:7232   */\n      pop\n        /* \"#utility.yul\":7271:7273   */\n      0x40\n        /* \"#utility.yul\":7297:7350   */\n      tag_644\n        /* \"#utility.yul\":7342:7349   */\n      dup7\n        /* \"#utility.yul\":7333:7339   */\n      dup3\n        /* \"#utility.yul\":7322:7331   */\n      dup8\n        /* \"#utility.yul\":7318:7340   */\n      add\n        /* \"#utility.yul\":7297:7350   */\n      tag_508\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":7287:7350   */\n      swap2\n      pop\n        /* \"#utility.yul\":7242:7360   */\n      pop\n        /* \"#utility.yul\":6748:7367   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7373:7450   */\n    tag_519:\n        /* \"#utility.yul\":7410:7417   */\n      0x00\n        /* \"#utility.yul\":7439:7444   */\n      dup2\n        /* \"#utility.yul\":7428:7444   */\n      swap1\n      pop\n        /* \"#utility.yul\":7373:7450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7456:7578   */\n    tag_520:\n        /* \"#utility.yul\":7529:7553   */\n      tag_647\n        /* \"#utility.yul\":7547:7552   */\n      dup2\n        /* \"#utility.yul\":7529:7553   */\n      tag_519\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":7522:7527   */\n      dup2\n        /* \"#utility.yul\":7519:7554   */\n      eq\n        /* \"#utility.yul\":7509:7572   */\n      tag_648\n      jumpi\n        /* \"#utility.yul\":7568:7569   */\n      0x00\n        /* \"#utility.yul\":7565:7566   */\n      dup1\n        /* \"#utility.yul\":7558:7570   */\n      revert\n        /* \"#utility.yul\":7509:7572   */\n    tag_648:\n        /* \"#utility.yul\":7456:7578   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7584:7723   */\n    tag_521:\n        /* \"#utility.yul\":7630:7635   */\n      0x00\n        /* \"#utility.yul\":7668:7674   */\n      dup2\n        /* \"#utility.yul\":7655:7675   */\n      calldataload\n        /* \"#utility.yul\":7646:7675   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7717   */\n      tag_650\n        /* \"#utility.yul\":7711:7716   */\n      dup2\n        /* \"#utility.yul\":7684:7717   */\n      tag_520\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":7584:7723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7729:8058   */\n    tag_84:\n        /* \"#utility.yul\":7788:7794   */\n      0x00\n        /* \"#utility.yul\":7837:7839   */\n      0x20\n        /* \"#utility.yul\":7825:7834   */\n      dup3\n        /* \"#utility.yul\":7816:7823   */\n      dup5\n        /* \"#utility.yul\":7812:7835   */\n      sub\n        /* \"#utility.yul\":7808:7840   */\n      slt\n        /* \"#utility.yul\":7805:7924   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":7843:7922   */\n      tag_653\n      tag_494\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":7805:7924   */\n    tag_652:\n        /* \"#utility.yul\":7963:7964   */\n      0x00\n        /* \"#utility.yul\":7988:8041   */\n      tag_654\n        /* \"#utility.yul\":8033:8040   */\n      dup5\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8013:8022   */\n      dup6\n        /* \"#utility.yul\":8009:8031   */\n      add\n        /* \"#utility.yul\":7988:8041   */\n      tag_521\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":7978:8041   */\n      swap2\n      pop\n        /* \"#utility.yul\":7934:8051   */\n      pop\n        /* \"#utility.yul\":7729:8058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8064:8182   */\n    tag_522:\n        /* \"#utility.yul\":8151:8175   */\n      tag_656\n        /* \"#utility.yul\":8169:8174   */\n      dup2\n        /* \"#utility.yul\":8151:8175   */\n      tag_519\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":8146:8149   */\n      dup3\n        /* \"#utility.yul\":8139:8176   */\n      mstore\n        /* \"#utility.yul\":8064:8182   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8188:8410   */\n    tag_87:\n        /* \"#utility.yul\":8281:8285   */\n      0x00\n        /* \"#utility.yul\":8319:8321   */\n      0x20\n        /* \"#utility.yul\":8308:8317   */\n      dup3\n        /* \"#utility.yul\":8304:8322   */\n      add\n        /* \"#utility.yul\":8296:8322   */\n      swap1\n      pop\n        /* \"#utility.yul\":8332:8403   */\n      tag_658\n        /* \"#utility.yul\":8400:8401   */\n      0x00\n        /* \"#utility.yul\":8389:8398   */\n      dup4\n        /* \"#utility.yul\":8385:8402   */\n      add\n        /* \"#utility.yul\":8376:8382   */\n      dup5\n        /* \"#utility.yul\":8332:8403   */\n      tag_522\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":8188:8410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8416:8890   */\n    tag_90:\n        /* \"#utility.yul\":8484:8490   */\n      0x00\n        /* \"#utility.yul\":8492:8498   */\n      dup1\n        /* \"#utility.yul\":8541:8543   */\n      0x40\n        /* \"#utility.yul\":8529:8538   */\n      dup4\n        /* \"#utility.yul\":8520:8527   */\n      dup6\n        /* \"#utility.yul\":8516:8539   */\n      sub\n        /* \"#utility.yul\":8512:8544   */\n      slt\n        /* \"#utility.yul\":8509:8628   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":8547:8626   */\n      tag_661\n      tag_494\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":8509:8628   */\n    tag_660:\n        /* \"#utility.yul\":8667:8668   */\n      0x00\n        /* \"#utility.yul\":8692:8745   */\n      tag_662\n        /* \"#utility.yul\":8737:8744   */\n      dup6\n        /* \"#utility.yul\":8728:8734   */\n      dup3\n        /* \"#utility.yul\":8717:8726   */\n      dup7\n        /* \"#utility.yul\":8713:8735   */\n      add\n        /* \"#utility.yul\":8692:8745   */\n      tag_521\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":8682:8745   */\n      swap3\n      pop\n        /* \"#utility.yul\":8638:8755   */\n      pop\n        /* \"#utility.yul\":8794:8796   */\n      0x20\n        /* \"#utility.yul\":8820:8873   */\n      tag_663\n        /* \"#utility.yul\":8865:8872   */\n      dup6\n        /* \"#utility.yul\":8856:8862   */\n      dup3\n        /* \"#utility.yul\":8845:8854   */\n      dup7\n        /* \"#utility.yul\":8841:8863   */\n      add\n        /* \"#utility.yul\":8820:8873   */\n      tag_518\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":8810:8873   */\n      swap2\n      pop\n        /* \"#utility.yul\":8765:8883   */\n      pop\n        /* \"#utility.yul\":8416:8890   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8896:8982   */\n    tag_523:\n        /* \"#utility.yul\":8931:8938   */\n      0x00\n        /* \"#utility.yul\":8971:8975   */\n      0xff\n        /* \"#utility.yul\":8964:8969   */\n      dup3\n        /* \"#utility.yul\":8960:8976   */\n      and\n        /* \"#utility.yul\":8949:8976   */\n      swap1\n      pop\n        /* \"#utility.yul\":8896:8982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8988:9100   */\n    tag_524:\n        /* \"#utility.yul\":9071:9093   */\n      tag_666\n        /* \"#utility.yul\":9087:9092   */\n      dup2\n        /* \"#utility.yul\":9071:9093   */\n      tag_523\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":9066:9069   */\n      dup3\n        /* \"#utility.yul\":9059:9094   */\n      mstore\n        /* \"#utility.yul\":8988:9100   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9106:9320   */\n    tag_95:\n        /* \"#utility.yul\":9195:9199   */\n      0x00\n        /* \"#utility.yul\":9233:9235   */\n      0x20\n        /* \"#utility.yul\":9222:9231   */\n      dup3\n        /* \"#utility.yul\":9218:9236   */\n      add\n        /* \"#utility.yul\":9210:9236   */\n      swap1\n      pop\n        /* \"#utility.yul\":9246:9313   */\n      tag_668\n        /* \"#utility.yul\":9310:9311   */\n      0x00\n        /* \"#utility.yul\":9299:9308   */\n      dup4\n        /* \"#utility.yul\":9295:9312   */\n      add\n        /* \"#utility.yul\":9286:9292   */\n      dup5\n        /* \"#utility.yul\":9246:9313   */\n      tag_524\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":9106:9320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9326:9443   */\n    tag_525:\n        /* \"#utility.yul\":9435:9436   */\n      0x00\n        /* \"#utility.yul\":9432:9433   */\n      dup1\n        /* \"#utility.yul\":9425:9437   */\n      revert\n        /* \"#utility.yul\":9449:9566   */\n    tag_526:\n        /* \"#utility.yul\":9558:9559   */\n      0x00\n        /* \"#utility.yul\":9555:9556   */\n      dup1\n        /* \"#utility.yul\":9548:9560   */\n      revert\n        /* \"#utility.yul\":9572:9752   */\n    tag_527:\n        /* \"#utility.yul\":9620:9697   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9617:9618   */\n      0x00\n        /* \"#utility.yul\":9610:9698   */\n      mstore\n        /* \"#utility.yul\":9717:9721   */\n      0x41\n        /* \"#utility.yul\":9714:9715   */\n      0x04\n        /* \"#utility.yul\":9707:9722   */\n      mstore\n        /* \"#utility.yul\":9741:9745   */\n      0x24\n        /* \"#utility.yul\":9738:9739   */\n      0x00\n        /* \"#utility.yul\":9731:9746   */\n      revert\n        /* \"#utility.yul\":9758:10039   */\n    tag_528:\n        /* \"#utility.yul\":9841:9868   */\n      tag_673\n        /* \"#utility.yul\":9863:9867   */\n      dup3\n        /* \"#utility.yul\":9841:9868   */\n      tag_504\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":9833:9839   */\n      dup2\n        /* \"#utility.yul\":9829:9869   */\n      add\n        /* \"#utility.yul\":9971:9977   */\n      dup2\n        /* \"#utility.yul\":9959:9969   */\n      dup2\n        /* \"#utility.yul\":9956:9978   */\n      lt\n        /* \"#utility.yul\":9935:9953   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9923:9933   */\n      dup3\n        /* \"#utility.yul\":9920:9954   */\n      gt\n        /* \"#utility.yul\":9917:9979   */\n      or\n        /* \"#utility.yul\":9914:10002   */\n      iszero\n      tag_674\n      jumpi\n        /* \"#utility.yul\":9982:10000   */\n      tag_675\n      tag_527\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":9914:10002   */\n    tag_674:\n        /* \"#utility.yul\":10022:10032   */\n      dup1\n        /* \"#utility.yul\":10018:10020   */\n      0x40\n        /* \"#utility.yul\":10011:10033   */\n      mstore\n        /* \"#utility.yul\":9801:10039   */\n      pop\n        /* \"#utility.yul\":9758:10039   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10045:10174   */\n    tag_529:\n        /* \"#utility.yul\":10079:10085   */\n      0x00\n        /* \"#utility.yul\":10106:10126   */\n      tag_677\n      tag_493\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":10096:10126   */\n      swap1\n      pop\n        /* \"#utility.yul\":10135:10168   */\n      tag_678\n        /* \"#utility.yul\":10163:10167   */\n      dup3\n        /* \"#utility.yul\":10155:10161   */\n      dup3\n        /* \"#utility.yul\":10135:10168   */\n      tag_528\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":10045:10174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10180:10488   */\n    tag_530:\n        /* \"#utility.yul\":10242:10246   */\n      0x00\n        /* \"#utility.yul\":10332:10350   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10324:10330   */\n      dup3\n        /* \"#utility.yul\":10321:10351   */\n      gt\n        /* \"#utility.yul\":10318:10374   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":10354:10372   */\n      tag_681\n      tag_527\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":10318:10374   */\n    tag_680:\n        /* \"#utility.yul\":10392:10421   */\n      tag_682\n        /* \"#utility.yul\":10414:10420   */\n      dup3\n        /* \"#utility.yul\":10392:10421   */\n      tag_504\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":10384:10421   */\n      swap1\n      pop\n        /* \"#utility.yul\":10476:10480   */\n      0x20\n        /* \"#utility.yul\":10470:10474   */\n      dup2\n        /* \"#utility.yul\":10466:10481   */\n      add\n        /* \"#utility.yul\":10458:10481   */\n      swap1\n      pop\n        /* \"#utility.yul\":10180:10488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10494:10642   */\n    tag_531:\n        /* \"#utility.yul\":10592:10598   */\n      dup3\n        /* \"#utility.yul\":10587:10590   */\n      dup2\n        /* \"#utility.yul\":10582:10585   */\n      dup4\n        /* \"#utility.yul\":10569:10599   */\n      calldatacopy\n        /* \"#utility.yul\":10633:10634   */\n      0x00\n        /* \"#utility.yul\":10624:10630   */\n      dup4\n        /* \"#utility.yul\":10619:10622   */\n      dup4\n        /* \"#utility.yul\":10615:10631   */\n      add\n        /* \"#utility.yul\":10608:10635   */\n      mstore\n        /* \"#utility.yul\":10494:10642   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10648:11073   */\n    tag_532:\n        /* \"#utility.yul\":10726:10731   */\n      0x00\n        /* \"#utility.yul\":10751:10817   */\n      tag_685\n        /* \"#utility.yul\":10767:10816   */\n      tag_686\n        /* \"#utility.yul\":10809:10815   */\n      dup5\n        /* \"#utility.yul\":10767:10816   */\n      tag_530\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":10751:10817   */\n      tag_529\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":10742:10817   */\n      swap1\n      pop\n        /* \"#utility.yul\":10840:10846   */\n      dup3\n        /* \"#utility.yul\":10833:10838   */\n      dup2\n        /* \"#utility.yul\":10826:10847   */\n      mstore\n        /* \"#utility.yul\":10878:10882   */\n      0x20\n        /* \"#utility.yul\":10871:10876   */\n      dup2\n        /* \"#utility.yul\":10867:10883   */\n      add\n        /* \"#utility.yul\":10916:10919   */\n      dup5\n        /* \"#utility.yul\":10907:10913   */\n      dup5\n        /* \"#utility.yul\":10902:10905   */\n      dup5\n        /* \"#utility.yul\":10898:10914   */\n      add\n        /* \"#utility.yul\":10895:10920   */\n      gt\n        /* \"#utility.yul\":10892:11004   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":10923:11002   */\n      tag_688\n      tag_526\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":10892:11004   */\n    tag_687:\n        /* \"#utility.yul\":11013:11067   */\n      tag_689\n        /* \"#utility.yul\":11060:11066   */\n      dup5\n        /* \"#utility.yul\":11055:11058   */\n      dup3\n        /* \"#utility.yul\":11050:11053   */\n      dup6\n        /* \"#utility.yul\":11013:11067   */\n      tag_531\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":10732:11073   */\n      pop\n        /* \"#utility.yul\":10648:11073   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11093:11433   */\n    tag_533:\n        /* \"#utility.yul\":11149:11154   */\n      0x00\n        /* \"#utility.yul\":11198:11201   */\n      dup3\n        /* \"#utility.yul\":11191:11195   */\n      0x1f\n        /* \"#utility.yul\":11183:11189   */\n      dup4\n        /* \"#utility.yul\":11179:11196   */\n      add\n        /* \"#utility.yul\":11175:11202   */\n      slt\n        /* \"#utility.yul\":11165:11287   */\n      tag_691\n      jumpi\n        /* \"#utility.yul\":11206:11285   */\n      tag_692\n      tag_525\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":11165:11287   */\n    tag_691:\n        /* \"#utility.yul\":11323:11329   */\n      dup2\n        /* \"#utility.yul\":11310:11330   */\n      calldataload\n        /* \"#utility.yul\":11348:11427   */\n      tag_693\n        /* \"#utility.yul\":11423:11426   */\n      dup5\n        /* \"#utility.yul\":11415:11421   */\n      dup3\n        /* \"#utility.yul\":11408:11412   */\n      0x20\n        /* \"#utility.yul\":11400:11406   */\n      dup7\n        /* \"#utility.yul\":11396:11413   */\n      add\n        /* \"#utility.yul\":11348:11427   */\n      tag_532\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":11339:11427   */\n      swap2\n      pop\n        /* \"#utility.yul\":11155:11433   */\n      pop\n        /* \"#utility.yul\":11093:11433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11439:11555   */\n    tag_534:\n        /* \"#utility.yul\":11509:11530   */\n      tag_695\n        /* \"#utility.yul\":11524:11529   */\n      dup2\n        /* \"#utility.yul\":11509:11530   */\n      tag_499\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":11502:11507   */\n      dup2\n        /* \"#utility.yul\":11499:11531   */\n      eq\n        /* \"#utility.yul\":11489:11549   */\n      tag_696\n      jumpi\n        /* \"#utility.yul\":11545:11546   */\n      0x00\n        /* \"#utility.yul\":11542:11543   */\n      dup1\n        /* \"#utility.yul\":11535:11547   */\n      revert\n        /* \"#utility.yul\":11489:11549   */\n    tag_696:\n        /* \"#utility.yul\":11439:11555   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11561:11694   */\n    tag_535:\n        /* \"#utility.yul\":11604:11609   */\n      0x00\n        /* \"#utility.yul\":11642:11648   */\n      dup2\n        /* \"#utility.yul\":11629:11649   */\n      calldataload\n        /* \"#utility.yul\":11620:11649   */\n      swap1\n      pop\n        /* \"#utility.yul\":11658:11688   */\n      tag_698\n        /* \"#utility.yul\":11682:11687   */\n      dup2\n        /* \"#utility.yul\":11658:11688   */\n      tag_534\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":11561:11694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11700:12639   */\n    tag_98:\n        /* \"#utility.yul\":11793:11799   */\n      0x00\n        /* \"#utility.yul\":11801:11807   */\n      dup1\n        /* \"#utility.yul\":11809:11815   */\n      0x00\n        /* \"#utility.yul\":11817:11823   */\n      dup1\n        /* \"#utility.yul\":11866:11869   */\n      0x80\n        /* \"#utility.yul\":11854:11863   */\n      dup6\n        /* \"#utility.yul\":11845:11852   */\n      dup8\n        /* \"#utility.yul\":11841:11864   */\n      sub\n        /* \"#utility.yul\":11837:11870   */\n      slt\n        /* \"#utility.yul\":11834:11954   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":11873:11952   */\n      tag_701\n      tag_494\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":11834:11954   */\n    tag_700:\n        /* \"#utility.yul\":12021:12022   */\n      0x00\n        /* \"#utility.yul\":12010:12019   */\n      dup6\n        /* \"#utility.yul\":12006:12023   */\n      add\n        /* \"#utility.yul\":11993:12024   */\n      calldataload\n        /* \"#utility.yul\":12051:12069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12043:12049   */\n      dup2\n        /* \"#utility.yul\":12040:12070   */\n      gt\n        /* \"#utility.yul\":12037:12154   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":12073:12152   */\n      tag_703\n      tag_495\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":12037:12154   */\n    tag_702:\n        /* \"#utility.yul\":12178:12241   */\n      tag_704\n        /* \"#utility.yul\":12233:12240   */\n      dup8\n        /* \"#utility.yul\":12224:12230   */\n      dup3\n        /* \"#utility.yul\":12213:12222   */\n      dup9\n        /* \"#utility.yul\":12209:12231   */\n      add\n        /* \"#utility.yul\":12178:12241   */\n      tag_533\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":12168:12241   */\n      swap5\n      pop\n        /* \"#utility.yul\":11964:12251   */\n      pop\n        /* \"#utility.yul\":12290:12292   */\n      0x20\n        /* \"#utility.yul\":12316:12369   */\n      tag_705\n        /* \"#utility.yul\":12361:12368   */\n      dup8\n        /* \"#utility.yul\":12352:12358   */\n      dup3\n        /* \"#utility.yul\":12341:12350   */\n      dup9\n        /* \"#utility.yul\":12337:12359   */\n      add\n        /* \"#utility.yul\":12316:12369   */\n      tag_508\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":12306:12369   */\n      swap4\n      pop\n        /* \"#utility.yul\":12261:12379   */\n      pop\n        /* \"#utility.yul\":12418:12420   */\n      0x40\n        /* \"#utility.yul\":12444:12497   */\n      tag_706\n        /* \"#utility.yul\":12489:12496   */\n      dup8\n        /* \"#utility.yul\":12480:12486   */\n      dup3\n        /* \"#utility.yul\":12469:12478   */\n      dup9\n        /* \"#utility.yul\":12465:12487   */\n      add\n        /* \"#utility.yul\":12444:12497   */\n      tag_508\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":12434:12497   */\n      swap3\n      pop\n        /* \"#utility.yul\":12389:12507   */\n      pop\n        /* \"#utility.yul\":12546:12548   */\n      0x60\n        /* \"#utility.yul\":12572:12622   */\n      tag_707\n        /* \"#utility.yul\":12614:12621   */\n      dup8\n        /* \"#utility.yul\":12605:12611   */\n      dup3\n        /* \"#utility.yul\":12594:12603   */\n      dup9\n        /* \"#utility.yul\":12590:12612   */\n      add\n        /* \"#utility.yul\":12572:12622   */\n      tag_535\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":12562:12622   */\n      swap2\n      pop\n        /* \"#utility.yul\":12517:12632   */\n      pop\n        /* \"#utility.yul\":11700:12639   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12645:12974   */\n    tag_117:\n        /* \"#utility.yul\":12704:12710   */\n      0x00\n        /* \"#utility.yul\":12753:12755   */\n      0x20\n        /* \"#utility.yul\":12741:12750   */\n      dup3\n        /* \"#utility.yul\":12732:12739   */\n      dup5\n        /* \"#utility.yul\":12728:12751   */\n      sub\n        /* \"#utility.yul\":12724:12756   */\n      slt\n        /* \"#utility.yul\":12721:12840   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":12759:12838   */\n      tag_710\n      tag_494\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":12721:12840   */\n    tag_709:\n        /* \"#utility.yul\":12879:12880   */\n      0x00\n        /* \"#utility.yul\":12904:12957   */\n      tag_711\n        /* \"#utility.yul\":12949:12956   */\n      dup5\n        /* \"#utility.yul\":12940:12946   */\n      dup3\n        /* \"#utility.yul\":12929:12938   */\n      dup6\n        /* \"#utility.yul\":12925:12947   */\n      add\n        /* \"#utility.yul\":12904:12957   */\n      tag_518\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":12894:12957   */\n      swap2\n      pop\n        /* \"#utility.yul\":12850:12967   */\n      pop\n        /* \"#utility.yul\":12645:12974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12980:13454   */\n    tag_153:\n        /* \"#utility.yul\":13048:13054   */\n      0x00\n        /* \"#utility.yul\":13056:13062   */\n      dup1\n        /* \"#utility.yul\":13105:13107   */\n      0x40\n        /* \"#utility.yul\":13093:13102   */\n      dup4\n        /* \"#utility.yul\":13084:13091   */\n      dup6\n        /* \"#utility.yul\":13080:13103   */\n      sub\n        /* \"#utility.yul\":13076:13108   */\n      slt\n        /* \"#utility.yul\":13073:13192   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":13111:13190   */\n      tag_714\n      tag_494\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":13073:13192   */\n    tag_713:\n        /* \"#utility.yul\":13231:13232   */\n      0x00\n        /* \"#utility.yul\":13256:13309   */\n      tag_715\n        /* \"#utility.yul\":13301:13308   */\n      dup6\n        /* \"#utility.yul\":13292:13298   */\n      dup3\n        /* \"#utility.yul\":13281:13290   */\n      dup7\n        /* \"#utility.yul\":13277:13299   */\n      add\n        /* \"#utility.yul\":13256:13309   */\n      tag_518\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":13246:13309   */\n      swap3\n      pop\n        /* \"#utility.yul\":13202:13319   */\n      pop\n        /* \"#utility.yul\":13358:13360   */\n      0x20\n        /* \"#utility.yul\":13384:13437   */\n      tag_716\n        /* \"#utility.yul\":13429:13436   */\n      dup6\n        /* \"#utility.yul\":13420:13426   */\n      dup3\n        /* \"#utility.yul\":13409:13418   */\n      dup7\n        /* \"#utility.yul\":13405:13427   */\n      add\n        /* \"#utility.yul\":13384:13437   */\n      tag_521\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":13374:13437   */\n      swap2\n      pop\n        /* \"#utility.yul\":13329:13447   */\n      pop\n        /* \"#utility.yul\":12980:13454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13460:13934   */\n    tag_182:\n        /* \"#utility.yul\":13528:13534   */\n      0x00\n        /* \"#utility.yul\":13536:13542   */\n      dup1\n        /* \"#utility.yul\":13585:13587   */\n      0x40\n        /* \"#utility.yul\":13573:13582   */\n      dup4\n        /* \"#utility.yul\":13564:13571   */\n      dup6\n        /* \"#utility.yul\":13560:13583   */\n      sub\n        /* \"#utility.yul\":13556:13588   */\n      slt\n        /* \"#utility.yul\":13553:13672   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":13591:13670   */\n      tag_719\n      tag_494\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":13553:13672   */\n    tag_718:\n        /* \"#utility.yul\":13711:13712   */\n      0x00\n        /* \"#utility.yul\":13736:13789   */\n      tag_720\n        /* \"#utility.yul\":13781:13788   */\n      dup6\n        /* \"#utility.yul\":13772:13778   */\n      dup3\n        /* \"#utility.yul\":13761:13770   */\n      dup7\n        /* \"#utility.yul\":13757:13779   */\n      add\n        /* \"#utility.yul\":13736:13789   */\n      tag_518\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":13726:13789   */\n      swap3\n      pop\n        /* \"#utility.yul\":13682:13799   */\n      pop\n        /* \"#utility.yul\":13838:13840   */\n      0x20\n        /* \"#utility.yul\":13864:13917   */\n      tag_721\n        /* \"#utility.yul\":13909:13916   */\n      dup6\n        /* \"#utility.yul\":13900:13906   */\n      dup3\n        /* \"#utility.yul\":13889:13898   */\n      dup7\n        /* \"#utility.yul\":13885:13907   */\n      add\n        /* \"#utility.yul\":13864:13917   */\n      tag_518\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":13854:13917   */\n      swap2\n      pop\n        /* \"#utility.yul\":13809:13927   */\n      pop\n        /* \"#utility.yul\":13460:13934   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13940:14120   */\n    tag_536:\n        /* \"#utility.yul\":13988:14065   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13985:13986   */\n      0x00\n        /* \"#utility.yul\":13978:14066   */\n      mstore\n        /* \"#utility.yul\":14085:14089   */\n      0x22\n        /* \"#utility.yul\":14082:14083   */\n      0x04\n        /* \"#utility.yul\":14075:14090   */\n      mstore\n        /* \"#utility.yul\":14109:14113   */\n      0x24\n        /* \"#utility.yul\":14106:14107   */\n      0x00\n        /* \"#utility.yul\":14099:14114   */\n      revert\n        /* \"#utility.yul\":14126:14446   */\n    tag_197:\n        /* \"#utility.yul\":14170:14176   */\n      0x00\n        /* \"#utility.yul\":14207:14208   */\n      0x02\n        /* \"#utility.yul\":14201:14205   */\n      dup3\n        /* \"#utility.yul\":14197:14209   */\n      div\n        /* \"#utility.yul\":14187:14209   */\n      swap1\n      pop\n        /* \"#utility.yul\":14254:14255   */\n      0x01\n        /* \"#utility.yul\":14248:14252   */\n      dup3\n        /* \"#utility.yul\":14244:14256   */\n      and\n        /* \"#utility.yul\":14275:14293   */\n      dup1\n        /* \"#utility.yul\":14265:14346   */\n      tag_724\n      jumpi\n        /* \"#utility.yul\":14331:14335   */\n      0x7f\n        /* \"#utility.yul\":14323:14329   */\n      dup3\n        /* \"#utility.yul\":14319:14336   */\n      and\n        /* \"#utility.yul\":14309:14336   */\n      swap2\n      pop\n        /* \"#utility.yul\":14265:14346   */\n    tag_724:\n        /* \"#utility.yul\":14393:14395   */\n      0x20\n        /* \"#utility.yul\":14385:14391   */\n      dup3\n        /* \"#utility.yul\":14382:14396   */\n      lt\n        /* \"#utility.yul\":14362:14380   */\n      dup2\n        /* \"#utility.yul\":14359:14397   */\n      sub\n        /* \"#utility.yul\":14356:14440   */\n      tag_725\n      jumpi\n        /* \"#utility.yul\":14412:14430   */\n      tag_726\n      tag_536\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":14356:14440   */\n    tag_725:\n        /* \"#utility.yul\":14177:14446   */\n      pop\n        /* \"#utility.yul\":14126:14446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14452:14615   */\n    tag_537:\n        /* \"#utility.yul\":14592:14607   */\n      0x496e76616c696420696e70757400000000000000000000000000000000000000\n        /* \"#utility.yul\":14588:14589   */\n      0x00\n        /* \"#utility.yul\":14580:14586   */\n      dup3\n        /* \"#utility.yul\":14576:14590   */\n      add\n        /* \"#utility.yul\":14569:14608   */\n      mstore\n        /* \"#utility.yul\":14452:14615   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14621:14987   */\n    tag_538:\n        /* \"#utility.yul\":14763:14766   */\n      0x00\n        /* \"#utility.yul\":14784:14851   */\n      tag_729\n        /* \"#utility.yul\":14848:14850   */\n      0x0d\n        /* \"#utility.yul\":14843:14846   */\n      dup4\n        /* \"#utility.yul\":14784:14851   */\n      tag_502\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":14777:14851   */\n      swap2\n      pop\n        /* \"#utility.yul\":14860:14953   */\n      tag_730\n        /* \"#utility.yul\":14949:14952   */\n      dup3\n        /* \"#utility.yul\":14860:14953   */\n      tag_537\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":14978:14980   */\n      0x20\n        /* \"#utility.yul\":14973:14976   */\n      dup3\n        /* \"#utility.yul\":14969:14981   */\n      add\n        /* \"#utility.yul\":14962:14981   */\n      swap1\n      pop\n        /* \"#utility.yul\":14621:14987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14993:15412   */\n    tag_232:\n        /* \"#utility.yul\":15159:15163   */\n      0x00\n        /* \"#utility.yul\":15197:15199   */\n      0x20\n        /* \"#utility.yul\":15186:15195   */\n      dup3\n        /* \"#utility.yul\":15182:15200   */\n      add\n        /* \"#utility.yul\":15174:15200   */\n      swap1\n      pop\n        /* \"#utility.yul\":15246:15255   */\n      dup2\n        /* \"#utility.yul\":15240:15244   */\n      dup2\n        /* \"#utility.yul\":15236:15256   */\n      sub\n        /* \"#utility.yul\":15232:15233   */\n      0x00\n        /* \"#utility.yul\":15221:15230   */\n      dup4\n        /* \"#utility.yul\":15217:15234   */\n      add\n        /* \"#utility.yul\":15210:15257   */\n      mstore\n        /* \"#utility.yul\":15274:15405   */\n      tag_732\n        /* \"#utility.yul\":15400:15404   */\n      dup2\n        /* \"#utility.yul\":15274:15405   */\n      tag_538\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":15266:15405   */\n      swap1\n      pop\n        /* \"#utility.yul\":14993:15412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15418:15598   */\n    tag_539:\n        /* \"#utility.yul\":15466:15543   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15463:15464   */\n      0x00\n        /* \"#utility.yul\":15456:15544   */\n      mstore\n        /* \"#utility.yul\":15563:15567   */\n      0x11\n        /* \"#utility.yul\":15560:15561   */\n      0x04\n        /* \"#utility.yul\":15553:15568   */\n      mstore\n        /* \"#utility.yul\":15587:15591   */\n      0x24\n        /* \"#utility.yul\":15584:15585   */\n      0x00\n        /* \"#utility.yul\":15577:15592   */\n      revert\n        /* \"#utility.yul\":15604:15837   */\n    tag_234:\n        /* \"#utility.yul\":15643:15646   */\n      0x00\n        /* \"#utility.yul\":15666:15690   */\n      tag_735\n        /* \"#utility.yul\":15684:15689   */\n      dup3\n        /* \"#utility.yul\":15666:15690   */\n      tag_506\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":15657:15690   */\n      swap2\n      pop\n        /* \"#utility.yul\":15712:15778   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15705:15710   */\n      dup3\n        /* \"#utility.yul\":15702:15779   */\n      sub\n        /* \"#utility.yul\":15699:15802   */\n      tag_736\n      jumpi\n        /* \"#utility.yul\":15782:15800   */\n      tag_737\n      tag_539\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":15699:15802   */\n    tag_736:\n        /* \"#utility.yul\":15829:15830   */\n      0x01\n        /* \"#utility.yul\":15822:15827   */\n      dup3\n        /* \"#utility.yul\":15818:15831   */\n      add\n        /* \"#utility.yul\":15811:15831   */\n      swap1\n      pop\n        /* \"#utility.yul\":15604:15837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15843:15984   */\n    tag_540:\n        /* \"#utility.yul\":15892:15896   */\n      0x00\n        /* \"#utility.yul\":15915:15918   */\n      dup2\n        /* \"#utility.yul\":15907:15918   */\n      swap1\n      pop\n        /* \"#utility.yul\":15938:15941   */\n      dup2\n        /* \"#utility.yul\":15935:15936   */\n      0x00\n        /* \"#utility.yul\":15928:15942   */\n      mstore\n        /* \"#utility.yul\":15972:15976   */\n      0x20\n        /* \"#utility.yul\":15969:15970   */\n      0x00\n        /* \"#utility.yul\":15959:15977   */\n      keccak256\n        /* \"#utility.yul\":15951:15977   */\n      swap1\n      pop\n        /* \"#utility.yul\":15843:15984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15990:16083   */\n    tag_541:\n        /* \"#utility.yul\":16027:16033   */\n      0x00\n        /* \"#utility.yul\":16074:16076   */\n      0x20\n        /* \"#utility.yul\":16069:16071   */\n      0x1f\n        /* \"#utility.yul\":16062:16067   */\n      dup4\n        /* \"#utility.yul\":16058:16072   */\n      add\n        /* \"#utility.yul\":16054:16077   */\n      div\n        /* \"#utility.yul\":16044:16077   */\n      swap1\n      pop\n        /* \"#utility.yul\":15990:16083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16089:16196   */\n    tag_542:\n        /* \"#utility.yul\":16133:16141   */\n      0x00\n        /* \"#utility.yul\":16183:16188   */\n      dup3\n        /* \"#utility.yul\":16177:16181   */\n      dup3\n        /* \"#utility.yul\":16173:16189   */\n      shl\n        /* \"#utility.yul\":16152:16189   */\n      swap1\n      pop\n        /* \"#utility.yul\":16089:16196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16202:16595   */\n    tag_543:\n        /* \"#utility.yul\":16271:16277   */\n      0x00\n        /* \"#utility.yul\":16321:16322   */\n      0x08\n        /* \"#utility.yul\":16309:16319   */\n      dup4\n        /* \"#utility.yul\":16305:16323   */\n      mul\n        /* \"#utility.yul\":16344:16441   */\n      tag_742\n        /* \"#utility.yul\":16374:16440   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16363:16372   */\n      dup3\n        /* \"#utility.yul\":16344:16441   */\n      tag_542\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":16462:16501   */\n      tag_743\n        /* \"#utility.yul\":16492:16500   */\n      dup7\n        /* \"#utility.yul\":16481:16490   */\n      dup4\n        /* \"#utility.yul\":16462:16501   */\n      tag_542\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":16450:16501   */\n      swap6\n      pop\n        /* \"#utility.yul\":16534:16538   */\n      dup1\n        /* \"#utility.yul\":16530:16539   */\n      not\n        /* \"#utility.yul\":16523:16528   */\n      dup5\n        /* \"#utility.yul\":16519:16540   */\n      and\n        /* \"#utility.yul\":16510:16540   */\n      swap4\n      pop\n        /* \"#utility.yul\":16583:16587   */\n      dup1\n        /* \"#utility.yul\":16573:16581   */\n      dup7\n        /* \"#utility.yul\":16569:16588   */\n      and\n        /* \"#utility.yul\":16562:16567   */\n      dup5\n        /* \"#utility.yul\":16559:16589   */\n      or\n        /* \"#utility.yul\":16549:16589   */\n      swap3\n      pop\n        /* \"#utility.yul\":16278:16595   */\n      pop\n      pop\n        /* \"#utility.yul\":16202:16595   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16601:16661   */\n    tag_544:\n        /* \"#utility.yul\":16629:16632   */\n      0x00\n        /* \"#utility.yul\":16650:16655   */\n      dup2\n        /* \"#utility.yul\":16643:16655   */\n      swap1\n      pop\n        /* \"#utility.yul\":16601:16661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16667:16809   */\n    tag_545:\n        /* \"#utility.yul\":16717:16726   */\n      0x00\n        /* \"#utility.yul\":16750:16803   */\n      tag_746\n        /* \"#utility.yul\":16768:16802   */\n      tag_747\n        /* \"#utility.yul\":16777:16801   */\n      tag_748\n        /* \"#utility.yul\":16795:16800   */\n      dup5\n        /* \"#utility.yul\":16777:16801   */\n      tag_506\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":16768:16802   */\n      tag_544\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":16750:16803   */\n      tag_506\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":16737:16803   */\n      swap1\n      pop\n        /* \"#utility.yul\":16667:16809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16815:16890   */\n    tag_546:\n        /* \"#utility.yul\":16858:16861   */\n      0x00\n        /* \"#utility.yul\":16879:16884   */\n      dup2\n        /* \"#utility.yul\":16872:16884   */\n      swap1\n      pop\n        /* \"#utility.yul\":16815:16890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16896:17165   */\n    tag_547:\n        /* \"#utility.yul\":17006:17045   */\n      tag_751\n        /* \"#utility.yul\":17037:17044   */\n      dup4\n        /* \"#utility.yul\":17006:17045   */\n      tag_545\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":17067:17158   */\n      tag_752\n        /* \"#utility.yul\":17116:17157   */\n      tag_753\n        /* \"#utility.yul\":17140:17156   */\n      dup3\n        /* \"#utility.yul\":17116:17157   */\n      tag_546\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":17108:17114   */\n      dup5\n        /* \"#utility.yul\":17101:17105   */\n      dup5\n        /* \"#utility.yul\":17095:17106   */\n      sload\n        /* \"#utility.yul\":17067:17158   */\n      tag_543\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":17061:17065   */\n      dup3\n        /* \"#utility.yul\":17054:17159   */\n      sstore\n        /* \"#utility.yul\":16972:17165   */\n      pop\n        /* \"#utility.yul\":16896:17165   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17171:17244   */\n    tag_548:\n        /* \"#utility.yul\":17216:17219   */\n      0x00\n        /* \"#utility.yul\":17171:17244   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17250:17439   */\n    tag_549:\n        /* \"#utility.yul\":17327:17359   */\n      tag_756\n      tag_548\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":17368:17433   */\n      tag_757\n        /* \"#utility.yul\":17426:17432   */\n      dup2\n        /* \"#utility.yul\":17418:17424   */\n      dup5\n        /* \"#utility.yul\":17412:17416   */\n      dup5\n        /* \"#utility.yul\":17368:17433   */\n      tag_547\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":17303:17439   */\n      pop\n        /* \"#utility.yul\":17250:17439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17445:17631   */\n    tag_550:\n        /* \"#utility.yul\":17505:17625   */\n    tag_759:\n        /* \"#utility.yul\":17522:17525   */\n      dup2\n        /* \"#utility.yul\":17515:17520   */\n      dup2\n        /* \"#utility.yul\":17512:17526   */\n      lt\n        /* \"#utility.yul\":17505:17625   */\n      iszero\n      tag_761\n      jumpi\n        /* \"#utility.yul\":17576:17615   */\n      tag_762\n        /* \"#utility.yul\":17613:17614   */\n      0x00\n        /* \"#utility.yul\":17606:17611   */\n      dup3\n        /* \"#utility.yul\":17576:17615   */\n      tag_549\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":17549:17550   */\n      0x01\n        /* \"#utility.yul\":17542:17547   */\n      dup2\n        /* \"#utility.yul\":17538:17551   */\n      add\n        /* \"#utility.yul\":17529:17551   */\n      swap1\n      pop\n        /* \"#utility.yul\":17505:17625   */\n      jump(tag_759)\n    tag_761:\n        /* \"#utility.yul\":17445:17631   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17637:18180   */\n    tag_551:\n        /* \"#utility.yul\":17738:17740   */\n      0x1f\n        /* \"#utility.yul\":17733:17736   */\n      dup3\n        /* \"#utility.yul\":17730:17741   */\n      gt\n        /* \"#utility.yul\":17727:18173   */\n      iszero\n      tag_764\n      jumpi\n        /* \"#utility.yul\":17772:17810   */\n      tag_765\n        /* \"#utility.yul\":17804:17809   */\n      dup2\n        /* \"#utility.yul\":17772:17810   */\n      tag_540\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":17856:17885   */\n      tag_766\n        /* \"#utility.yul\":17874:17884   */\n      dup5\n        /* \"#utility.yul\":17856:17885   */\n      tag_541\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":17846:17854   */\n      dup2\n        /* \"#utility.yul\":17842:17886   */\n      add\n        /* \"#utility.yul\":18039:18041   */\n      0x20\n        /* \"#utility.yul\":18027:18037   */\n      dup6\n        /* \"#utility.yul\":18024:18042   */\n      lt\n        /* \"#utility.yul\":18021:18070   */\n      iszero\n      tag_767\n      jumpi\n        /* \"#utility.yul\":18060:18068   */\n      dup2\n        /* \"#utility.yul\":18045:18068   */\n      swap1\n      pop\n        /* \"#utility.yul\":18021:18070   */\n    tag_767:\n        /* \"#utility.yul\":18083:18163   */\n      tag_768\n        /* \"#utility.yul\":18139:18161   */\n      tag_769\n        /* \"#utility.yul\":18157:18160   */\n      dup6\n        /* \"#utility.yul\":18139:18161   */\n      tag_541\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":18129:18137   */\n      dup4\n        /* \"#utility.yul\":18125:18162   */\n      add\n        /* \"#utility.yul\":18112:18123   */\n      dup3\n        /* \"#utility.yul\":18083:18163   */\n      tag_550\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":17742:18173   */\n      pop\n      pop\n        /* \"#utility.yul\":17727:18173   */\n    tag_764:\n        /* \"#utility.yul\":17637:18180   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18186:18303   */\n    tag_552:\n        /* \"#utility.yul\":18240:18248   */\n      0x00\n        /* \"#utility.yul\":18290:18295   */\n      dup3\n        /* \"#utility.yul\":18284:18288   */\n      dup3\n        /* \"#utility.yul\":18280:18296   */\n      shr\n        /* \"#utility.yul\":18259:18296   */\n      swap1\n      pop\n        /* \"#utility.yul\":18186:18303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18309:18478   */\n    tag_553:\n        /* \"#utility.yul\":18353:18359   */\n      0x00\n        /* \"#utility.yul\":18386:18437   */\n      tag_772\n        /* \"#utility.yul\":18434:18435   */\n      0x00\n        /* \"#utility.yul\":18430:18436   */\n      not\n        /* \"#utility.yul\":18422:18427   */\n      dup5\n        /* \"#utility.yul\":18419:18420   */\n      0x08\n        /* \"#utility.yul\":18415:18428   */\n      mul\n        /* \"#utility.yul\":18386:18437   */\n      tag_552\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":18382:18438   */\n      not\n        /* \"#utility.yul\":18467:18471   */\n      dup1\n        /* \"#utility.yul\":18461:18465   */\n      dup4\n        /* \"#utility.yul\":18457:18472   */\n      and\n        /* \"#utility.yul\":18447:18472   */\n      swap2\n      pop\n        /* \"#utility.yul\":18360:18478   */\n      pop\n        /* \"#utility.yul\":18309:18478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18483:18778   */\n    tag_554:\n        /* \"#utility.yul\":18559:18563   */\n      0x00\n        /* \"#utility.yul\":18705:18734   */\n      tag_774\n        /* \"#utility.yul\":18730:18733   */\n      dup4\n        /* \"#utility.yul\":18724:18728   */\n      dup4\n        /* \"#utility.yul\":18705:18734   */\n      tag_553\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":18697:18734   */\n      swap2\n      pop\n        /* \"#utility.yul\":18767:18770   */\n      dup3\n        /* \"#utility.yul\":18764:18765   */\n      0x02\n        /* \"#utility.yul\":18760:18771   */\n      mul\n        /* \"#utility.yul\":18754:18758   */\n      dup3\n        /* \"#utility.yul\":18751:18772   */\n      or\n        /* \"#utility.yul\":18743:18772   */\n      swap1\n      pop\n        /* \"#utility.yul\":18483:18778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18783:20178   */\n    tag_239:\n        /* \"#utility.yul\":18900:18937   */\n      tag_776\n        /* \"#utility.yul\":18933:18936   */\n      dup3\n        /* \"#utility.yul\":18900:18937   */\n      tag_501\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":19002:19020   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18994:19000   */\n      dup2\n        /* \"#utility.yul\":18991:19021   */\n      gt\n        /* \"#utility.yul\":18988:19044   */\n      iszero\n      tag_777\n      jumpi\n        /* \"#utility.yul\":19024:19042   */\n      tag_778\n      tag_527\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":18988:19044   */\n    tag_777:\n        /* \"#utility.yul\":19068:19106   */\n      tag_779\n        /* \"#utility.yul\":19100:19104   */\n      dup3\n        /* \"#utility.yul\":19094:19105   */\n      sload\n        /* \"#utility.yul\":19068:19106   */\n      tag_197\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":19153:19220   */\n      tag_780\n        /* \"#utility.yul\":19213:19219   */\n      dup3\n        /* \"#utility.yul\":19205:19211   */\n      dup3\n        /* \"#utility.yul\":19199:19203   */\n      dup6\n        /* \"#utility.yul\":19153:19220   */\n      tag_551\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":19247:19248   */\n      0x00\n        /* \"#utility.yul\":19271:19275   */\n      0x20\n        /* \"#utility.yul\":19258:19275   */\n      swap1\n      pop\n        /* \"#utility.yul\":19303:19305   */\n      0x1f\n        /* \"#utility.yul\":19295:19301   */\n      dup4\n        /* \"#utility.yul\":19292:19306   */\n      gt\n        /* \"#utility.yul\":19320:19321   */\n      0x01\n        /* \"#utility.yul\":19315:19933   */\n      dup2\n      eq\n      tag_782\n      jumpi\n        /* \"#utility.yul\":19977:19978   */\n      0x00\n        /* \"#utility.yul\":19994:20000   */\n      dup5\n        /* \"#utility.yul\":19991:20068   */\n      iszero\n      tag_783\n      jumpi\n        /* \"#utility.yul\":20043:20052   */\n      dup3\n        /* \"#utility.yul\":20038:20041   */\n      dup8\n        /* \"#utility.yul\":20034:20053   */\n      add\n        /* \"#utility.yul\":20028:20054   */\n      mload\n        /* \"#utility.yul\":20019:20054   */\n      swap1\n      pop\n        /* \"#utility.yul\":19991:20068   */\n    tag_783:\n        /* \"#utility.yul\":20094:20161   */\n      tag_784\n        /* \"#utility.yul\":20154:20160   */\n      dup6\n        /* \"#utility.yul\":20147:20152   */\n      dup3\n        /* \"#utility.yul\":20094:20161   */\n      tag_554\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":20088:20092   */\n      dup7\n        /* \"#utility.yul\":20081:20162   */\n      sstore\n        /* \"#utility.yul\":19950:20172   */\n      pop\n        /* \"#utility.yul\":19285:20172   */\n      jump(tag_781)\n        /* \"#utility.yul\":19315:19933   */\n    tag_782:\n        /* \"#utility.yul\":19367:19371   */\n      0x1f\n        /* \"#utility.yul\":19363:19372   */\n      not\n        /* \"#utility.yul\":19355:19361   */\n      dup5\n        /* \"#utility.yul\":19351:19373   */\n      and\n        /* \"#utility.yul\":19401:19438   */\n      tag_785\n        /* \"#utility.yul\":19433:19437   */\n      dup7\n        /* \"#utility.yul\":19401:19438   */\n      tag_540\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":19460:19461   */\n      0x00\n        /* \"#utility.yul\":19474:19682   */\n    tag_786:\n        /* \"#utility.yul\":19488:19495   */\n      dup3\n        /* \"#utility.yul\":19485:19486   */\n      dup2\n        /* \"#utility.yul\":19482:19496   */\n      lt\n        /* \"#utility.yul\":19474:19682   */\n      iszero\n      tag_788\n      jumpi\n        /* \"#utility.yul\":19567:19576   */\n      dup5\n        /* \"#utility.yul\":19562:19565   */\n      dup10\n        /* \"#utility.yul\":19558:19577   */\n      add\n        /* \"#utility.yul\":19552:19578   */\n      mload\n        /* \"#utility.yul\":19544:19550   */\n      dup3\n        /* \"#utility.yul\":19537:19579   */\n      sstore\n        /* \"#utility.yul\":19618:19619   */\n      0x01\n        /* \"#utility.yul\":19610:19616   */\n      dup3\n        /* \"#utility.yul\":19606:19620   */\n      add\n        /* \"#utility.yul\":19596:19620   */\n      swap2\n      pop\n        /* \"#utility.yul\":19665:19667   */\n      0x20\n        /* \"#utility.yul\":19654:19663   */\n      dup6\n        /* \"#utility.yul\":19650:19668   */\n      add\n        /* \"#utility.yul\":19637:19668   */\n      swap5\n      pop\n        /* \"#utility.yul\":19511:19515   */\n      0x20\n        /* \"#utility.yul\":19508:19509   */\n      dup2\n        /* \"#utility.yul\":19504:19516   */\n      add\n        /* \"#utility.yul\":19499:19516   */\n      swap1\n      pop\n        /* \"#utility.yul\":19474:19682   */\n      jump(tag_786)\n    tag_788:\n        /* \"#utility.yul\":19710:19716   */\n      dup7\n        /* \"#utility.yul\":19701:19708   */\n      dup4\n        /* \"#utility.yul\":19698:19717   */\n      lt\n        /* \"#utility.yul\":19695:19874   */\n      iszero\n      tag_789\n      jumpi\n        /* \"#utility.yul\":19768:19777   */\n      dup5\n        /* \"#utility.yul\":19763:19766   */\n      dup10\n        /* \"#utility.yul\":19759:19778   */\n      add\n        /* \"#utility.yul\":19753:19779   */\n      mload\n        /* \"#utility.yul\":19811:19859   */\n      tag_790\n        /* \"#utility.yul\":19853:19857   */\n      0x1f\n        /* \"#utility.yul\":19845:19851   */\n      dup10\n        /* \"#utility.yul\":19841:19858   */\n      and\n        /* \"#utility.yul\":19830:19839   */\n      dup3\n        /* \"#utility.yul\":19811:19859   */\n      tag_553\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":19803:19809   */\n      dup4\n        /* \"#utility.yul\":19796:19860   */\n      sstore\n        /* \"#utility.yul\":19718:19874   */\n      pop\n        /* \"#utility.yul\":19695:19874   */\n    tag_789:\n        /* \"#utility.yul\":19920:19921   */\n      0x01\n        /* \"#utility.yul\":19916:19917   */\n      0x02\n        /* \"#utility.yul\":19908:19914   */\n      dup9\n        /* \"#utility.yul\":19904:19918   */\n      mul\n        /* \"#utility.yul\":19900:19922   */\n      add\n        /* \"#utility.yul\":19894:19898   */\n      dup9\n        /* \"#utility.yul\":19887:19923   */\n      sstore\n        /* \"#utility.yul\":19322:19933   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19285:20172   */\n    tag_781:\n      pop\n        /* \"#utility.yul\":18875:20178   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18783:20178   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20184:20516   */\n    tag_243:\n        /* \"#utility.yul\":20305:20309   */\n      0x00\n        /* \"#utility.yul\":20343:20345   */\n      0x40\n        /* \"#utility.yul\":20332:20341   */\n      dup3\n        /* \"#utility.yul\":20328:20346   */\n      add\n        /* \"#utility.yul\":20320:20346   */\n      swap1\n      pop\n        /* \"#utility.yul\":20356:20427   */\n      tag_792\n        /* \"#utility.yul\":20424:20425   */\n      0x00\n        /* \"#utility.yul\":20413:20422   */\n      dup4\n        /* \"#utility.yul\":20409:20426   */\n      add\n        /* \"#utility.yul\":20400:20406   */\n      dup6\n        /* \"#utility.yul\":20356:20427   */\n      tag_509\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":20437:20509   */\n      tag_793\n        /* \"#utility.yul\":20505:20507   */\n      0x20\n        /* \"#utility.yul\":20494:20503   */\n      dup4\n        /* \"#utility.yul\":20490:20508   */\n      add\n        /* \"#utility.yul\":20481:20487   */\n      dup5\n        /* \"#utility.yul\":20437:20509   */\n      tag_509\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":20184:20516   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20522:20686   */\n    tag_555:\n        /* \"#utility.yul\":20662:20678   */\n      0x496e76616c696420737461747573000000000000000000000000000000000000\n        /* \"#utility.yul\":20658:20659   */\n      0x00\n        /* \"#utility.yul\":20650:20656   */\n      dup3\n        /* \"#utility.yul\":20646:20660   */\n      add\n        /* \"#utility.yul\":20639:20679   */\n      mstore\n        /* \"#utility.yul\":20522:20686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20692:21058   */\n    tag_556:\n        /* \"#utility.yul\":20834:20837   */\n      0x00\n        /* \"#utility.yul\":20855:20922   */\n      tag_796\n        /* \"#utility.yul\":20919:20921   */\n      0x0e\n        /* \"#utility.yul\":20914:20917   */\n      dup4\n        /* \"#utility.yul\":20855:20922   */\n      tag_502\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":20848:20922   */\n      swap2\n      pop\n        /* \"#utility.yul\":20931:21024   */\n      tag_797\n        /* \"#utility.yul\":21020:21023   */\n      dup3\n        /* \"#utility.yul\":20931:21024   */\n      tag_555\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":21049:21051   */\n      0x20\n        /* \"#utility.yul\":21044:21047   */\n      dup3\n        /* \"#utility.yul\":21040:21052   */\n      add\n        /* \"#utility.yul\":21033:21052   */\n      swap1\n      pop\n        /* \"#utility.yul\":20692:21058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21064:21483   */\n    tag_253:\n        /* \"#utility.yul\":21230:21234   */\n      0x00\n        /* \"#utility.yul\":21268:21270   */\n      0x20\n        /* \"#utility.yul\":21257:21266   */\n      dup3\n        /* \"#utility.yul\":21253:21271   */\n      add\n        /* \"#utility.yul\":21245:21271   */\n      swap1\n      pop\n        /* \"#utility.yul\":21317:21326   */\n      dup2\n        /* \"#utility.yul\":21311:21315   */\n      dup2\n        /* \"#utility.yul\":21307:21327   */\n      sub\n        /* \"#utility.yul\":21303:21304   */\n      0x00\n        /* \"#utility.yul\":21292:21301   */\n      dup4\n        /* \"#utility.yul\":21288:21305   */\n      add\n        /* \"#utility.yul\":21281:21328   */\n      mstore\n        /* \"#utility.yul\":21345:21476   */\n      tag_799\n        /* \"#utility.yul\":21471:21475   */\n      dup2\n        /* \"#utility.yul\":21345:21476   */\n      tag_556\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":21337:21476   */\n      swap1\n      pop\n        /* \"#utility.yul\":21064:21483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21489:21658   */\n    tag_557:\n        /* \"#utility.yul\":21629:21650   */\n      0x4974656d206e6f742072657061697261626c6500000000000000000000000000\n        /* \"#utility.yul\":21625:21626   */\n      0x00\n        /* \"#utility.yul\":21617:21623   */\n      dup3\n        /* \"#utility.yul\":21613:21627   */\n      add\n        /* \"#utility.yul\":21606:21651   */\n      mstore\n        /* \"#utility.yul\":21489:21658   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21664:22030   */\n    tag_558:\n        /* \"#utility.yul\":21806:21809   */\n      0x00\n        /* \"#utility.yul\":21827:21894   */\n      tag_802\n        /* \"#utility.yul\":21891:21893   */\n      0x13\n        /* \"#utility.yul\":21886:21889   */\n      dup4\n        /* \"#utility.yul\":21827:21894   */\n      tag_502\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":21820:21894   */\n      swap2\n      pop\n        /* \"#utility.yul\":21903:21996   */\n      tag_803\n        /* \"#utility.yul\":21992:21995   */\n      dup3\n        /* \"#utility.yul\":21903:21996   */\n      tag_557\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":22021:22023   */\n      0x20\n        /* \"#utility.yul\":22016:22019   */\n      dup3\n        /* \"#utility.yul\":22012:22024   */\n      add\n        /* \"#utility.yul\":22005:22024   */\n      swap1\n      pop\n        /* \"#utility.yul\":21664:22030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22036:22455   */\n    tag_327:\n        /* \"#utility.yul\":22202:22206   */\n      0x00\n        /* \"#utility.yul\":22240:22242   */\n      0x20\n        /* \"#utility.yul\":22229:22238   */\n      dup3\n        /* \"#utility.yul\":22225:22243   */\n      add\n        /* \"#utility.yul\":22217:22243   */\n      swap1\n      pop\n        /* \"#utility.yul\":22289:22298   */\n      dup2\n        /* \"#utility.yul\":22283:22287   */\n      dup2\n        /* \"#utility.yul\":22279:22299   */\n      sub\n        /* \"#utility.yul\":22275:22276   */\n      0x00\n        /* \"#utility.yul\":22264:22273   */\n      dup4\n        /* \"#utility.yul\":22260:22277   */\n      add\n        /* \"#utility.yul\":22253:22300   */\n      mstore\n        /* \"#utility.yul\":22317:22448   */\n      tag_805\n        /* \"#utility.yul\":22443:22447   */\n      dup2\n        /* \"#utility.yul\":22317:22448   */\n      tag_558\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":22309:22448   */\n      swap1\n      pop\n        /* \"#utility.yul\":22036:22455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22461:22620   */\n    tag_559:\n        /* \"#utility.yul\":22601:22612   */\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22597:22598   */\n      0x00\n        /* \"#utility.yul\":22589:22595   */\n      dup3\n        /* \"#utility.yul\":22585:22599   */\n      add\n        /* \"#utility.yul\":22578:22613   */\n      mstore\n        /* \"#utility.yul\":22461:22620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22626:22991   */\n    tag_560:\n        /* \"#utility.yul\":22768:22771   */\n      0x00\n        /* \"#utility.yul\":22789:22855   */\n      tag_808\n        /* \"#utility.yul\":22853:22854   */\n      0x09\n        /* \"#utility.yul\":22848:22851   */\n      dup4\n        /* \"#utility.yul\":22789:22855   */\n      tag_502\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":22782:22855   */\n      swap2\n      pop\n        /* \"#utility.yul\":22864:22957   */\n      tag_809\n        /* \"#utility.yul\":22953:22956   */\n      dup3\n        /* \"#utility.yul\":22864:22957   */\n      tag_559\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":22982:22984   */\n      0x20\n        /* \"#utility.yul\":22977:22980   */\n      dup3\n        /* \"#utility.yul\":22973:22985   */\n      add\n        /* \"#utility.yul\":22966:22985   */\n      swap1\n      pop\n        /* \"#utility.yul\":22626:22991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22997:23416   */\n    tag_351:\n        /* \"#utility.yul\":23163:23167   */\n      0x00\n        /* \"#utility.yul\":23201:23203   */\n      0x20\n        /* \"#utility.yul\":23190:23199   */\n      dup3\n        /* \"#utility.yul\":23186:23204   */\n      add\n        /* \"#utility.yul\":23178:23204   */\n      swap1\n      pop\n        /* \"#utility.yul\":23250:23259   */\n      dup2\n        /* \"#utility.yul\":23244:23248   */\n      dup2\n        /* \"#utility.yul\":23240:23260   */\n      sub\n        /* \"#utility.yul\":23236:23237   */\n      0x00\n        /* \"#utility.yul\":23225:23234   */\n      dup4\n        /* \"#utility.yul\":23221:23238   */\n      add\n        /* \"#utility.yul\":23214:23261   */\n      mstore\n        /* \"#utility.yul\":23278:23409   */\n      tag_811\n        /* \"#utility.yul\":23404:23408   */\n      dup2\n        /* \"#utility.yul\":23278:23409   */\n      tag_560\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":23270:23409   */\n      swap1\n      pop\n        /* \"#utility.yul\":22997:23416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23422:23864   */\n    tag_370:\n        /* \"#utility.yul\":23571:23575   */\n      0x00\n        /* \"#utility.yul\":23609:23611   */\n      0x60\n        /* \"#utility.yul\":23598:23607   */\n      dup3\n        /* \"#utility.yul\":23594:23612   */\n      add\n        /* \"#utility.yul\":23586:23612   */\n      swap1\n      pop\n        /* \"#utility.yul\":23622:23693   */\n      tag_813\n        /* \"#utility.yul\":23690:23691   */\n      0x00\n        /* \"#utility.yul\":23679:23688   */\n      dup4\n        /* \"#utility.yul\":23675:23692   */\n      add\n        /* \"#utility.yul\":23666:23672   */\n      dup7\n        /* \"#utility.yul\":23622:23693   */\n      tag_512\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":23703:23775   */\n      tag_814\n        /* \"#utility.yul\":23771:23773   */\n      0x20\n        /* \"#utility.yul\":23760:23769   */\n      dup4\n        /* \"#utility.yul\":23756:23774   */\n      add\n        /* \"#utility.yul\":23747:23753   */\n      dup6\n        /* \"#utility.yul\":23703:23775   */\n      tag_509\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":23785:23857   */\n      tag_815\n        /* \"#utility.yul\":23853:23855   */\n      0x40\n        /* \"#utility.yul\":23842:23851   */\n      dup4\n        /* \"#utility.yul\":23838:23856   */\n      add\n        /* \"#utility.yul\":23829:23835   */\n      dup5\n        /* \"#utility.yul\":23785:23857   */\n      tag_509\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":23422:23864   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23870:24092   */\n    tag_375:\n        /* \"#utility.yul\":23963:23967   */\n      0x00\n        /* \"#utility.yul\":24001:24003   */\n      0x20\n        /* \"#utility.yul\":23990:23999   */\n      dup3\n        /* \"#utility.yul\":23986:24004   */\n      add\n        /* \"#utility.yul\":23978:24004   */\n      swap1\n      pop\n        /* \"#utility.yul\":24014:24085   */\n      tag_817\n        /* \"#utility.yul\":24082:24083   */\n      0x00\n        /* \"#utility.yul\":24071:24080   */\n      dup4\n        /* \"#utility.yul\":24067:24084   */\n      add\n        /* \"#utility.yul\":24058:24064   */\n      dup5\n        /* \"#utility.yul\":24014:24085   */\n      tag_512\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":23870:24092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24098:24289   */\n    tag_393:\n        /* \"#utility.yul\":24138:24141   */\n      0x00\n        /* \"#utility.yul\":24157:24177   */\n      tag_819\n        /* \"#utility.yul\":24175:24176   */\n      dup3\n        /* \"#utility.yul\":24157:24177   */\n      tag_506\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":24152:24177   */\n      swap2\n      pop\n        /* \"#utility.yul\":24191:24211   */\n      tag_820\n        /* \"#utility.yul\":24209:24210   */\n      dup4\n        /* \"#utility.yul\":24191:24211   */\n      tag_506\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":24186:24211   */\n      swap3\n      pop\n        /* \"#utility.yul\":24234:24235   */\n      dup3\n        /* \"#utility.yul\":24231:24232   */\n      dup3\n        /* \"#utility.yul\":24227:24236   */\n      add\n        /* \"#utility.yul\":24220:24236   */\n      swap1\n      pop\n        /* \"#utility.yul\":24255:24258   */\n      dup1\n        /* \"#utility.yul\":24252:24253   */\n      dup3\n        /* \"#utility.yul\":24249:24259   */\n      gt\n        /* \"#utility.yul\":24246:24282   */\n      iszero\n      tag_821\n      jumpi\n        /* \"#utility.yul\":24262:24280   */\n      tag_822\n      tag_539\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":24246:24282   */\n    tag_821:\n        /* \"#utility.yul\":24098:24289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24295:24977   */\n    tag_397:\n        /* \"#utility.yul\":24509:24513   */\n      0x00\n        /* \"#utility.yul\":24547:24550   */\n      0xa0\n        /* \"#utility.yul\":24536:24545   */\n      dup3\n        /* \"#utility.yul\":24532:24551   */\n      add\n        /* \"#utility.yul\":24524:24551   */\n      swap1\n      pop\n        /* \"#utility.yul\":24561:24641   */\n      tag_824\n        /* \"#utility.yul\":24638:24639   */\n      0x00\n        /* \"#utility.yul\":24627:24636   */\n      dup4\n        /* \"#utility.yul\":24623:24640   */\n      add\n        /* \"#utility.yul\":24614:24620   */\n      dup9\n        /* \"#utility.yul\":24561:24641   */\n      tag_516\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":24651:24723   */\n      tag_825\n        /* \"#utility.yul\":24719:24721   */\n      0x20\n        /* \"#utility.yul\":24708:24717   */\n      dup4\n        /* \"#utility.yul\":24704:24722   */\n      add\n        /* \"#utility.yul\":24695:24701   */\n      dup8\n        /* \"#utility.yul\":24651:24723   */\n      tag_509\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":24733:24805   */\n      tag_826\n        /* \"#utility.yul\":24801:24803   */\n      0x40\n        /* \"#utility.yul\":24790:24799   */\n      dup4\n        /* \"#utility.yul\":24786:24804   */\n      add\n        /* \"#utility.yul\":24777:24783   */\n      dup7\n        /* \"#utility.yul\":24733:24805   */\n      tag_509\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":24815:24887   */\n      tag_827\n        /* \"#utility.yul\":24883:24885   */\n      0x60\n        /* \"#utility.yul\":24872:24881   */\n      dup4\n        /* \"#utility.yul\":24868:24886   */\n      add\n        /* \"#utility.yul\":24859:24865   */\n      dup6\n        /* \"#utility.yul\":24815:24887   */\n      tag_509\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":24897:24970   */\n      tag_828\n        /* \"#utility.yul\":24965:24968   */\n      0x80\n        /* \"#utility.yul\":24954:24963   */\n      dup4\n        /* \"#utility.yul\":24950:24969   */\n      add\n        /* \"#utility.yul\":24941:24947   */\n      dup5\n        /* \"#utility.yul\":24897:24970   */\n      tag_509\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":24295:24977   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24983:25315   */\n    tag_427:\n        /* \"#utility.yul\":25104:25108   */\n      0x00\n        /* \"#utility.yul\":25142:25144   */\n      0x40\n        /* \"#utility.yul\":25131:25140   */\n      dup3\n        /* \"#utility.yul\":25127:25145   */\n      add\n        /* \"#utility.yul\":25119:25145   */\n      swap1\n      pop\n        /* \"#utility.yul\":25155:25226   */\n      tag_830\n        /* \"#utility.yul\":25223:25224   */\n      0x00\n        /* \"#utility.yul\":25212:25221   */\n      dup4\n        /* \"#utility.yul\":25208:25225   */\n      add\n        /* \"#utility.yul\":25199:25205   */\n      dup6\n        /* \"#utility.yul\":25155:25226   */\n      tag_512\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":25236:25308   */\n      tag_831\n        /* \"#utility.yul\":25304:25306   */\n      0x20\n        /* \"#utility.yul\":25293:25302   */\n      dup4\n        /* \"#utility.yul\":25289:25307   */\n      add\n        /* \"#utility.yul\":25280:25286   */\n      dup5\n        /* \"#utility.yul\":25236:25308   */\n      tag_522\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":24983:25315   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25321:25731   */\n    tag_468:\n        /* \"#utility.yul\":25361:25368   */\n      0x00\n        /* \"#utility.yul\":25384:25404   */\n      tag_833\n        /* \"#utility.yul\":25402:25403   */\n      dup3\n        /* \"#utility.yul\":25384:25404   */\n      tag_506\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":25379:25404   */\n      swap2\n      pop\n        /* \"#utility.yul\":25418:25438   */\n      tag_834\n        /* \"#utility.yul\":25436:25437   */\n      dup4\n        /* \"#utility.yul\":25418:25438   */\n      tag_506\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":25413:25438   */\n      swap3\n      pop\n        /* \"#utility.yul\":25473:25474   */\n      dup3\n        /* \"#utility.yul\":25470:25471   */\n      dup3\n        /* \"#utility.yul\":25466:25475   */\n      mul\n        /* \"#utility.yul\":25495:25525   */\n      tag_835\n        /* \"#utility.yul\":25513:25524   */\n      dup2\n        /* \"#utility.yul\":25495:25525   */\n      tag_506\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":25484:25525   */\n      swap2\n      pop\n        /* \"#utility.yul\":25674:25675   */\n      dup3\n        /* \"#utility.yul\":25665:25672   */\n      dup3\n        /* \"#utility.yul\":25661:25676   */\n      div\n        /* \"#utility.yul\":25658:25659   */\n      dup5\n        /* \"#utility.yul\":25655:25677   */\n      eq\n        /* \"#utility.yul\":25635:25636   */\n      dup4\n        /* \"#utility.yul\":25628:25637   */\n      iszero\n        /* \"#utility.yul\":25608:25691   */\n      or\n        /* \"#utility.yul\":25585:25724   */\n      tag_836\n      jumpi\n        /* \"#utility.yul\":25704:25722   */\n      tag_837\n      tag_539\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":25585:25724   */\n    tag_836:\n        /* \"#utility.yul\":25369:25731   */\n      pop\n        /* \"#utility.yul\":25321:25731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206a3b36be9c963f420118913ea278407b2192d57099bd528afdb38c5e58591f2e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1387": {
									"entryPoint": null,
									"id": 1387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 286,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 540,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": 773,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_837": {
									"entryPoint": 780,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 532,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 673,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9836:10",
										"nodeType": "YulBlock",
										"src": "0:9836:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "140:152:10",
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nativeSrc": "150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nativeSrc": "150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nativeSrc": "247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nativeSrc": "247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nativeSrc": "271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nativeSrc": "271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nativeSrc": "326:152:10",
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:10",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nativeSrc": "336:88:10",
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nativeSrc": "336:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:10",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:15:10",
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nativeSrc": "433:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:10",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:10",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nativeSrc": "457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nativeSrc": "457:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nativeSrc": "535:269:10",
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nativeSrc": "545:22:10",
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nativeSrc": "555:12:10",
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nativeSrc": "576:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nativeSrc": "602:12:10",
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:10",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:10",
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nativeSrc": "667:27:10",
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:10",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nativeSrc": "677:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nativeSrc": "626:26:10",
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nativeSrc": "623:81:10",
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nativeSrc": "756:42:10",
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nativeSrc": "770:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nativeSrc": "770:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nativeSrc": "740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nativeSrc": "717:38:10",
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nativeSrc": "714:84:10",
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:10",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:10",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nativeSrc": "864:87:10",
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nativeSrc": "874:11:10",
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:10",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:14:10",
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nativeSrc": "895:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:10",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:10",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nativeSrc": "1001:49:10",
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nativeSrc": "1011:33:10",
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nativeSrc": "1025:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nativeSrc": "1021:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:10",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:10",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nativeSrc": "1109:54:10",
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nativeSrc": "1119:37:10",
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:10",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:10",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:10",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nativeSrc": "1245:317:10",
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nativeSrc": "1255:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nativeSrc": "1272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nativeSrc": "1311:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:10",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:10",
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nativeSrc": "1477:30:10",
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nativeSrc": "1497:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nativeSrc": "1486:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nativeSrc": "1516:40:10",
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nativeSrc": "1526:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:10",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:10",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:10",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:10",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nativeSrc": "1613:32:10",
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nativeSrc": "1623:16:10",
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:10",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:10",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nativeSrc": "1683:28:10",
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nativeSrc": "1693:12:10",
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:10",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:10",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:10",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nativeSrc": "1777:82:10",
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nativeSrc": "1787:66:10",
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nativeSrc": "1827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nativeSrc": "1818:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nativeSrc": "1800:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:10",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:10",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nativeSrc": "1912:28:10",
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nativeSrc": "1922:12:10",
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:10",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:10",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nativeSrc": "2022:193:10",
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nativeSrc": "2032:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nativeSrc": "2056:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nativeSrc": "2145:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nativeSrc": "2166:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nativeSrc": "2117:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nativeSrc": "2104:105:10",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nativeSrc": "2104:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:10",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:10",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nativeSrc": "2270:24:10",
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nativeSrc": "2280:8:10",
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:10",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:10",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nativeSrc": "2353:136:10",
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nativeSrc": "2363:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nativeSrc": "2377:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nativeSrc": "2418:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nativeSrc": "2418:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:10",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nativeSrc": "2545:136:10",
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:10",
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nativeSrc": "2626:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nativeSrc": "2626:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nativeSrc": "2562:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nativeSrc": "2555:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:10",
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nativeSrc": "2579:22:10",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nativeSrc": "2588:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:10",
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:10",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:10",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nativeSrc": "2766:464:10",
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:10",
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nativeSrc": "2806:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nativeSrc": "2822:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:10",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nativeSrc": "2906:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nativeSrc": "2892:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:10",
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:10",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:10",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nativeSrc": "3074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nativeSrc": "3071:49:10",
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nativeSrc": "3189:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nativeSrc": "3175:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nativeSrc": "3133:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nativeSrc": "3133:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nativeSrc": "2780:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nativeSrc": "2777:446:10",
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:10",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:10",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:10",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nativeSrc": "3299:54:10",
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nativeSrc": "3309:37:10",
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nativeSrc": "3330:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:10",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:10",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:10",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nativeSrc": "3410:118:10",
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nativeSrc": "3420:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nativeSrc": "3465:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nativeSrc": "3480:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nativeSrc": "3436:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:56:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:10",
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nativeSrc": "3507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:10",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:10",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:10",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nativeSrc": "3614:214:10",
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nativeSrc": "3747:37:10",
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nativeSrc": "3755:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nativeSrc": "3793:29:10",
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nativeSrc": "3810:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nativeSrc": "3801:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:10",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:10",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:10",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:10",
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nativeSrc": "3936:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nativeSrc": "3950:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:10",
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nativeSrc": "4074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nativeSrc": "4074:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nativeSrc": "4041:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nativeSrc": "4038:56:10",
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nativeSrc": "4104:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nativeSrc": "4144:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nativeSrc": "4118:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nativeSrc": "4203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nativeSrc": "4203:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nativeSrc": "4280:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:10",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:10",
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:10",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:10",
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:10",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nativeSrc": "4413:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nativeSrc": "4401:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:10",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nativeSrc": "4451:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:10",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:10",
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nativeSrc": "4608:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nativeSrc": "4602:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nativeSrc": "4587:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nativeSrc": "4587:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nativeSrc": "4646:24:10",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:10",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nativeSrc": "4656:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:10",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:10",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nativeSrc": "4700:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nativeSrc": "4532:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nativeSrc": "4524:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:10",
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:10",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:10",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nativeSrc": "4554:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:10",
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:10",
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nativeSrc": "4809:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nativeSrc": "4803:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:10",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:10",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nativeSrc": "4891:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nativeSrc": "4861:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nativeSrc": "4846:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nativeSrc": "4846:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nativeSrc": "4748:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nativeSrc": "4745:179:10",
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:10",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nativeSrc": "4954:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:10",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nativeSrc": "4950:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nativeSrc": "4937:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nativeSrc": "4937:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:10",
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:10",
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:10",
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:10",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nativeSrc": "5084:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nativeSrc": "5078:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nativeSrc": "5041:77:10",
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nativeSrc": "5144:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nativeSrc": "5131:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nativeSrc": "5131:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:10",
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nativeSrc": "4342:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nativeSrc": "4335:887:10",
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:10",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:10",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											},
											{
												"body": {
													"nativeSrc": "5262:152:10",
													"nodeType": "YulBlock",
													"src": "5262:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:10"
																},
																"nativeSrc": "5272:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:10"
															},
															"nativeSrc": "5272:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:10"
																},
																"nativeSrc": "5369:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:10"
															},
															"nativeSrc": "5369:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:10"
																},
																"nativeSrc": "5393:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:10"
															},
															"nativeSrc": "5393:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:10"
											},
											{
												"body": {
													"nativeSrc": "5471:51:10",
													"nodeType": "YulBlock",
													"src": "5471:51:10",
													"statements": [
														{
															"nativeSrc": "5481:34:10",
															"nodeType": "YulAssignment",
															"src": "5481:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:10"
																},
																"nativeSrc": "5502:13:10",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:10",
														"nodeType": "YulTypedName",
														"src": "5452:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:10",
														"nodeType": "YulTypedName",
														"src": "5462:8:10",
														"type": ""
													}
												],
												"src": "5420:102:10"
											},
											{
												"body": {
													"nativeSrc": "5601:775:10",
													"nodeType": "YulBlock",
													"src": "5601:775:10",
													"statements": [
														{
															"nativeSrc": "5611:15:10",
															"nodeType": "YulAssignment",
															"src": "5611:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:10",
																"nodeType": "YulIdentifier",
																"src": "5620:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:10"
																}
															]
														},
														{
															"nativeSrc": "5635:14:10",
															"nodeType": "YulAssignment",
															"src": "5635:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:10",
																"nodeType": "YulIdentifier",
																"src": "5644:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:10",
																"nodeType": "YulBlock",
																"src": "5693:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:10",
																			"nodeType": "YulBlock",
																			"src": "5781:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:10"
																						},
																						"nativeSrc": "5783:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:10"
																					},
																					"nativeSrc": "5783:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:10"
																					},
																					"nativeSrc": "5765:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:10"
																			},
																			"nativeSrc": "5756:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:10"
																		},
																		"nativeSrc": "5753:50:10",
																		"nodeType": "YulIf",
																		"src": "5753:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:10",
																			"nodeType": "YulBlock",
																			"src": "5848:419:10",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:10",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:10"
																						},
																						"nativeSrc": "6237:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:10"
																			},
																			"nativeSrc": "5819:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:10"
																		},
																		"nativeSrc": "5816:451:10",
																		"nodeType": "YulIf",
																		"src": "5816:451:10"
																	},
																	{
																		"nativeSrc": "6280:23:10",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:10"
																			},
																			"nativeSrc": "6288:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:10",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:10"
																			},
																			"nativeSrc": "6328:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:10"
																},
																"nativeSrc": "5666:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:10"
															},
															"nativeSrc": "5658:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:10",
																"nodeType": "YulBlock",
																"src": "5682:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:10",
																"nodeType": "YulBlock",
																"src": "5662:3:10",
																"statements": []
															},
															"src": "5658:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:10",
														"nodeType": "YulTypedName",
														"src": "5556:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:10",
														"nodeType": "YulTypedName",
														"src": "5564:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:10",
														"nodeType": "YulTypedName",
														"src": "5571:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:10",
														"nodeType": "YulTypedName",
														"src": "5581:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:10",
														"nodeType": "YulTypedName",
														"src": "5589:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:10",
														"nodeType": "YulTypedName",
														"src": "5596:4:10",
														"type": ""
													}
												],
												"src": "5528:848:10"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:10",
													"nodeType": "YulBlock",
													"src": "6442:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:10",
																"nodeType": "YulBlock",
																"src": "6637:20:10",
																"statements": [
																	{
																		"nativeSrc": "6639:10:10",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:10",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:10",
																		"nodeType": "YulLeave",
																		"src": "6650:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:10"
																},
																"nativeSrc": "6620:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:10"
															},
															"nativeSrc": "6617:40:10",
															"nodeType": "YulIf",
															"src": "6617:40:10"
														},
														{
															"body": {
																"nativeSrc": "6682:20:10",
																"nodeType": "YulBlock",
																"src": "6682:20:10",
																"statements": [
																	{
																		"nativeSrc": "6684:10:10",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:10",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:10",
																		"nodeType": "YulLeave",
																		"src": "6695:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:10"
																},
																"nativeSrc": "6669:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:10"
															},
															"nativeSrc": "6666:36:10",
															"nodeType": "YulIf",
															"src": "6666:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:10",
																		"nodeType": "YulBlock",
																		"src": "6812:20:10",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:10",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:10",
																				"nodeType": "YulLeave",
																				"src": "6825:5:10"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:10",
																	"nodeType": "YulCase",
																	"src": "6805:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:10",
																		"nodeType": "YulBlock",
																		"src": "6856:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:10",
																					"nodeType": "YulBlock",
																					"src": "6891:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:10"
																								},
																								"nativeSrc": "6893:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:10"
																							},
																							"nativeSrc": "6893:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:10",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:10"
																					},
																					"nativeSrc": "6873:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:10"
																				},
																				"nativeSrc": "6870:43:10",
																				"nodeType": "YulIf",
																				"src": "6870:43:10"
																			},
																			{
																				"nativeSrc": "6926:25:10",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:10",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:10"
																					},
																					"nativeSrc": "6935:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:10",
																					"nodeType": "YulBlock",
																					"src": "6982:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:10"
																								},
																								"nativeSrc": "6984:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:10"
																							},
																							"nativeSrc": "6984:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:10"
																					},
																					"nativeSrc": "6967:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:10"
																				},
																				"nativeSrc": "6964:40:10",
																				"nodeType": "YulIf",
																				"src": "6964:40:10"
																			},
																			{
																				"nativeSrc": "7017:5:10",
																				"nodeType": "YulLeave",
																				"src": "7017:5:10"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:10",
																	"nodeType": "YulCase",
																	"src": "6841:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:10",
																"nodeType": "YulIdentifier",
																"src": "6762:4:10"
															},
															"nativeSrc": "6755:277:10",
															"nodeType": "YulSwitch",
															"src": "6755:277:10"
														},
														{
															"body": {
																"nativeSrc": "7164:123:10",
																"nodeType": "YulBlock",
																"src": "7164:123:10",
																"statements": [
																	{
																		"nativeSrc": "7178:28:10",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:10"
																			},
																			"nativeSrc": "7187:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:10",
																			"nodeType": "YulBlock",
																			"src": "7237:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:10"
																						},
																						"nativeSrc": "7239:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:10"
																					},
																					"nativeSrc": "7239:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:10"
																			},
																			"nativeSrc": "7222:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:10"
																		},
																		"nativeSrc": "7219:40:10",
																		"nodeType": "YulIf",
																		"src": "7219:40:10"
																	},
																	{
																		"nativeSrc": "7272:5:10",
																		"nodeType": "YulLeave",
																		"src": "7272:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:10"
																				},
																				"nativeSrc": "7064:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:10"
																				},
																				"nativeSrc": "7078:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:10"
																		},
																		"nativeSrc": "7060:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:10",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:10"
																				},
																				"nativeSrc": "7113:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:10"
																				},
																				"nativeSrc": "7128:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:10"
																		},
																		"nativeSrc": "7109:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:10"
																},
																"nativeSrc": "7044:111:10",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:10"
															},
															"nativeSrc": "7041:246:10",
															"nodeType": "YulIf",
															"src": "7041:246:10"
														},
														{
															"nativeSrc": "7297:57:10",
															"nodeType": "YulAssignment",
															"src": "7297:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:10"
																},
																"nativeSrc": "7312:42:10",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:10",
																"nodeType": "YulBlock",
																"src": "7393:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:10"
																			},
																			"nativeSrc": "7395:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:10"
																		},
																		"nativeSrc": "7395:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:10"
																		},
																		"nativeSrc": "7377:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:10"
																},
																"nativeSrc": "7367:25:10",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:10"
															},
															"nativeSrc": "7364:51:10",
															"nodeType": "YulIf",
															"src": "7364:51:10"
														},
														{
															"nativeSrc": "7424:25:10",
															"nodeType": "YulAssignment",
															"src": "7424:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:10"
																},
																"nativeSrc": "7433:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:10",
														"nodeType": "YulTypedName",
														"src": "6412:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:10",
														"nodeType": "YulTypedName",
														"src": "6418:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:10",
														"nodeType": "YulTypedName",
														"src": "6428:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:10",
														"nodeType": "YulTypedName",
														"src": "6436:5:10",
														"type": ""
													}
												],
												"src": "6382:1073:10"
											},
											{
												"body": {
													"nativeSrc": "7504:43:10",
													"nodeType": "YulBlock",
													"src": "7504:43:10",
													"statements": [
														{
															"nativeSrc": "7514:27:10",
															"nodeType": "YulAssignment",
															"src": "7514:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7536:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7525:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:10"
																},
																"nativeSrc": "7525:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7525:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7514:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7461:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7486:5:10",
														"nodeType": "YulTypedName",
														"src": "7486:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7496:7:10",
														"nodeType": "YulTypedName",
														"src": "7496:7:10",
														"type": ""
													}
												],
												"src": "7461:86:10"
											},
											{
												"body": {
													"nativeSrc": "7617:217:10",
													"nodeType": "YulBlock",
													"src": "7617:217:10",
													"statements": [
														{
															"nativeSrc": "7627:31:10",
															"nodeType": "YulAssignment",
															"src": "7627:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7653:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7653:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7635:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7635:17:10"
																},
																"nativeSrc": "7635:23:10",
																"nodeType": "YulFunctionCall",
																"src": "7635:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7627:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:10"
																}
															]
														},
														{
															"nativeSrc": "7667:37:10",
															"nodeType": "YulAssignment",
															"src": "7667:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7695:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7695:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7679:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "7679:15:10"
																},
																"nativeSrc": "7679:25:10",
																"nodeType": "YulFunctionCall",
																"src": "7679:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:10"
																}
															]
														},
														{
															"nativeSrc": "7714:113:10",
															"nodeType": "YulAssignment",
															"src": "7714:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7744:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7744:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7750:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7750:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:66:10",
																		"nodeType": "YulLiteral",
																		"src": "7760:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7723:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "7723:20:10"
																},
																"nativeSrc": "7723:104:10",
																"nodeType": "YulFunctionCall",
																"src": "7723:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7714:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7714:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7553:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7592:4:10",
														"nodeType": "YulTypedName",
														"src": "7592:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7598:8:10",
														"nodeType": "YulTypedName",
														"src": "7598:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7611:5:10",
														"nodeType": "YulTypedName",
														"src": "7611:5:10",
														"type": ""
													}
												],
												"src": "7553:281:10"
											},
											{
												"body": {
													"nativeSrc": "7888:362:10",
													"nodeType": "YulBlock",
													"src": "7888:362:10",
													"statements": [
														{
															"nativeSrc": "7898:25:10",
															"nodeType": "YulAssignment",
															"src": "7898:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7921:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:10"
																},
																"nativeSrc": "7903:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7903:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7898:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:10"
																}
															]
														},
														{
															"nativeSrc": "7932:25:10",
															"nodeType": "YulAssignment",
															"src": "7932:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7955:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7937:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7937:17:10"
																},
																"nativeSrc": "7937:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7937:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7932:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7932:1:10"
																}
															]
														},
														{
															"nativeSrc": "7966:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7966:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7989:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7992:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:10"
																},
																"nativeSrc": "7985:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7985:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7970:11:10",
																	"nodeType": "YulTypedName",
																	"src": "7970:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8003:41:10",
															"nodeType": "YulAssignment",
															"src": "8003:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8032:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "8032:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8014:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8014:17:10"
																},
																"nativeSrc": "8014:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8014:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8003:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8003:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8221:22:10",
																"nodeType": "YulBlock",
																"src": "8221:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8223:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:10"
																			},
																			"nativeSrc": "8223:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:10"
																		},
																		"nativeSrc": "8223:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8154:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8154:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8147:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8147:6:10"
																				},
																				"nativeSrc": "8147:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8147:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8177:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8184:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8184:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8193:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8193:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8180:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8180:3:10"
																						},
																						"nativeSrc": "8180:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8180:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8174:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8174:2:10"
																				},
																				"nativeSrc": "8174:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8174:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8127:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8127:2:10"
																		},
																		"nativeSrc": "8127:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8107:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:10"
																},
																"nativeSrc": "8107:113:10",
																"nodeType": "YulFunctionCall",
																"src": "8107:113:10"
															},
															"nativeSrc": "8104:139:10",
															"nodeType": "YulIf",
															"src": "8104:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7840:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7871:1:10",
														"nodeType": "YulTypedName",
														"src": "7871:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7874:1:10",
														"nodeType": "YulTypedName",
														"src": "7874:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7880:7:10",
														"nodeType": "YulTypedName",
														"src": "7880:7:10",
														"type": ""
													}
												],
												"src": "7840:410:10"
											},
											{
												"body": {
													"nativeSrc": "8301:81:10",
													"nodeType": "YulBlock",
													"src": "8301:81:10",
													"statements": [
														{
															"nativeSrc": "8311:65:10",
															"nodeType": "YulAssignment",
															"src": "8311:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8326:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8326:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:42:10",
																		"nodeType": "YulLiteral",
																		"src": "8333:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:10"
																},
																"nativeSrc": "8322:54:10",
																"nodeType": "YulFunctionCall",
																"src": "8322:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8256:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:10",
														"nodeType": "YulTypedName",
														"src": "8283:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:10",
														"nodeType": "YulTypedName",
														"src": "8293:7:10",
														"type": ""
													}
												],
												"src": "8256:126:10"
											},
											{
												"body": {
													"nativeSrc": "8433:51:10",
													"nodeType": "YulBlock",
													"src": "8433:51:10",
													"statements": [
														{
															"nativeSrc": "8443:35:10",
															"nodeType": "YulAssignment",
															"src": "8443:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8472:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8472:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8454:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8454:17:10"
																},
																"nativeSrc": "8454:24:10",
																"nodeType": "YulFunctionCall",
																"src": "8454:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8443:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8443:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8388:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8415:5:10",
														"nodeType": "YulTypedName",
														"src": "8415:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8425:7:10",
														"nodeType": "YulTypedName",
														"src": "8425:7:10",
														"type": ""
													}
												],
												"src": "8388:96:10"
											},
											{
												"body": {
													"nativeSrc": "8555:53:10",
													"nodeType": "YulBlock",
													"src": "8555:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8572:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8595:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8595:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8577:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8577:17:10"
																		},
																		"nativeSrc": "8577:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:10"
																},
																"nativeSrc": "8565:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8565:37:10"
															},
															"nativeSrc": "8565:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8565:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8490:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:10",
														"nodeType": "YulTypedName",
														"src": "8543:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8550:3:10",
														"nodeType": "YulTypedName",
														"src": "8550:3:10",
														"type": ""
													}
												],
												"src": "8490:118:10"
											},
											{
												"body": {
													"nativeSrc": "8712:124:10",
													"nodeType": "YulBlock",
													"src": "8712:124:10",
													"statements": [
														{
															"nativeSrc": "8722:26:10",
															"nodeType": "YulAssignment",
															"src": "8722:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8734:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8734:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8730:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:10"
																},
																"nativeSrc": "8730:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8730:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8722:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8722:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8802:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8826:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:10"
																		},
																		"nativeSrc": "8811:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8758:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:10"
																},
																"nativeSrc": "8758:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8758:71:10"
															},
															"nativeSrc": "8758:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8758:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8614:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:10",
														"nodeType": "YulTypedName",
														"src": "8684:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8696:6:10",
														"nodeType": "YulTypedName",
														"src": "8696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8707:4:10",
														"nodeType": "YulTypedName",
														"src": "8707:4:10",
														"type": ""
													}
												],
												"src": "8614:222:10"
											},
											{
												"body": {
													"nativeSrc": "8886:147:10",
													"nodeType": "YulBlock",
													"src": "8886:147:10",
													"statements": [
														{
															"nativeSrc": "8896:25:10",
															"nodeType": "YulAssignment",
															"src": "8896:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8919:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8901:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8901:17:10"
																},
																"nativeSrc": "8901:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8901:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8896:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8896:1:10"
																}
															]
														},
														{
															"nativeSrc": "8930:25:10",
															"nodeType": "YulAssignment",
															"src": "8930:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8935:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8935:17:10"
																},
																"nativeSrc": "8935:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8935:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8930:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8930:1:10"
																}
															]
														},
														{
															"nativeSrc": "8964:16:10",
															"nodeType": "YulAssignment",
															"src": "8964:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8971:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:10"
																},
																"nativeSrc": "8971:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8964:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9004:22:10",
																"nodeType": "YulBlock",
																"src": "9004:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9006:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9006:16:10"
																			},
																			"nativeSrc": "9006:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:18:10"
																		},
																		"nativeSrc": "9006:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8999:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:10"
																},
																"nativeSrc": "8993:10:10",
																"nodeType": "YulFunctionCall",
																"src": "8993:10:10"
															},
															"nativeSrc": "8990:36:10",
															"nodeType": "YulIf",
															"src": "8990:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8842:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8873:1:10",
														"nodeType": "YulTypedName",
														"src": "8873:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8876:1:10",
														"nodeType": "YulTypedName",
														"src": "8876:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8882:3:10",
														"nodeType": "YulTypedName",
														"src": "8882:3:10",
														"type": ""
													}
												],
												"src": "8842:191:10"
											},
											{
												"body": {
													"nativeSrc": "9104:53:10",
													"nodeType": "YulBlock",
													"src": "9104:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9121:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9121:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9144:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9144:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9126:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9126:17:10"
																		},
																		"nativeSrc": "9126:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:10"
																},
																"nativeSrc": "9114:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9114:37:10"
															},
															"nativeSrc": "9114:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9114:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9039:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:10",
														"nodeType": "YulTypedName",
														"src": "9092:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9099:3:10",
														"nodeType": "YulTypedName",
														"src": "9099:3:10",
														"type": ""
													}
												],
												"src": "9039:118:10"
											},
											{
												"body": {
													"nativeSrc": "9317:288:10",
													"nodeType": "YulBlock",
													"src": "9317:288:10",
													"statements": [
														{
															"nativeSrc": "9327:26:10",
															"nodeType": "YulAssignment",
															"src": "9327:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9335:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:10"
																},
																"nativeSrc": "9335:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9335:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9407:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9407:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9431:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:10"
																		},
																		"nativeSrc": "9416:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9363:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9363:43:10"
																},
																"nativeSrc": "9363:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9363:71:10"
															},
															"nativeSrc": "9363:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9363:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9488:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:10"
																		},
																		"nativeSrc": "9497:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9444:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9444:43:10"
																},
																"nativeSrc": "9444:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9444:72:10"
															},
															"nativeSrc": "9444:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9444:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9570:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9594:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9579:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:10"
																		},
																		"nativeSrc": "9579:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9526:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9526:43:10"
																},
																"nativeSrc": "9526:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9526:72:10"
															},
															"nativeSrc": "9526:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9526:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9163:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:10",
														"nodeType": "YulTypedName",
														"src": "9273:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9285:6:10",
														"nodeType": "YulTypedName",
														"src": "9285:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9293:6:10",
														"nodeType": "YulTypedName",
														"src": "9293:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9301:6:10",
														"nodeType": "YulTypedName",
														"src": "9301:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9312:4:10",
														"nodeType": "YulTypedName",
														"src": "9312:4:10",
														"type": ""
													}
												],
												"src": "9163:442:10"
											},
											{
												"body": {
													"nativeSrc": "9709:124:10",
													"nodeType": "YulBlock",
													"src": "9709:124:10",
													"statements": [
														{
															"nativeSrc": "9719:26:10",
															"nodeType": "YulAssignment",
															"src": "9719:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9731:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9727:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:10"
																},
																"nativeSrc": "9727:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9727:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9719:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9823:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:10"
																		},
																		"nativeSrc": "9808:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:10"
																},
																"nativeSrc": "9755:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9755:71:10"
															},
															"nativeSrc": "9755:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9755:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9611:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:10",
														"nodeType": "YulTypedName",
														"src": "9681:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9693:6:10",
														"nodeType": "YulTypedName",
														"src": "9693:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9704:4:10",
														"nodeType": "YulTypedName",
														"src": "9704:4:10",
														"type": ""
													}
												],
												"src": "9611:222:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600b81526020017f455761737465546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4557540000000000000000000000000000000000000000000000000000000000815250816003908161008b919061075f565b50806004908161009b919061075f565b5050506100b05f801b3361011e60201b60201c565b506100e17fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361011e60201b60201c565b50610119336100f461021460201b60201c565b600a6101009190610996565b6298968061010e91906109e0565b61021c60201b60201c565b610b09565b5f61012f83836102a160201b60201c565b61020a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506101a761030560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061020e565b5f90505b92915050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361028c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102839190610a60565b60405180910390fd5b61029d5f838361030c60201b60201c565b5050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361035c578060025f8282546103509190610a79565b9250508190555061042a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103e5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103dc93929190610abb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610471578060025f82825403925050819055506104bb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105189190610af0565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105a057607f821691505b6020821081036105b3576105b261055c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105da565b61061f86836105da565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61066361065e61065984610637565b610640565b610637565b9050919050565b5f819050919050565b61067c83610649565b6106906106888261066a565b8484546105e6565b825550505050565b5f90565b6106a4610698565b6106af818484610673565b505050565b5b818110156106d2576106c75f8261069c565b6001810190506106b5565b5050565b601f821115610717576106e8816105b9565b6106f1846105cb565b81016020851015610700578190505b61071461070c856105cb565b8301826106b4565b50505b505050565b5f82821c905092915050565b5f6107375f198460080261071c565b1980831691505092915050565b5f61074f8383610728565b9150826002028217905092915050565b61076882610525565b67ffffffffffffffff8111156107815761078061052f565b5b61078b8254610589565b6107968282856106d6565b5f60209050601f8311600181146107c7575f84156107b5578287015190505b6107bf8582610744565b865550610826565b601f1984166107d5866105b9565b5f5b828110156107fc578489015182556001820191506020850194506020810190506107d7565b868310156108195784890151610815601f891682610728565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156108b05780860481111561088c5761088b61082e565b5b600185161561089b5780820291505b80810290506108a98561085b565b9450610870565b94509492505050565b5f826108c85760019050610983565b816108d5575f9050610983565b81600181146108eb57600281146108f557610924565b6001915050610983565b60ff8411156109075761090661082e565b5b8360020a91508482111561091e5761091d61082e565b5b50610983565b5060208310610133831016604e8410600b84101617156109595782820a9050838111156109545761095361082e565b5b610983565b6109668484846001610867565b9250905081840481111561097d5761097c61082e565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6109a082610637565b91506109ab8361098a565b92506109d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108b9565b905092915050565b5f6109ea82610637565b91506109f583610637565b9250828202610a0381610637565b91508282048414831517610a1a57610a1961082e565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a4a82610a21565b9050919050565b610a5a81610a40565b82525050565b5f602082019050610a735f830184610a51565b92915050565b5f610a8382610637565b9150610a8e83610637565b9250828201905080821115610aa657610aa561082e565b5b92915050565b610ab581610637565b82525050565b5f606082019050610ace5f830186610a51565b610adb6020830185610aac565b610ae86040830184610aac565b949350505050565b5f602082019050610b035f830184610aac565b92915050565b61359c80610b165f395ff3fe608060405234801561000f575f80fd5b506004361061023b575f3560e01c80638287662c11610139578063b8fe58e4116100b6578063d547741f1161007a578063d547741f146106c0578063d8101dcd146106dc578063dd62ed3e146106f8578063ed276caf14610728578063f0dda65c146107465761023b565b8063b8fe58e41461062a578063be65131614610648578063bf31377814610666578063c53b4b0914610684578063cb963a39146106a25761023b565b8063990281b8116100fd578063990281b8146105865780639ca39ae9146105a2578063a217fddf146105c0578063a73f7f8a146105de578063a9059cbb146105fa5761023b565b80638287662c146104e4578063855c72fb14610500578063918106741461051c57806391d148541461053857806395d89b41146105685761023b565b8063313ce567116101c757806365258b661161018b57806365258b661461043c5780636d6d00ed1461045a57806370a082311461047857806374e4d700146104a857806375b238fc146104c65761023b565b8063313ce567146103ac578063352b6dc3146103ca5780633609a1eb146103e657806336568abe14610402578063579108f71461041e5761023b565b80630f555c541161020e5780630f555c54146102f457806318160ddd1461031257806323b872dd14610330578063248a9ca3146103605780632f2ff15d146103905761023b565b806301ffc9a71461023f57806306fdde031461026f578063091929c01461028d578063095ea7b3146102c4575b5f80fd5b61025960048036038101906102549190612852565b610762565b6040516102669190612897565b60405180910390f35b6102776107db565b6040516102849190612920565b60405180910390f35b6102a760048036038101906102a29190612973565b61086b565b6040516102bb989796959493929190612a5f565b60405180910390f35b6102de60048036038101906102d99190612b0c565b61098d565b6040516102eb9190612897565b60405180910390f35b6102fc6109af565b6040516103099190612b4a565b60405180910390f35b61031a6109bb565b6040516103279190612b4a565b60405180910390f35b61034a60048036038101906103459190612b63565b6109c4565b6040516103579190612897565b60405180910390f35b61037a60048036038101906103759190612be6565b6109f2565b6040516103879190612c20565b60405180910390f35b6103aa60048036038101906103a59190612c39565b610a0f565b005b6103b4610a31565b6040516103c19190612c92565b60405180910390f35b6103e460048036038101906103df9190612e01565b610a39565b005b61040060048036038101906103fb9190612973565b610c93565b005b61041c60048036038101906104179190612c39565b610e34565b005b610426610eaf565b6040516104339190612c20565b60405180910390f35b610444610ed3565b6040516104519190612b4a565b60405180910390f35b610462610ede565b60405161046f9190612b4a565b60405180910390f35b610492600480360381019061048d9190612e81565b610ee4565b60405161049f9190612b4a565b60405180910390f35b6104b0610f29565b6040516104bd9190612b4a565b60405180910390f35b6104ce610f35565b6040516104db9190612c20565b60405180910390f35b6104fe60048036038101906104f99190612973565b610f59565b005b61051a60048036038101906105159190612973565b6110fb565b005b61053660048036038101906105319190612973565b6112ec565b005b610552600480360381019061054d9190612c39565b61148e565b60405161055f9190612897565b60405180910390f35b6105706114f2565b60405161057d9190612920565b60405180910390f35b6105a0600480360381019061059b9190612973565b611582565b005b6105aa611718565b6040516105b79190612c20565b60405180910390f35b6105c861173c565b6040516105d59190612c20565b60405180910390f35b6105f860048036038101906105f39190612eac565b611742565b005b610614600480360381019061060f9190612b0c565b61177b565b6040516106219190612897565b60405180910390f35b61063261179d565b60405161063f9190612b4a565b60405180910390f35b6106506117a9565b60405161065d9190612c20565b60405180910390f35b61066e6117cd565b60405161067b9190612c20565b60405180910390f35b61068c6117f1565b6040516106999190612b4a565b60405180910390f35b6106aa6117fd565b6040516106b79190612b4a565b60405180910390f35b6106da60048036038101906106d59190612c39565b611809565b005b6106f660048036038101906106f19190612973565b61182b565b005b610712600480360381019061070d9190612eea565b6119d6565b60405161071f9190612b4a565b60405180910390f35b610730611a58565b60405161073d9190612b4a565b60405180910390f35b610760600480360381019061075b9190612b0c565b611a64565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107d457506107d382611a9d565b5b9050919050565b6060600380546107ea90612f55565b80601f016020809104026020016040519081016040528092919081815260200182805461081690612f55565b80156108615780601f1061083857610100808354040283529160200191610861565b820191905f5260205f20905b81548152906001019060200180831161084457829003601f168201915b5050505050905090565b6006602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546108b590612f55565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190612f55565b801561092c5780601f106109035761010080835404028352916020019161092c565b820191905f5260205f20905b81548152906001019060200180831161090f57829003601f168201915b505050505090806003015490806004015490806005015f9054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160159054906101000a900460ff16905088565b5f80610997611b06565b90506109a4818585611b0d565b600191505092915050565b670de0b6b3a764000081565b5f600254905090565b5f806109ce611b06565b90506109db858285611b1f565b6109e6858585611bb2565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b610a18826109f2565b610a2181611ca2565b610a2b8383611cb6565b50505050565b5f6012905090565b5f82118015610a4757505f83115b610a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7d90612fcf565b60405180910390fd5b5f60075f815480929190610a999061301a565b9190505590506040518061010001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020015f6006811115610af257610af16129ec565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff16815260200183151581525060065f8381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610b8d91906131fe565b50606082015181600301556080820151816004015560a0820151816005015f6101000a81548160ff02191690836006811115610bcc57610bcb6129ec565b5b021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160050160156101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f46d5e1fa50133f2ad2b0346ff4a3f42484fe3bb406c6c15fd7ae095d10b125818587604051610c849291906132cd565b60405180910390a35050505050565b7f14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d2610cbd81611ca2565b5f6006811115610cd057610ccf6129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff166006811115610d0357610d026129ec565b5b14610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a9061333e565b60405180910390fd5b600160065f8481526020019081526020015f206005015f6101000a81548160ff02191690836006811115610d7a57610d796129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f610dde836001611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837f2a18ae28442ec525b81831921d81b734ce7861d68a812e4546c7945075766f1d83604051610e279190612b4a565b60405180910390a3505050565b610e3c611b06565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ea0576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610eaa8282611e25565b505050565b7fb636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c75581565b662386f26fc1000081565b60075481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b678ac7230489e8000081565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b7fab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e7610f8381611ca2565b60026006811115610f9757610f966129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff166006811115610fca57610fc96129ec565b5b1461100a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110019061333e565b60405180910390fd5b600360065f8481526020019081526020015f206005015f6101000a81548160ff02191690836006811115611041576110406129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6110a5836003611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837fe5e46d59e99676fbf7547ce5cc7583dc849e2af037032e0f6611224b75bb8967836040516110ee9190612b4a565b60405180910390a3505050565b7f11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd15461112581611ca2565b60016006811115611139576111386129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff16600681111561116c5761116b6129ec565b5b14806111bc575060036006811115611187576111866129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff1660068111156111ba576111b96129ec565b5b145b6111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f29061333e565b60405180910390fd5b600460065f8481526020019081526020015f206005015f6101000a81548160ff02191690836006811115611232576112316129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f611296836004611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837f3f0bdd39c575256b0686bbbc300a04a9c5828c01f9cc42a0179879b48b8eeddf836040516112df9190612b4a565b60405180910390a3505050565b7fb636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c75561131681611ca2565b6004600681111561132a576113296129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff16600681111561135d5761135c6129ec565b5b1461139d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113949061333e565b60405180910390fd5b600560065f8481526020019081526020015f206005015f6101000a81548160ff021916908360068111156113d4576113d36129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f611438836005611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837f77b29112f6bbaf1890ec3f52fb1f9ef0367e0babd3bcb3aa7d123b7a7734a54c836040516114819190612b4a565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461150190612f55565b80601f016020809104026020016040519081016040528092919081815260200182805461152d90612f55565b80156115785780601f1061154f57610100808354040283529160200191611578565b820191905f5260205f20905b81548152906001019060200180831161155b57829003601f168201915b5050505050905090565b7f14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d26115ac81611ca2565b600160068111156115c0576115bf6129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff1660068111156115f3576115f26129ec565b5b14611633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162a9061333e565b60405180910390fd5b60065f8381526020019081526020015f2060050160159054906101000a900460ff16611694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168b906133a6565b60405180910390fd5b600260065f8481526020019081526020015f206005015f6101000a81548160ff021916908360068111156116cb576116ca6129ec565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff16827fd0ff3b517d0c850b614729642e089a59aea81eb4ba36827eafe9b43b404da0d760405160405180910390a35050565b7f14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d281565b5f801b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561176c81611ca2565b6117768284610a0f565b505050565b5f80611785611b06565b9050611792818585611bb2565b600191505092915050565b676f05b59d3b20000081565b7fab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e781565b7f11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd15481565b676124fee993bc000081565b674563918244f4000081565b611812826109f2565b61181b81611ca2565b6118258383611e25565b50505050565b6005600681111561183f5761183e6129ec565b5b60065f8381526020019081526020015f206005015f9054906101000a900460ff166006811115611872576118716129ec565b5b146118b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a99061333e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660065f8381526020019081526020015f2060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194b9061340e565b60405180910390fd5b6006805f8381526020019081526020015f206005015f6101000a81548160ff0219169083600681111561198a576119896129ec565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff16817f278ab484a5db5fc05f3a869b94767b4a630943a85f774aa97a69aedb086c269c60405160405180910390a350565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6753444835ec58000081565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775611a8e81611ca2565b611a988383611f0f565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b611b1a8383836001611f8e565b505050565b5f611b2a84846119d6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015611bac5781811015611b9d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611b949392919061342c565b60405180910390fd5b611bab84848484035f611f8e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c22575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611c199190613461565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c92575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c899190613461565b60405180910390fd5b611c9d83838361215d565b505050565b611cb381611cae611b06565b612376565b50565b5f611cc1838361148e565b611d9657600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611d33611b06565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611d9a565b5f90505b92915050565b5f805f80611dae86866123c7565b9250925092505f818385611dc2919061347a565b611dcc919061347a565b9050611dd83382611f0f565b867f8841d639ba79954a7c240dde37b5d6e3990383dc2f87c13e288e408108efb4578786868686604051611e109594939291906134ad565b60405180910390a28094505050505092915050565b5f611e30838361148e565b15611f05575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611ea2611b06565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611f09565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f7f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611f769190613461565b60405180910390fd5b611f8a5f838361215d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611ffe575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ff59190613461565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361206e575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016120659190613461565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015612157578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161214e9190612b4a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121ad578060025f8282546121a1919061347a565b9250508190555061227b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612236578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161222d9392919061342c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036122c2578060025f828254039250508190555061230c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516123699190612b4a565b60405180910390a3505050565b612380828261148e565b6123c35780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016123ba9291906134fe565b60405180910390fd5b5050565b5f805f8060065f8781526020019081526020015f20604051806101000160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461245690612f55565b80601f016020809104026020016040519081016040528092919081815260200182805461248290612f55565b80156124cd5780601f106124a4576101008083540402835291602001916124cd565b820191905f5260205f20905b8154815290600101906020018083116124b057829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015f9054906101000a900460ff16600681111561250e5761250d6129ec565b5b60068111156125205761251f6129ec565b5b81526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160159054906101000a900460ff16151515158152505090505f60068111156125aa576125a96129ec565b5b8560068111156125bd576125bc6129ec565b5b036125d257678ac7230489e8000093506126c2565b600160068111156125e6576125e56129ec565b5b8560068111156125f9576125f86129ec565b5b0361260e57674563918244f4000093506126c1565b60036006811115612622576126216129ec565b5b856006811115612635576126346129ec565b5b0361264a57676f05b59d3b20000093506126c0565b6004600681111561265e5761265d6129ec565b5b856006811115612671576126706129ec565b5b0361268657676124fee993bc000093506126bf565b6005600681111561269a576126996129ec565b5b8560068111156126ad576126ac6129ec565b5b036126be576753444835ec58000093505b5b5b5b5b8060800151670de0b6b3a76400006126da9190613525565b9250600360068111156126f0576126ef6129ec565b5b856006811115612703576127026129ec565b5b0361271c576002836127159190613525565b92506127e4565b600460068111156127305761272f6129ec565b5b856006811115612743576127426129ec565b5b036127725760028160600151662386f26fc100006127619190613525565b61276b9190613525565b91506127e3565b60056006811115612786576127856129ec565b5b856006811115612799576127986129ec565b5b036127c85760038160600151662386f26fc100006127b79190613525565b6127c19190613525565b91506127e2565b8060600151662386f26fc100006127df9190613525565b91505b5b5b509250925092565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612831816127fd565b811461283b575f80fd5b50565b5f8135905061284c81612828565b92915050565b5f60208284031215612867576128666127f5565b5b5f6128748482850161283e565b91505092915050565b5f8115159050919050565b6128918161287d565b82525050565b5f6020820190506128aa5f830184612888565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6128f2826128b0565b6128fc81856128ba565b935061290c8185602086016128ca565b612915816128d8565b840191505092915050565b5f6020820190508181035f83015261293881846128e8565b905092915050565b5f819050919050565b61295281612940565b811461295c575f80fd5b50565b5f8135905061296d81612949565b92915050565b5f60208284031215612988576129876127f5565b5b5f6129958482850161295f565b91505092915050565b6129a781612940565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6129d6826129ad565b9050919050565b6129e6816129cc565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60078110612a2a57612a296129ec565b5b50565b5f819050612a3a82612a19565b919050565b5f612a4982612a2d565b9050919050565b612a5981612a3f565b82525050565b5f61010082019050612a735f83018b61299e565b612a80602083018a6129dd565b8181036040830152612a9281896128e8565b9050612aa1606083018861299e565b612aae608083018761299e565b612abb60a0830186612a50565b612ac860c08301856129dd565b612ad560e0830184612888565b9998505050505050505050565b612aeb816129cc565b8114612af5575f80fd5b50565b5f81359050612b0681612ae2565b92915050565b5f8060408385031215612b2257612b216127f5565b5b5f612b2f85828601612af8565b9250506020612b408582860161295f565b9150509250929050565b5f602082019050612b5d5f83018461299e565b92915050565b5f805f60608486031215612b7a57612b796127f5565b5b5f612b8786828701612af8565b9350506020612b9886828701612af8565b9250506040612ba98682870161295f565b9150509250925092565b5f819050919050565b612bc581612bb3565b8114612bcf575f80fd5b50565b5f81359050612be081612bbc565b92915050565b5f60208284031215612bfb57612bfa6127f5565b5b5f612c0884828501612bd2565b91505092915050565b612c1a81612bb3565b82525050565b5f602082019050612c335f830184612c11565b92915050565b5f8060408385031215612c4f57612c4e6127f5565b5b5f612c5c85828601612bd2565b9250506020612c6d85828601612af8565b9150509250929050565b5f60ff82169050919050565b612c8c81612c77565b82525050565b5f602082019050612ca55f830184612c83565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612ce9826128d8565b810181811067ffffffffffffffff82111715612d0857612d07612cb3565b5b80604052505050565b5f612d1a6127ec565b9050612d268282612ce0565b919050565b5f67ffffffffffffffff821115612d4557612d44612cb3565b5b612d4e826128d8565b9050602081019050919050565b828183375f83830152505050565b5f612d7b612d7684612d2b565b612d11565b905082815260208101848484011115612d9757612d96612caf565b5b612da2848285612d5b565b509392505050565b5f82601f830112612dbe57612dbd612cab565b5b8135612dce848260208601612d69565b91505092915050565b612de08161287d565b8114612dea575f80fd5b50565b5f81359050612dfb81612dd7565b92915050565b5f805f8060808587031215612e1957612e186127f5565b5b5f85013567ffffffffffffffff811115612e3657612e356127f9565b5b612e4287828801612daa565b9450506020612e538782880161295f565b9350506040612e648782880161295f565b9250506060612e7587828801612ded565b91505092959194509250565b5f60208284031215612e9657612e956127f5565b5b5f612ea384828501612af8565b91505092915050565b5f8060408385031215612ec257612ec16127f5565b5b5f612ecf85828601612af8565b9250506020612ee085828601612bd2565b9150509250929050565b5f8060408385031215612f0057612eff6127f5565b5b5f612f0d85828601612af8565b9250506020612f1e85828601612af8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612f6c57607f821691505b602082108103612f7f57612f7e612f28565b5b50919050565b7f496e76616c696420696e707574000000000000000000000000000000000000005f82015250565b5f612fb9600d836128ba565b9150612fc482612f85565b602082019050919050565b5f6020820190508181035f830152612fe681612fad565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61302482612940565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361305657613055612fed565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026130bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613082565b6130c78683613082565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6131026130fd6130f884612940565b6130df565b612940565b9050919050565b5f819050919050565b61311b836130e8565b61312f61312782613109565b84845461308e565b825550505050565b5f90565b613143613137565b61314e818484613112565b505050565b5b81811015613171576131665f8261313b565b600181019050613154565b5050565b601f8211156131b65761318781613061565b61319084613073565b8101602085101561319f578190505b6131b36131ab85613073565b830182613153565b50505b505050565b5f82821c905092915050565b5f6131d65f19846008026131bb565b1980831691505092915050565b5f6131ee83836131c7565b9150826002028217905092915050565b613207826128b0565b67ffffffffffffffff8111156132205761321f612cb3565b5b61322a8254612f55565b613235828285613175565b5f60209050601f831160018114613266575f8415613254578287015190505b61325e85826131e3565b8655506132c5565b601f19841661327486613061565b5f5b8281101561329b57848901518255600182019150602085019450602081019050613276565b868310156132b857848901516132b4601f8916826131c7565b8355505b6001600288020188555050505b505050505050565b5f6040820190506132e05f83018561299e565b6132ed602083018461299e565b9392505050565b7f496e76616c6964207374617475730000000000000000000000000000000000005f82015250565b5f613328600e836128ba565b9150613333826132f4565b602082019050919050565b5f6020820190508181035f8301526133558161331c565b9050919050565b7f4974656d206e6f742072657061697261626c65000000000000000000000000005f82015250565b5f6133906013836128ba565b915061339b8261335c565b602082019050919050565b5f6020820190508181035f8301526133bd81613384565b9050919050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f6133f86009836128ba565b9150613403826133c4565b602082019050919050565b5f6020820190508181035f830152613425816133ec565b9050919050565b5f60608201905061343f5f8301866129dd565b61344c602083018561299e565b613459604083018461299e565b949350505050565b5f6020820190506134745f8301846129dd565b92915050565b5f61348482612940565b915061348f83612940565b92508282019050808211156134a7576134a6612fed565b5b92915050565b5f60a0820190506134c05f830188612a50565b6134cd602083018761299e565b6134da604083018661299e565b6134e7606083018561299e565b6134f4608083018461299e565b9695505050505050565b5f6040820190506135115f8301856129dd565b61351e6020830184612c11565b9392505050565b5f61352f82612940565b915061353a83612940565b925082820261354881612940565b9150828204841483151761355f5761355e612fed565b5b509291505056fea26469706673582212206a3b36be9c963f420118913ea278407b2192d57099bd528afdb38c5e58591f2e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x455761737465546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4557540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST POP POP POP PUSH2 0xB0 PUSH0 DUP1 SHL CALLER PUSH2 0x11E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x11E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x119 CALLER PUSH2 0xF4 PUSH2 0x214 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH3 0x989680 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH0 PUSH2 0x12F DUP4 DUP4 PUSH2 0x2A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x20A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A7 PUSH2 0x305 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x20E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29D PUSH0 DUP4 DUP4 PUSH2 0x30C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x42A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3E5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x471 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4BB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5B3 JUMPI PUSH2 0x5B2 PUSH2 0x55C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x615 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x61F DUP7 DUP4 PUSH2 0x5DA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x663 PUSH2 0x65E PUSH2 0x659 DUP5 PUSH2 0x637 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67C DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x688 DUP3 PUSH2 0x66A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5E6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6A4 PUSH2 0x698 JUMP JUMPDEST PUSH2 0x6AF DUP2 DUP5 DUP5 PUSH2 0x673 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6C7 PUSH0 DUP3 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x717 JUMPI PUSH2 0x6E8 DUP2 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x6F1 DUP5 PUSH2 0x5CB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x700 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x714 PUSH2 0x70C DUP6 PUSH2 0x5CB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6B4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x737 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x71C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x74F DUP4 DUP4 PUSH2 0x728 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x768 DUP3 PUSH2 0x525 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x781 JUMPI PUSH2 0x780 PUSH2 0x52F JUMP JUMPDEST JUMPDEST PUSH2 0x78B DUP3 SLOAD PUSH2 0x589 JUMP JUMPDEST PUSH2 0x796 DUP3 DUP3 DUP6 PUSH2 0x6D6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7C7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7B5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7BF DUP6 DUP3 PUSH2 0x744 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x826 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7D5 DUP7 PUSH2 0x5B9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7FC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7D7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x819 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x815 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x728 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x8B0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x82E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x89B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x8A9 DUP6 PUSH2 0x85B JUMP JUMPDEST SWAP5 POP PUSH2 0x870 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x8C8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x983 JUMP JUMPDEST DUP2 PUSH2 0x8D5 JUMPI PUSH0 SWAP1 POP PUSH2 0x983 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x8EB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x8F5 JUMPI PUSH2 0x924 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x82E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x91E JUMPI PUSH2 0x91D PUSH2 0x82E JUMP JUMPDEST JUMPDEST POP PUSH2 0x983 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x959 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0x82E JUMP JUMPDEST JUMPDEST PUSH2 0x983 JUMP JUMPDEST PUSH2 0x966 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0x82E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9A0 DUP3 PUSH2 0x637 JUMP JUMPDEST SWAP2 POP PUSH2 0x9AB DUP4 PUSH2 0x98A JUMP JUMPDEST SWAP3 POP PUSH2 0x9D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EA DUP3 PUSH2 0x637 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F5 DUP4 PUSH2 0x637 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA03 DUP2 PUSH2 0x637 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x82E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA4A DUP3 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5A DUP2 PUSH2 0xA40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA73 PUSH0 DUP4 ADD DUP5 PUSH2 0xA51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA83 DUP3 PUSH2 0x637 JUMP JUMPDEST SWAP2 POP PUSH2 0xA8E DUP4 PUSH2 0x637 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0x82E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB5 DUP2 PUSH2 0x637 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xACE PUSH0 DUP4 ADD DUP7 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xADB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0xAE8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAAC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB03 PUSH0 DUP4 ADD DUP5 PUSH2 0xAAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x359C DUP1 PUSH2 0xB16 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8287662C GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xB8FE58E4 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xD8101DCD EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xED276CAF EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x746 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0xB8FE58E4 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xBE651316 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xBF313778 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xC53B4B09 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xCB963A39 EQ PUSH2 0x6A2 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x990281B8 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x990281B8 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x9CA39AE9 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xA73F7F8A EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5FA JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x8287662C EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x855C72FB EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x91810674 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x568 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x65258B66 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x65258B66 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x6D6D00ED EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x74E4D700 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x4C6 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x352B6DC3 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x3609A1EB EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x579108F7 EQ PUSH2 0x41E JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0xF555C54 GT PUSH2 0x20E JUMPI DUP1 PUSH4 0xF555C54 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x390 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x91929C0 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2C92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0xA39 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0xF59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x12EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x1582 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AA PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C8 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x2EAC JUMP JUMPDEST PUSH2 0x1742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x632 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x650 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66E PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68C PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AA PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x182B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x2EEA JUMP JUMPDEST PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x730 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73D SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x760 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1A64 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7D4 JUMPI POP PUSH2 0x7D3 DUP3 PUSH2 0x1A9D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x7EA SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x816 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x861 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x838 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x861 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x844 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x8B5 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E1 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x903 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x997 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A4 DUP2 DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9CE PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x9DB DUP6 DUP3 DUP6 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x9E6 DUP6 DUP6 DUP6 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 DUP3 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xA21 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0xA2B DUP4 DUP4 PUSH2 0x1CB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xA47 JUMPI POP PUSH0 DUP4 GT JUMPDEST PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7D SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA99 SWAP1 PUSH2 0x301A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x31FE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x46D5E1FA50133F2AD2B0346FF4A3F42484FE3BB406C6C15FD7AE095D10B12581 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC84 SWAP3 SWAP2 SWAP1 PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2 PUSH2 0xCBD DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD79 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0xDDE DUP4 PUSH1 0x1 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2A18AE28442EC525B81831921D81B734CE7861D68A812E4546C7945075766F1D DUP4 PUSH1 0x40 MLOAD PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE3C PUSH2 0x1B06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP3 DUP3 PUSH2 0x1E25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xB636CAC4A39CBEE3063D40395F1623A30746F1C8BC201CED0489C50A6345C755 DUP2 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xAB5C443DD93B1877C3B155B5E3DDB79CB901FD6F9D2E3BD366F3216A80B889E7 PUSH2 0xF83 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xFCA JUMPI PUSH2 0xFC9 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x10A5 DUP4 PUSH1 0x3 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xE5E46D59E99676FBF7547CE5CC7583DC849E2AF037032E0F6611224B75BB8967 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x11D2C681BC9C10ED61F9A422C0DBAADDC4054CE58EC726ACA73E7E4D31BCD154 PUSH2 0x1125 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x11BC JUMPI POP PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1186 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x11BA JUMPI PUSH2 0x11B9 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x11FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F2 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1232 JUMPI PUSH2 0x1231 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1296 DUP4 PUSH1 0x4 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x3F0BDD39C575256B0686BBBC300A04A9C5828C01F9CC42A0179879B48B8EEDDF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xB636CAC4A39CBEE3063D40395F1623A30746F1C8BC201CED0489C50A6345C755 PUSH2 0x1316 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x132A JUMPI PUSH2 0x1329 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x139D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1394 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1438 DUP4 PUSH1 0x5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x77B29112F6BBAF1890EC3F52FB1F9EF0367E0BABD3BCB3AA7D123B7A7734A54C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1501 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x152D SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x154F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x155B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2 PUSH2 0x15AC DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162A SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168B SWAP1 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CA PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xD0FF3B517D0C850B614729642E089A59AEA81EB4BA36827EAFE9B43B404DA0D7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x176C DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1776 DUP3 DUP5 PUSH2 0xA0F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1785 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x1792 DUP2 DUP6 DUP6 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x6F05B59D3B200000 DUP2 JUMP JUMPDEST PUSH32 0xAB5C443DD93B1877C3B155B5E3DDB79CB901FD6F9D2E3BD366F3216A80B889E7 DUP2 JUMP JUMPDEST PUSH32 0x11D2C681BC9C10ED61F9A422C0DBAADDC4054CE58EC726ACA73E7E4D31BCD154 DUP2 JUMP JUMPDEST PUSH8 0x6124FEE993BC0000 DUP2 JUMP JUMPDEST PUSH8 0x4563918244F40000 DUP2 JUMP JUMPDEST PUSH2 0x1812 DUP3 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1825 DUP4 DUP4 PUSH2 0x1E25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1872 JUMPI PUSH2 0x1871 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A9 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1954 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194B SWAP1 PUSH2 0x340E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x198A JUMPI PUSH2 0x1989 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x278AB484A5DB5FC05F3A869B94767B4A630943A85F774AA97A69AEDB086C269C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x53444835EC580000 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1A8E DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1A98 DUP4 DUP4 PUSH2 0x1F0F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1F8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2A DUP5 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1BAC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1B9D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x342C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BAB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C19 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C9D DUP4 DUP4 DUP4 PUSH2 0x215D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1CAE PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC1 DUP4 DUP4 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x1D96 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1D33 PUSH2 0x1B06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D9A JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1DAE DUP7 DUP7 PUSH2 0x23C7 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 DUP2 DUP4 DUP6 PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x347A JUMP JUMPDEST PUSH2 0x1DCC SWAP2 SWAP1 PUSH2 0x347A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DD8 CALLER DUP3 PUSH2 0x1F0F JUMP JUMPDEST DUP7 PUSH32 0x8841D639BA79954A7C240DDE37B5D6E3990383DC2F87C13E288E408108EFB457 DUP8 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E10 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E30 DUP4 DUP4 PUSH2 0x148E JUMP JUMPDEST ISZERO PUSH2 0x1F05 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EA2 PUSH2 0x1B06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F09 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F76 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F8A PUSH0 DUP4 DUP4 PUSH2 0x215D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FFE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF5 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x206E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2065 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2157 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x214E SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21AD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21A1 SWAP2 SWAP1 PUSH2 0x347A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x227B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2236 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x342C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22C2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x230C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2369 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2380 DUP3 DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x23C3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23BA SWAP3 SWAP2 SWAP1 PUSH2 0x34FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2456 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2482 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x250E JUMPI PUSH2 0x250D PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2520 JUMPI PUSH2 0x251F PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25AA JUMPI PUSH2 0x25A9 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25BD JUMPI PUSH2 0x25BC PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25D2 JUMPI PUSH8 0x8AC7230489E80000 SWAP4 POP PUSH2 0x26C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25E6 JUMPI PUSH2 0x25E5 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x260E JUMPI PUSH8 0x4563918244F40000 SWAP4 POP PUSH2 0x26C1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2622 JUMPI PUSH2 0x2621 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2635 JUMPI PUSH2 0x2634 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x264A JUMPI PUSH8 0x6F05B59D3B200000 SWAP4 POP PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x265E JUMPI PUSH2 0x265D PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2671 JUMPI PUSH2 0x2670 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2686 JUMPI PUSH8 0x6124FEE993BC0000 SWAP4 POP PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x269A JUMPI PUSH2 0x2699 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x26AD JUMPI PUSH2 0x26AC PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x26BE JUMPI PUSH8 0x53444835EC580000 SWAP4 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x26DA SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x26F0 JUMPI PUSH2 0x26EF PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2703 JUMPI PUSH2 0x2702 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x271C JUMPI PUSH1 0x2 DUP4 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP3 POP PUSH2 0x27E4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2730 JUMPI PUSH2 0x272F PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2743 JUMPI PUSH2 0x2742 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2772 JUMPI PUSH1 0x2 DUP2 PUSH1 0x60 ADD MLOAD PUSH7 0x2386F26FC10000 PUSH2 0x2761 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x276B SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2786 JUMPI PUSH2 0x2785 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2799 JUMPI PUSH2 0x2798 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x27C8 JUMPI PUSH1 0x3 DUP2 PUSH1 0x60 ADD MLOAD PUSH7 0x2386F26FC10000 PUSH2 0x27B7 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x27C1 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E2 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH7 0x2386F26FC10000 PUSH2 0x27DF SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2831 DUP2 PUSH2 0x27FD JUMP JUMPDEST DUP2 EQ PUSH2 0x283B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x284C DUP2 PUSH2 0x2828 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2867 JUMPI PUSH2 0x2866 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2874 DUP5 DUP3 DUP6 ADD PUSH2 0x283E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2891 DUP2 PUSH2 0x287D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28AA PUSH0 DUP4 ADD DUP5 PUSH2 0x2888 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28F2 DUP3 PUSH2 0x28B0 JUMP JUMPDEST PUSH2 0x28FC DUP2 DUP6 PUSH2 0x28BA JUMP JUMPDEST SWAP4 POP PUSH2 0x290C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28CA JUMP JUMPDEST PUSH2 0x2915 DUP2 PUSH2 0x28D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2938 DUP2 DUP5 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2952 DUP2 PUSH2 0x2940 JUMP JUMPDEST DUP2 EQ PUSH2 0x295C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x296D DUP2 PUSH2 0x2949 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2995 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29A7 DUP2 PUSH2 0x2940 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29D6 DUP3 PUSH2 0x29AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E6 DUP2 PUSH2 0x29CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x2A2A JUMPI PUSH2 0x2A29 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2A3A DUP3 PUSH2 0x2A19 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A49 DUP3 PUSH2 0x2A2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A59 DUP2 PUSH2 0x2A3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2A73 PUSH0 DUP4 ADD DUP12 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x2A80 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x29DD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2A92 DUP2 DUP10 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA1 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x2AAE PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x2ABB PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2A50 JUMP JUMPDEST PUSH2 0x2AC8 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x2AD5 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2888 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AEB DUP2 PUSH2 0x29CC JUMP JUMPDEST DUP2 EQ PUSH2 0x2AF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B06 DUP2 PUSH2 0x2AE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x2B21 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B2F DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B40 DUP6 DUP3 DUP7 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B5D PUSH0 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B7A JUMPI PUSH2 0x2B79 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B87 DUP7 DUP3 DUP8 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B98 DUP7 DUP3 DUP8 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BA9 DUP7 DUP3 DUP8 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC5 DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE0 DUP2 PUSH2 0x2BBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFB JUMPI PUSH2 0x2BFA PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C08 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C1A DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C33 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C4F JUMPI PUSH2 0x2C4E PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C5C DUP6 DUP3 DUP7 ADD PUSH2 0x2BD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C6D DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C8C DUP2 PUSH2 0x2C77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2CE9 DUP3 PUSH2 0x28D8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D08 JUMPI PUSH2 0x2D07 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D1A PUSH2 0x27EC JUMP JUMPDEST SWAP1 POP PUSH2 0x2D26 DUP3 DUP3 PUSH2 0x2CE0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D45 JUMPI PUSH2 0x2D44 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST PUSH2 0x2D4E DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B PUSH2 0x2D76 DUP5 PUSH2 0x2D2B JUMP JUMPDEST PUSH2 0x2D11 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D97 JUMPI PUSH2 0x2D96 PUSH2 0x2CAF JUMP JUMPDEST JUMPDEST PUSH2 0x2DA2 DUP5 DUP3 DUP6 PUSH2 0x2D5B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DBE JUMPI PUSH2 0x2DBD PUSH2 0x2CAB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DCE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DE0 DUP2 PUSH2 0x287D JUMP JUMPDEST DUP2 EQ PUSH2 0x2DEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DFB DUP2 PUSH2 0x2DD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E19 JUMPI PUSH2 0x2E18 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E36 JUMPI PUSH2 0x2E35 PUSH2 0x27F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2E42 DUP8 DUP3 DUP9 ADD PUSH2 0x2DAA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2E53 DUP8 DUP3 DUP9 ADD PUSH2 0x295F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2E64 DUP8 DUP3 DUP9 ADD PUSH2 0x295F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2E75 DUP8 DUP3 DUP9 ADD PUSH2 0x2DED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E96 JUMPI PUSH2 0x2E95 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EA3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EC2 JUMPI PUSH2 0x2EC1 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2ECF DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2EE0 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F00 JUMPI PUSH2 0x2EFF PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F0D DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1E DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2F6C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2F7F JUMPI PUSH2 0x2F7E PUSH2 0x2F28 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB9 PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP3 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE6 DUP2 PUSH2 0x2FAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3024 DUP3 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3056 JUMPI PUSH2 0x3055 PUSH2 0x2FED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x30BD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3082 JUMP JUMPDEST PUSH2 0x30C7 DUP7 DUP4 PUSH2 0x3082 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3102 PUSH2 0x30FD PUSH2 0x30F8 DUP5 PUSH2 0x2940 JUMP JUMPDEST PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x2940 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x311B DUP4 PUSH2 0x30E8 JUMP JUMPDEST PUSH2 0x312F PUSH2 0x3127 DUP3 PUSH2 0x3109 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x308E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3143 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x314E DUP2 DUP5 DUP5 PUSH2 0x3112 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3171 JUMPI PUSH2 0x3166 PUSH0 DUP3 PUSH2 0x313B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3154 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x31B6 JUMPI PUSH2 0x3187 DUP2 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x3190 DUP5 PUSH2 0x3073 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x319F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x31B3 PUSH2 0x31AB DUP6 PUSH2 0x3073 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3153 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31D6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x31BB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31EE DUP4 DUP4 PUSH2 0x31C7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3207 DUP3 PUSH2 0x28B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3220 JUMPI PUSH2 0x321F PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST PUSH2 0x322A DUP3 SLOAD PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x3235 DUP3 DUP3 DUP6 PUSH2 0x3175 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3266 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3254 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x325E DUP6 DUP3 PUSH2 0x31E3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x32C5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3274 DUP7 PUSH2 0x3061 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x329B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3276 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x32B8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x32B4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x31C7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x32ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420737461747573000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3328 PUSH1 0xE DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x3333 DUP3 PUSH2 0x32F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3355 DUP2 PUSH2 0x331C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F742072657061697261626C6500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3390 PUSH1 0x13 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x339B DUP3 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33BD DUP2 PUSH2 0x3384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33F8 PUSH1 0x9 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x3403 DUP3 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3425 DUP2 PUSH2 0x33EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x343F PUSH0 DUP4 ADD DUP7 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x344C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x3459 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3474 PUSH0 DUP4 ADD DUP5 PUSH2 0x29DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3484 DUP3 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP PUSH2 0x348F DUP4 PUSH2 0x2940 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x34A7 JUMPI PUSH2 0x34A6 PUSH2 0x2FED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x34C0 PUSH0 DUP4 ADD DUP9 PUSH2 0x2A50 JUMP JUMPDEST PUSH2 0x34CD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x34DA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x34E7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x34F4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3511 PUSH0 DUP4 ADD DUP6 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x351E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C11 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x352F DUP3 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP PUSH2 0x353A DUP4 PUSH2 0x2940 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3548 DUP2 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x355F JUMPI PUSH2 0x355E PUSH2 0x2FED JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x3B36BE9C963F420118913E LOG2 PUSH25 0x407B2192D57099BD528AFDB38C5E58591F2E64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "179:7826:9:-:0;;;2461:205;;;;;;;;;;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;2514:42:9::1;2232:4:0;2525:18:9::0;::::1;2545:10;2514;;;:42;;:::i;:::-;;2567:34;580:23;2590:10;2567;;;:34;;:::i;:::-;;2612:46;2618:10;2647;:8;;;:10;;:::i;:::-;2643:2;:14;;;;:::i;:::-;2630:10;:27;;;;:::i;:::-;2612:5;;;:46;;:::i;:::-;179:7826:::0;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;6008:1107:3:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:126::-;8293:7;8333:42;8326:5;8322:54;8311:65;;8256:126;;;:::o;8388:96::-;8425:7;8454:24;8472:5;8454:24;:::i;:::-;8443:35;;8388:96;;;:::o;8490:118::-;8577:24;8595:5;8577:24;:::i;:::-;8572:3;8565:37;8490:118;;:::o;8614:222::-;8707:4;8745:2;8734:9;8730:18;8722:26;;8758:71;8826:1;8815:9;8811:17;8802:6;8758:71;:::i;:::-;8614:222;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;179:7826:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1233": {
									"entryPoint": 3893,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_COLLECTION_REWARD_1239": {
									"entryPoint": 6141,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_DISMANTLE_REWARD_1248": {
									"entryPoint": 6744,
									"id": 1248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_DISPOSAL_REWARD_1236": {
									"entryPoint": 3881,
									"id": 1236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_RECYCLING_REWARD_1242": {
									"entryPoint": 6129,
									"id": 1242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_REPAIR_REWARD_1245": {
									"entryPoint": 6045,
									"id": 1245,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COLLECTOR_ROLE_1213": {
									"entryPoint": 5912,
									"id": 1213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 5948,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DISMANTLER_ROLE_1223": {
									"entryPoint": 3759,
									"id": 1223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PER_GRAM_REWARD_1254": {
									"entryPoint": 3795,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PER_ITEM_REWARD_1251": {
									"entryPoint": 2479,
									"id": 1251,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RECYCLER_ROLE_1218": {
									"entryPoint": 6093,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REPAIRER_ROLE_1228": {
									"entryPoint": 6057,
									"id": 1228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 6925,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 8078,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_calculateAndMintReward_1784": {
									"entryPoint": 7584,
									"id": 1784,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkRole_114": {
									"entryPoint": 9078,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 7330,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getRewardComponents_1913": {
									"entryPoint": 9159,
									"id": 1913,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@_grantRole_256": {
									"entryPoint": 7350,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 7951,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": 6918,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 7717,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 6943,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 7090,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 8541,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addRole_1929": {
									"entryPoint": 5954,
									"id": 1929,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": 6614,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 2445,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": 3812,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@collectItem_1492": {
									"entryPoint": 3219,
									"id": 1492,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createItem_1441": {
									"entryPoint": 2617,
									"id": 1441,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 2609,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@dismantleItem_1695": {
									"entryPoint": 4844,
									"id": 1695,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2546,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2575,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 5262,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@itemCounter_1287": {
									"entryPoint": 3806,
									"id": 1287,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@markAsRepairable_1534": {
									"entryPoint": 5506,
									"id": 1534,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintTokens_1945": {
									"entryPoint": 6756,
									"id": 1945,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 2011,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recycleItem_1644": {
									"entryPoint": 4347,
									"id": 1644,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 3636,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@repairItem_1585": {
									"entryPoint": 3929,
									"id": 1585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@resellItem_1737": {
									"entryPoint": 6187,
									"id": 1737,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 6153,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1187": {
									"entryPoint": 6813,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1890,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 5362,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": 2491,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 2500,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 6011,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@wasteItems_1285": {
									"entryPoint": 2155,
									"id": 1285,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 11625,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 11000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 11757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 11218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 10302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 11690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 12010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 11107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes32": {
									"entryPoint": 11948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 11020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 11238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 11321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 10322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_bool": {
									"entryPoint": 11777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$1280_to_t_uint8_fromStack": {
									"entryPoint": 10832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 13409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 13566,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13356,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$1280_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13485,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 11082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_enum$_Status_$1280_t_address_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint8_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 10847,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13005,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 11537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 10220,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 11563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 12385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 13605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 12661,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 11187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 10237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$1280": {
									"entryPoint": 10797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 12627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_enum$_Status_$1280_to_t_uint8": {
									"entryPoint": 10815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 12520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 12798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 11611,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 12403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 12117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 12771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 11488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 12511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 12314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 12743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 10732,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 12072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 12553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 12418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 12731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 12603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857": {
									"entryPoint": 13044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c": {
									"entryPoint": 13148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b": {
									"entryPoint": 12165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682": {
									"entryPoint": 13252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 12430,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 12562,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Status_$1280": {
									"entryPoint": 10777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 11196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 12599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25734:10",
										"nodeType": "YulBlock",
										"src": "0:25734:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "378:105:10",
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nativeSrc": "388:89:10",
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:10",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nativeSrc": "399:78:10",
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:10",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:10",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nativeSrc": "531:78:10",
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:10",
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:10",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nativeSrc": "589:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nativeSrc": "589:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nativeSrc": "561:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nativeSrc": "551:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nativeSrc": "544:42:10",
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nativeSrc": "541:62:10",
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:10",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nativeSrc": "666:86:10",
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nativeSrc": "676:29:10",
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nativeSrc": "685:20:10",
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nativeSrc": "714:32:10",
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nativeSrc": "714:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:10",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:10",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:10",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nativeSrc": "823:262:10",
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:10",
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nativeSrc": "871:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nativeSrc": "871:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nativeSrc": "840:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:10",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nativeSrc": "836:32:10",
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nativeSrc": "833:119:10",
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nativeSrc": "962:116:10",
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nativeSrc": "977:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:10",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:10",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:10",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nativeSrc": "1036:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nativeSrc": "1016:52:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:10",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:10",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:10",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nativeSrc": "1133:48:10",
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nativeSrc": "1143:32:10",
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nativeSrc": "1161:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nativeSrc": "1154:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:10",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:10",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nativeSrc": "1246:50:10",
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nativeSrc": "1268:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nativeSrc": "1256:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nativeSrc": "1256:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:10",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:10",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nativeSrc": "1394:118:10",
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nativeSrc": "1404:26:10",
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nativeSrc": "1412:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nativeSrc": "1487:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nativeSrc": "1440:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nativeSrc": "1440:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:10",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:10",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:10",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nativeSrc": "1577:40:10",
													"nodeType": "YulBlock",
													"src": "1577:40:10",
													"statements": [
														{
															"nativeSrc": "1588:22:10",
															"nodeType": "YulAssignment",
															"src": "1588:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:10"
																},
																"nativeSrc": "1598:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:10",
														"nodeType": "YulTypedName",
														"src": "1560:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:10",
														"nodeType": "YulTypedName",
														"src": "1570:6:10",
														"type": ""
													}
												],
												"src": "1518:99:10"
											},
											{
												"body": {
													"nativeSrc": "1719:73:10",
													"nodeType": "YulBlock",
													"src": "1719:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:10"
																},
																"nativeSrc": "1729:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:10"
															},
															"nativeSrc": "1729:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:10"
														},
														{
															"nativeSrc": "1757:29:10",
															"nodeType": "YulAssignment",
															"src": "1757:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:10"
																},
																"nativeSrc": "1772:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:10",
														"nodeType": "YulTypedName",
														"src": "1691:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:10",
														"nodeType": "YulTypedName",
														"src": "1696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:10",
														"nodeType": "YulTypedName",
														"src": "1707:11:10",
														"type": ""
													}
												],
												"src": "1623:169:10"
											},
											{
												"body": {
													"nativeSrc": "1860:77:10",
													"nodeType": "YulBlock",
													"src": "1860:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:10"
																},
																"nativeSrc": "1871:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:10"
															},
															"nativeSrc": "1871:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:10"
																		},
																		"nativeSrc": "1910:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:10"
																},
																"nativeSrc": "1903:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:10"
															},
															"nativeSrc": "1903:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:10",
														"nodeType": "YulTypedName",
														"src": "1842:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:10",
														"nodeType": "YulTypedName",
														"src": "1847:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:10",
														"nodeType": "YulTypedName",
														"src": "1852:6:10",
														"type": ""
													}
												],
												"src": "1798:139:10"
											},
											{
												"body": {
													"nativeSrc": "1991:54:10",
													"nodeType": "YulBlock",
													"src": "1991:54:10",
													"statements": [
														{
															"nativeSrc": "2001:38:10",
															"nodeType": "YulAssignment",
															"src": "2001:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:10"
																		},
																		"nativeSrc": "2015:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:10"
																		},
																		"nativeSrc": "2031:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:10"
																},
																"nativeSrc": "2011:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:10",
														"nodeType": "YulTypedName",
														"src": "1974:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:10",
														"nodeType": "YulTypedName",
														"src": "1984:6:10",
														"type": ""
													}
												],
												"src": "1943:102:10"
											},
											{
												"body": {
													"nativeSrc": "2143:285:10",
													"nodeType": "YulBlock",
													"src": "2143:285:10",
													"statements": [
														{
															"nativeSrc": "2153:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:10"
																},
																"nativeSrc": "2167:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:10",
															"nodeType": "YulAssignment",
															"src": "2215:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:10"
																},
																"nativeSrc": "2222:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:10"
																		},
																		"nativeSrc": "2337:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:10"
																},
																"nativeSrc": "2302:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:10"
															},
															"nativeSrc": "2302:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:10"
														},
														{
															"nativeSrc": "2376:46:10",
															"nodeType": "YulAssignment",
															"src": "2376:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:10"
																		},
																		"nativeSrc": "2392:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:10"
																},
																"nativeSrc": "2383:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:10",
														"nodeType": "YulTypedName",
														"src": "2124:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:10",
														"nodeType": "YulTypedName",
														"src": "2131:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:10",
														"nodeType": "YulTypedName",
														"src": "2139:3:10",
														"type": ""
													}
												],
												"src": "2051:377:10"
											},
											{
												"body": {
													"nativeSrc": "2552:195:10",
													"nodeType": "YulBlock",
													"src": "2552:195:10",
													"statements": [
														{
															"nativeSrc": "2562:26:10",
															"nodeType": "YulAssignment",
															"src": "2562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:10"
																},
																"nativeSrc": "2570:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:10"
																		},
																		"nativeSrc": "2605:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:10"
																		},
																		"nativeSrc": "2624:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:10"
																},
																"nativeSrc": "2598:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:10"
															},
															"nativeSrc": "2598:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:10"
														},
														{
															"nativeSrc": "2654:86:10",
															"nodeType": "YulAssignment",
															"src": "2654:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:10"
																},
																"nativeSrc": "2662:78:10",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:10",
														"nodeType": "YulTypedName",
														"src": "2524:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:10",
														"nodeType": "YulTypedName",
														"src": "2536:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:10",
														"nodeType": "YulTypedName",
														"src": "2547:4:10",
														"type": ""
													}
												],
												"src": "2434:313:10"
											},
											{
												"body": {
													"nativeSrc": "2798:32:10",
													"nodeType": "YulBlock",
													"src": "2798:32:10",
													"statements": [
														{
															"nativeSrc": "2808:16:10",
															"nodeType": "YulAssignment",
															"src": "2808:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:10",
																"nodeType": "YulIdentifier",
																"src": "2819:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:10",
														"nodeType": "YulTypedName",
														"src": "2780:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:10",
														"nodeType": "YulTypedName",
														"src": "2790:7:10",
														"type": ""
													}
												],
												"src": "2753:77:10"
											},
											{
												"body": {
													"nativeSrc": "2879:79:10",
													"nodeType": "YulBlock",
													"src": "2879:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:10",
																"nodeType": "YulBlock",
																"src": "2936:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:10"
																			},
																			"nativeSrc": "2938:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:10"
																		},
																		"nativeSrc": "2938:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:10"
																				},
																				"nativeSrc": "2909:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:10"
																		},
																		"nativeSrc": "2899:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:10"
																},
																"nativeSrc": "2892:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:10"
															},
															"nativeSrc": "2889:63:10",
															"nodeType": "YulIf",
															"src": "2889:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:10",
														"nodeType": "YulTypedName",
														"src": "2872:5:10",
														"type": ""
													}
												],
												"src": "2836:122:10"
											},
											{
												"body": {
													"nativeSrc": "3016:87:10",
													"nodeType": "YulBlock",
													"src": "3016:87:10",
													"statements": [
														{
															"nativeSrc": "3026:29:10",
															"nodeType": "YulAssignment",
															"src": "3026:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:10"
																},
																"nativeSrc": "3035:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:10"
																},
																"nativeSrc": "3064:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:10"
															},
															"nativeSrc": "3064:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:10",
														"nodeType": "YulTypedName",
														"src": "2994:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:10",
														"nodeType": "YulTypedName",
														"src": "3002:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:10",
														"nodeType": "YulTypedName",
														"src": "3010:5:10",
														"type": ""
													}
												],
												"src": "2964:139:10"
											},
											{
												"body": {
													"nativeSrc": "3175:263:10",
													"nodeType": "YulBlock",
													"src": "3175:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:10",
																"nodeType": "YulBlock",
																"src": "3221:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:10"
																			},
																			"nativeSrc": "3223:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:10"
																		},
																		"nativeSrc": "3223:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:10"
																		},
																		"nativeSrc": "3192:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:10"
																},
																"nativeSrc": "3188:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:10"
															},
															"nativeSrc": "3185:119:10",
															"nodeType": "YulIf",
															"src": "3185:119:10"
														},
														{
															"nativeSrc": "3314:117:10",
															"nodeType": "YulBlock",
															"src": "3314:117:10",
															"statements": [
																{
																	"nativeSrc": "3329:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:10"
																				},
																				"nativeSrc": "3389:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:10"
																		},
																		"nativeSrc": "3368:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:10",
														"nodeType": "YulTypedName",
														"src": "3145:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:10",
														"nodeType": "YulTypedName",
														"src": "3156:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:10",
														"nodeType": "YulTypedName",
														"src": "3168:6:10",
														"type": ""
													}
												],
												"src": "3109:329:10"
											},
											{
												"body": {
													"nativeSrc": "3509:53:10",
													"nodeType": "YulBlock",
													"src": "3509:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3526:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3549:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3549:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3531:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3531:17:10"
																		},
																		"nativeSrc": "3531:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3531:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3519:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:10"
																},
																"nativeSrc": "3519:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3519:37:10"
															},
															"nativeSrc": "3519:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3519:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3444:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3497:5:10",
														"nodeType": "YulTypedName",
														"src": "3497:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3504:3:10",
														"nodeType": "YulTypedName",
														"src": "3504:3:10",
														"type": ""
													}
												],
												"src": "3444:118:10"
											},
											{
												"body": {
													"nativeSrc": "3613:81:10",
													"nodeType": "YulBlock",
													"src": "3613:81:10",
													"statements": [
														{
															"nativeSrc": "3623:65:10",
															"nodeType": "YulAssignment",
															"src": "3623:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3638:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3638:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:42:10",
																		"nodeType": "YulLiteral",
																		"src": "3645:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3634:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3634:3:10"
																},
																"nativeSrc": "3634:54:10",
																"nodeType": "YulFunctionCall",
																"src": "3634:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3568:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3595:5:10",
														"nodeType": "YulTypedName",
														"src": "3595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3605:7:10",
														"nodeType": "YulTypedName",
														"src": "3605:7:10",
														"type": ""
													}
												],
												"src": "3568:126:10"
											},
											{
												"body": {
													"nativeSrc": "3745:51:10",
													"nodeType": "YulBlock",
													"src": "3745:51:10",
													"statements": [
														{
															"nativeSrc": "3755:35:10",
															"nodeType": "YulAssignment",
															"src": "3755:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3784:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3784:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3766:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3766:17:10"
																},
																"nativeSrc": "3766:24:10",
																"nodeType": "YulFunctionCall",
																"src": "3766:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3755:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3700:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:10",
														"nodeType": "YulTypedName",
														"src": "3727:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3737:7:10",
														"nodeType": "YulTypedName",
														"src": "3737:7:10",
														"type": ""
													}
												],
												"src": "3700:96:10"
											},
											{
												"body": {
													"nativeSrc": "3867:53:10",
													"nodeType": "YulBlock",
													"src": "3867:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3884:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3884:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3907:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3907:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3889:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3889:17:10"
																		},
																		"nativeSrc": "3889:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3889:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3877:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:10"
																},
																"nativeSrc": "3877:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3877:37:10"
															},
															"nativeSrc": "3877:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3877:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3802:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3855:5:10",
														"nodeType": "YulTypedName",
														"src": "3855:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3862:3:10",
														"nodeType": "YulTypedName",
														"src": "3862:3:10",
														"type": ""
													}
												],
												"src": "3802:118:10"
											},
											{
												"body": {
													"nativeSrc": "3954:152:10",
													"nodeType": "YulBlock",
													"src": "3954:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3971:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3974:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3974:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3964:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:10"
																},
																"nativeSrc": "3964:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3964:88:10"
															},
															"nativeSrc": "3964:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3964:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4068:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4071:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4071:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4061:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4061:6:10"
																},
																"nativeSrc": "4061:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4061:15:10"
															},
															"nativeSrc": "4061:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4061:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4092:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4092:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4095:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4095:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4085:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4085:6:10"
																},
																"nativeSrc": "4085:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4085:15:10"
															},
															"nativeSrc": "4085:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4085:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "3926:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3926:180:10"
											},
											{
												"body": {
													"nativeSrc": "4166:62:10",
													"nodeType": "YulBlock",
													"src": "4166:62:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4200:22:10",
																"nodeType": "YulBlock",
																"src": "4200:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "4202:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4202:16:10"
																			},
																			"nativeSrc": "4202:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4202:18:10"
																		},
																		"nativeSrc": "4202:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4202:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4189:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4189:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4196:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4196:1:10",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4186:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4186:2:10"
																		},
																		"nativeSrc": "4186:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4186:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4179:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4179:6:10"
																},
																"nativeSrc": "4179:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4179:20:10"
															},
															"nativeSrc": "4176:46:10",
															"nodeType": "YulIf",
															"src": "4176:46:10"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$1280",
												"nativeSrc": "4112:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4159:5:10",
														"nodeType": "YulTypedName",
														"src": "4159:5:10",
														"type": ""
													}
												],
												"src": "4112:116:10"
											},
											{
												"body": {
													"nativeSrc": "4290:77:10",
													"nodeType": "YulBlock",
													"src": "4290:77:10",
													"statements": [
														{
															"nativeSrc": "4300:16:10",
															"nodeType": "YulAssignment",
															"src": "4300:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "4311:5:10",
																"nodeType": "YulIdentifier",
																"src": "4311:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4300:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4300:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4355:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4355:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$1280",
																	"nativeSrc": "4317:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "4317:37:10"
																},
																"nativeSrc": "4317:44:10",
																"nodeType": "YulFunctionCall",
																"src": "4317:44:10"
															},
															"nativeSrc": "4317:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "4317:44:10"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$1280",
												"nativeSrc": "4234:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4272:5:10",
														"nodeType": "YulTypedName",
														"src": "4272:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4282:7:10",
														"nodeType": "YulTypedName",
														"src": "4282:7:10",
														"type": ""
													}
												],
												"src": "4234:133:10"
											},
											{
												"body": {
													"nativeSrc": "4442:64:10",
													"nodeType": "YulBlock",
													"src": "4442:64:10",
													"statements": [
														{
															"nativeSrc": "4452:48:10",
															"nodeType": "YulAssignment",
															"src": "4452:48:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4494:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4494:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$1280",
																	"nativeSrc": "4465:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "4465:28:10"
																},
																"nativeSrc": "4465:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4465:35:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4452:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4452:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$1280_to_t_uint8",
												"nativeSrc": "4373:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:10",
														"nodeType": "YulTypedName",
														"src": "4422:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4432:9:10",
														"nodeType": "YulTypedName",
														"src": "4432:9:10",
														"type": ""
													}
												],
												"src": "4373:133:10"
											},
											{
												"body": {
													"nativeSrc": "4586:75:10",
													"nodeType": "YulBlock",
													"src": "4586:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4603:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4603:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4648:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4648:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$1280_to_t_uint8",
																			"nativeSrc": "4608:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "4608:39:10"
																		},
																		"nativeSrc": "4608:46:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4608:46:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4596:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4596:6:10"
																},
																"nativeSrc": "4596:59:10",
																"nodeType": "YulFunctionCall",
																"src": "4596:59:10"
															},
															"nativeSrc": "4596:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "4596:59:10"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$1280_to_t_uint8_fromStack",
												"nativeSrc": "4512:149:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4574:5:10",
														"nodeType": "YulTypedName",
														"src": "4574:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4581:3:10",
														"nodeType": "YulTypedName",
														"src": "4581:3:10",
														"type": ""
													}
												],
												"src": "4512:149:10"
											},
											{
												"body": {
													"nativeSrc": "4984:777:10",
													"nodeType": "YulBlock",
													"src": "4984:777:10",
													"statements": [
														{
															"nativeSrc": "4994:27:10",
															"nodeType": "YulAssignment",
															"src": "4994:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5006:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5006:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5017:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5017:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5002:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:10"
																},
																"nativeSrc": "5002:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5002:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4994:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4994:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5075:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5075:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5088:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5088:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5099:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5099:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5084:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5084:3:10"
																		},
																		"nativeSrc": "5084:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5031:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5031:43:10"
																},
																"nativeSrc": "5031:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5031:71:10"
															},
															"nativeSrc": "5031:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5031:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5156:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5156:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5169:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5169:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5180:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5180:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:10"
																		},
																		"nativeSrc": "5165:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5165:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5112:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5112:43:10"
																},
																"nativeSrc": "5112:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5112:72:10"
															},
															"nativeSrc": "5112:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5112:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5205:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5216:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5216:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5201:3:10"
																		},
																		"nativeSrc": "5201:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5201:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5225:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5225:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5231:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5231:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5221:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5221:3:10"
																		},
																		"nativeSrc": "5221:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5221:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:10"
																},
																"nativeSrc": "5194:48:10",
																"nodeType": "YulFunctionCall",
																"src": "5194:48:10"
															},
															"nativeSrc": "5194:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "5194:48:10"
														},
														{
															"nativeSrc": "5251:86:10",
															"nodeType": "YulAssignment",
															"src": "5251:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5323:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5332:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5332:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5259:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "5259:63:10"
																},
																"nativeSrc": "5259:78:10",
																"nodeType": "YulFunctionCall",
																"src": "5259:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5251:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5251:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5391:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5391:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5404:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5404:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5415:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5415:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5400:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:10"
																		},
																		"nativeSrc": "5400:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5347:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5347:43:10"
																},
																"nativeSrc": "5347:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5347:72:10"
															},
															"nativeSrc": "5347:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5347:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5473:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5473:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5486:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5486:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5497:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5497:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5482:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5482:3:10"
																		},
																		"nativeSrc": "5482:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5482:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5429:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5429:43:10"
																},
																"nativeSrc": "5429:73:10",
																"nodeType": "YulFunctionCall",
																"src": "5429:73:10"
															},
															"nativeSrc": "5429:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "5429:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "5565:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5565:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5578:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5578:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5589:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5589:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5574:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:10"
																		},
																		"nativeSrc": "5574:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$1280_to_t_uint8_fromStack",
																	"nativeSrc": "5512:52:10",
																	"nodeType": "YulIdentifier",
																	"src": "5512:52:10"
																},
																"nativeSrc": "5512:82:10",
																"nodeType": "YulFunctionCall",
																"src": "5512:82:10"
															},
															"nativeSrc": "5512:82:10",
															"nodeType": "YulExpressionStatement",
															"src": "5512:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "5648:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5648:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5661:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5661:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5672:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5672:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5657:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5657:3:10"
																		},
																		"nativeSrc": "5657:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5657:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5604:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5604:43:10"
																},
																"nativeSrc": "5604:73:10",
																"nodeType": "YulFunctionCall",
																"src": "5604:73:10"
															},
															"nativeSrc": "5604:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "5604:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "5725:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5725:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5738:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5738:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5749:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5749:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5734:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5734:3:10"
																		},
																		"nativeSrc": "5734:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5734:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5687:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "5687:37:10"
																},
																"nativeSrc": "5687:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5687:67:10"
															},
															"nativeSrc": "5687:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5687:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_enum$_Status_$1280_t_address_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint8_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "4667:1094:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4900:9:10",
														"nodeType": "YulTypedName",
														"src": "4900:9:10",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "4912:6:10",
														"nodeType": "YulTypedName",
														"src": "4912:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4920:6:10",
														"nodeType": "YulTypedName",
														"src": "4920:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4928:6:10",
														"nodeType": "YulTypedName",
														"src": "4928:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4936:6:10",
														"nodeType": "YulTypedName",
														"src": "4936:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4944:6:10",
														"nodeType": "YulTypedName",
														"src": "4944:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4952:6:10",
														"nodeType": "YulTypedName",
														"src": "4952:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4960:6:10",
														"nodeType": "YulTypedName",
														"src": "4960:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4968:6:10",
														"nodeType": "YulTypedName",
														"src": "4968:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4979:4:10",
														"nodeType": "YulTypedName",
														"src": "4979:4:10",
														"type": ""
													}
												],
												"src": "4667:1094:10"
											},
											{
												"body": {
													"nativeSrc": "5810:79:10",
													"nodeType": "YulBlock",
													"src": "5810:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5867:16:10",
																"nodeType": "YulBlock",
																"src": "5867:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5876:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5876:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5879:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5879:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5869:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5869:6:10"
																			},
																			"nativeSrc": "5869:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5869:12:10"
																		},
																		"nativeSrc": "5869:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5869:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5833:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5833:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5858:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5858:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5840:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5840:17:10"
																				},
																				"nativeSrc": "5840:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5840:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5830:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5830:2:10"
																		},
																		"nativeSrc": "5830:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5823:6:10"
																},
																"nativeSrc": "5823:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5823:43:10"
															},
															"nativeSrc": "5820:63:10",
															"nodeType": "YulIf",
															"src": "5820:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5767:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5803:5:10",
														"nodeType": "YulTypedName",
														"src": "5803:5:10",
														"type": ""
													}
												],
												"src": "5767:122:10"
											},
											{
												"body": {
													"nativeSrc": "5947:87:10",
													"nodeType": "YulBlock",
													"src": "5947:87:10",
													"statements": [
														{
															"nativeSrc": "5957:29:10",
															"nodeType": "YulAssignment",
															"src": "5957:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5979:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5979:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5966:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5966:12:10"
																},
																"nativeSrc": "5966:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5966:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5957:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5957:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6022:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6022:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5995:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "5995:26:10"
																},
																"nativeSrc": "5995:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5995:33:10"
															},
															"nativeSrc": "5995:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5995:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "5895:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5925:6:10",
														"nodeType": "YulTypedName",
														"src": "5925:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5933:3:10",
														"nodeType": "YulTypedName",
														"src": "5933:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5941:5:10",
														"nodeType": "YulTypedName",
														"src": "5941:5:10",
														"type": ""
													}
												],
												"src": "5895:139:10"
											},
											{
												"body": {
													"nativeSrc": "6123:391:10",
													"nodeType": "YulBlock",
													"src": "6123:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6169:83:10",
																"nodeType": "YulBlock",
																"src": "6169:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6171:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6171:77:10"
																			},
																			"nativeSrc": "6171:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6171:79:10"
																		},
																		"nativeSrc": "6171:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6171:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6144:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6144:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6153:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6153:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6140:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:10"
																		},
																		"nativeSrc": "6140:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6140:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6165:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6136:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6136:3:10"
																},
																"nativeSrc": "6136:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6136:32:10"
															},
															"nativeSrc": "6133:119:10",
															"nodeType": "YulIf",
															"src": "6133:119:10"
														},
														{
															"nativeSrc": "6262:117:10",
															"nodeType": "YulBlock",
															"src": "6262:117:10",
															"statements": [
																{
																	"nativeSrc": "6277:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6277:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6291:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6291:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6281:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6281:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6306:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6306:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6341:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6341:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6352:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6352:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6337:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6337:3:10"
																				},
																				"nativeSrc": "6337:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6337:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6361:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6361:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6316:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6316:20:10"
																		},
																		"nativeSrc": "6316:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6316:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6306:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6306:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6389:118:10",
															"nodeType": "YulBlock",
															"src": "6389:118:10",
															"statements": [
																{
																	"nativeSrc": "6404:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6404:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6418:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6418:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6408:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6408:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6434:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6434:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6469:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6469:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6480:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6480:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6465:3:10"
																				},
																				"nativeSrc": "6465:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6465:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6489:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6489:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6444:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6444:20:10"
																		},
																		"nativeSrc": "6444:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6434:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6434:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "6040:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6085:9:10",
														"nodeType": "YulTypedName",
														"src": "6085:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6096:7:10",
														"nodeType": "YulTypedName",
														"src": "6096:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6108:6:10",
														"nodeType": "YulTypedName",
														"src": "6108:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6116:6:10",
														"nodeType": "YulTypedName",
														"src": "6116:6:10",
														"type": ""
													}
												],
												"src": "6040:474:10"
											},
											{
												"body": {
													"nativeSrc": "6618:124:10",
													"nodeType": "YulBlock",
													"src": "6618:124:10",
													"statements": [
														{
															"nativeSrc": "6628:26:10",
															"nodeType": "YulAssignment",
															"src": "6628:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6640:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6640:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6651:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6651:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6636:3:10"
																},
																"nativeSrc": "6636:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6636:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6628:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6628:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6708:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6708:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6721:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6721:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6732:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6732:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6717:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6717:3:10"
																		},
																		"nativeSrc": "6717:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6717:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6664:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6664:43:10"
																},
																"nativeSrc": "6664:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6664:71:10"
															},
															"nativeSrc": "6664:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6664:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6520:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6590:9:10",
														"nodeType": "YulTypedName",
														"src": "6590:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6602:6:10",
														"nodeType": "YulTypedName",
														"src": "6602:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6613:4:10",
														"nodeType": "YulTypedName",
														"src": "6613:4:10",
														"type": ""
													}
												],
												"src": "6520:222:10"
											},
											{
												"body": {
													"nativeSrc": "6848:519:10",
													"nodeType": "YulBlock",
													"src": "6848:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6894:83:10",
																"nodeType": "YulBlock",
																"src": "6894:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6896:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6896:77:10"
																			},
																			"nativeSrc": "6896:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6896:79:10"
																		},
																		"nativeSrc": "6896:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6896:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6869:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6869:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6878:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6878:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6865:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6865:3:10"
																		},
																		"nativeSrc": "6865:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6865:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6890:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6890:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6861:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6861:3:10"
																},
																"nativeSrc": "6861:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6861:32:10"
															},
															"nativeSrc": "6858:119:10",
															"nodeType": "YulIf",
															"src": "6858:119:10"
														},
														{
															"nativeSrc": "6987:117:10",
															"nodeType": "YulBlock",
															"src": "6987:117:10",
															"statements": [
																{
																	"nativeSrc": "7002:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7002:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7016:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7016:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7006:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7006:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7031:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7031:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7066:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7066:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7077:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7077:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7062:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7062:3:10"
																				},
																				"nativeSrc": "7062:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7062:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7086:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7086:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7041:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7041:20:10"
																		},
																		"nativeSrc": "7041:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7041:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7031:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7031:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7114:118:10",
															"nodeType": "YulBlock",
															"src": "7114:118:10",
															"statements": [
																{
																	"nativeSrc": "7129:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7129:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7143:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7143:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7133:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7133:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7159:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7159:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7194:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7194:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7205:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7205:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7190:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7190:3:10"
																				},
																				"nativeSrc": "7190:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7190:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7214:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7214:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7169:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7169:20:10"
																		},
																		"nativeSrc": "7169:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7169:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7159:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7159:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7242:118:10",
															"nodeType": "YulBlock",
															"src": "7242:118:10",
															"statements": [
																{
																	"nativeSrc": "7257:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7257:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7271:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7271:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7261:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7261:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7287:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7287:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7322:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7322:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7333:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7333:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7318:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7318:3:10"
																				},
																				"nativeSrc": "7318:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7318:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7342:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7342:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7297:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7297:20:10"
																		},
																		"nativeSrc": "7297:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7297:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7287:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7287:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6748:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6802:9:10",
														"nodeType": "YulTypedName",
														"src": "6802:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6813:7:10",
														"nodeType": "YulTypedName",
														"src": "6813:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6825:6:10",
														"nodeType": "YulTypedName",
														"src": "6825:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6833:6:10",
														"nodeType": "YulTypedName",
														"src": "6833:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6841:6:10",
														"nodeType": "YulTypedName",
														"src": "6841:6:10",
														"type": ""
													}
												],
												"src": "6748:619:10"
											},
											{
												"body": {
													"nativeSrc": "7418:32:10",
													"nodeType": "YulBlock",
													"src": "7418:32:10",
													"statements": [
														{
															"nativeSrc": "7428:16:10",
															"nodeType": "YulAssignment",
															"src": "7428:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "7439:5:10",
																"nodeType": "YulIdentifier",
																"src": "7439:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7428:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7428:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7373:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7400:5:10",
														"nodeType": "YulTypedName",
														"src": "7400:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7410:7:10",
														"nodeType": "YulTypedName",
														"src": "7410:7:10",
														"type": ""
													}
												],
												"src": "7373:77:10"
											},
											{
												"body": {
													"nativeSrc": "7499:79:10",
													"nodeType": "YulBlock",
													"src": "7499:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7556:16:10",
																"nodeType": "YulBlock",
																"src": "7556:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7565:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7565:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7568:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7568:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7558:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7558:6:10"
																			},
																			"nativeSrc": "7558:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:12:10"
																		},
																		"nativeSrc": "7558:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7522:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7522:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7547:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7547:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "7529:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "7529:17:10"
																				},
																				"nativeSrc": "7529:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7529:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7519:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7519:2:10"
																		},
																		"nativeSrc": "7519:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7519:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7512:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7512:6:10"
																},
																"nativeSrc": "7512:43:10",
																"nodeType": "YulFunctionCall",
																"src": "7512:43:10"
															},
															"nativeSrc": "7509:63:10",
															"nodeType": "YulIf",
															"src": "7509:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "7456:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7492:5:10",
														"nodeType": "YulTypedName",
														"src": "7492:5:10",
														"type": ""
													}
												],
												"src": "7456:122:10"
											},
											{
												"body": {
													"nativeSrc": "7636:87:10",
													"nodeType": "YulBlock",
													"src": "7636:87:10",
													"statements": [
														{
															"nativeSrc": "7646:29:10",
															"nodeType": "YulAssignment",
															"src": "7646:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7668:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7668:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7655:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "7655:12:10"
																},
																"nativeSrc": "7655:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7655:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7646:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7646:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7711:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7711:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "7684:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "7684:26:10"
																},
																"nativeSrc": "7684:33:10",
																"nodeType": "YulFunctionCall",
																"src": "7684:33:10"
															},
															"nativeSrc": "7684:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "7684:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "7584:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7614:6:10",
														"nodeType": "YulTypedName",
														"src": "7614:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7622:3:10",
														"nodeType": "YulTypedName",
														"src": "7622:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7630:5:10",
														"nodeType": "YulTypedName",
														"src": "7630:5:10",
														"type": ""
													}
												],
												"src": "7584:139:10"
											},
											{
												"body": {
													"nativeSrc": "7795:263:10",
													"nodeType": "YulBlock",
													"src": "7795:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7841:83:10",
																"nodeType": "YulBlock",
																"src": "7841:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7843:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7843:77:10"
																			},
																			"nativeSrc": "7843:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7843:79:10"
																		},
																		"nativeSrc": "7843:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7843:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7816:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7816:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7825:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7825:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7812:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7812:3:10"
																		},
																		"nativeSrc": "7812:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7812:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7837:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7808:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:10"
																},
																"nativeSrc": "7808:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7808:32:10"
															},
															"nativeSrc": "7805:119:10",
															"nodeType": "YulIf",
															"src": "7805:119:10"
														},
														{
															"nativeSrc": "7934:117:10",
															"nodeType": "YulBlock",
															"src": "7934:117:10",
															"statements": [
																{
																	"nativeSrc": "7949:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7949:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7963:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7953:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7953:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7978:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7978:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8013:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8013:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8024:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8024:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8009:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8009:3:10"
																				},
																				"nativeSrc": "8009:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8009:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8033:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8033:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "7988:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7988:20:10"
																		},
																		"nativeSrc": "7988:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7988:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7978:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7978:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "7729:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7765:9:10",
														"nodeType": "YulTypedName",
														"src": "7765:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7776:7:10",
														"nodeType": "YulTypedName",
														"src": "7776:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7788:6:10",
														"nodeType": "YulTypedName",
														"src": "7788:6:10",
														"type": ""
													}
												],
												"src": "7729:329:10"
											},
											{
												"body": {
													"nativeSrc": "8129:53:10",
													"nodeType": "YulBlock",
													"src": "8129:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8146:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8146:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8169:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8169:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8151:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "8151:17:10"
																		},
																		"nativeSrc": "8151:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8151:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:10"
																},
																"nativeSrc": "8139:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8139:37:10"
															},
															"nativeSrc": "8139:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8139:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8064:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8117:5:10",
														"nodeType": "YulTypedName",
														"src": "8117:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8124:3:10",
														"nodeType": "YulTypedName",
														"src": "8124:3:10",
														"type": ""
													}
												],
												"src": "8064:118:10"
											},
											{
												"body": {
													"nativeSrc": "8286:124:10",
													"nodeType": "YulBlock",
													"src": "8286:124:10",
													"statements": [
														{
															"nativeSrc": "8296:26:10",
															"nodeType": "YulAssignment",
															"src": "8296:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8308:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8308:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8319:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8319:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8304:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8304:3:10"
																},
																"nativeSrc": "8304:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8304:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8296:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8296:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8376:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8389:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8389:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8400:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8400:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8385:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8385:3:10"
																		},
																		"nativeSrc": "8385:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8385:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8332:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8332:43:10"
																},
																"nativeSrc": "8332:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8332:71:10"
															},
															"nativeSrc": "8332:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8332:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8188:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8258:9:10",
														"nodeType": "YulTypedName",
														"src": "8258:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8270:6:10",
														"nodeType": "YulTypedName",
														"src": "8270:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8281:4:10",
														"nodeType": "YulTypedName",
														"src": "8281:4:10",
														"type": ""
													}
												],
												"src": "8188:222:10"
											},
											{
												"body": {
													"nativeSrc": "8499:391:10",
													"nodeType": "YulBlock",
													"src": "8499:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8545:83:10",
																"nodeType": "YulBlock",
																"src": "8545:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8547:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8547:77:10"
																			},
																			"nativeSrc": "8547:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8547:79:10"
																		},
																		"nativeSrc": "8547:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8547:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8520:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8520:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8529:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8529:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8516:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8516:3:10"
																		},
																		"nativeSrc": "8516:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8516:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8541:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8541:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8512:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8512:3:10"
																},
																"nativeSrc": "8512:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8512:32:10"
															},
															"nativeSrc": "8509:119:10",
															"nodeType": "YulIf",
															"src": "8509:119:10"
														},
														{
															"nativeSrc": "8638:117:10",
															"nodeType": "YulBlock",
															"src": "8638:117:10",
															"statements": [
																{
																	"nativeSrc": "8653:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8653:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8667:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8667:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8657:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8657:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8682:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8682:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8717:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8717:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8728:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8728:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8713:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8713:3:10"
																				},
																				"nativeSrc": "8713:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8713:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8737:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8737:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "8692:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8692:20:10"
																		},
																		"nativeSrc": "8692:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8692:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8682:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8682:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8765:118:10",
															"nodeType": "YulBlock",
															"src": "8765:118:10",
															"statements": [
																{
																	"nativeSrc": "8780:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8780:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8794:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8794:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8784:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8784:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8810:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8810:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8845:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8845:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8856:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8856:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8841:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8841:3:10"
																				},
																				"nativeSrc": "8841:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8841:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8865:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8865:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8820:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8820:20:10"
																		},
																		"nativeSrc": "8820:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8820:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8810:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8810:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "8416:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8461:9:10",
														"nodeType": "YulTypedName",
														"src": "8461:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8472:7:10",
														"nodeType": "YulTypedName",
														"src": "8472:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8484:6:10",
														"nodeType": "YulTypedName",
														"src": "8484:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8492:6:10",
														"nodeType": "YulTypedName",
														"src": "8492:6:10",
														"type": ""
													}
												],
												"src": "8416:474:10"
											},
											{
												"body": {
													"nativeSrc": "8939:43:10",
													"nodeType": "YulBlock",
													"src": "8939:43:10",
													"statements": [
														{
															"nativeSrc": "8949:27:10",
															"nodeType": "YulAssignment",
															"src": "8949:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8964:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8964:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8971:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8971:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8960:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:10"
																},
																"nativeSrc": "8960:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8960:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8949:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8949:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8896:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8921:5:10",
														"nodeType": "YulTypedName",
														"src": "8921:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8931:7:10",
														"nodeType": "YulTypedName",
														"src": "8931:7:10",
														"type": ""
													}
												],
												"src": "8896:86:10"
											},
											{
												"body": {
													"nativeSrc": "9049:51:10",
													"nodeType": "YulBlock",
													"src": "9049:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9066:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9066:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9087:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9087:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "9071:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "9071:15:10"
																		},
																		"nativeSrc": "9071:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9071:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9059:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9059:6:10"
																},
																"nativeSrc": "9059:35:10",
																"nodeType": "YulFunctionCall",
																"src": "9059:35:10"
															},
															"nativeSrc": "9059:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "9059:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "8988:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9037:5:10",
														"nodeType": "YulTypedName",
														"src": "9037:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9044:3:10",
														"nodeType": "YulTypedName",
														"src": "9044:3:10",
														"type": ""
													}
												],
												"src": "8988:112:10"
											},
											{
												"body": {
													"nativeSrc": "9200:120:10",
													"nodeType": "YulBlock",
													"src": "9200:120:10",
													"statements": [
														{
															"nativeSrc": "9210:26:10",
															"nodeType": "YulAssignment",
															"src": "9210:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9222:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9222:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9233:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9233:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9218:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9218:3:10"
																},
																"nativeSrc": "9218:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9218:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9210:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9210:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9286:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9286:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9299:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9299:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9310:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9310:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9295:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9295:3:10"
																		},
																		"nativeSrc": "9295:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9295:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "9246:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "9246:39:10"
																},
																"nativeSrc": "9246:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9246:67:10"
															},
															"nativeSrc": "9246:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "9246:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "9106:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9172:9:10",
														"nodeType": "YulTypedName",
														"src": "9172:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9184:6:10",
														"nodeType": "YulTypedName",
														"src": "9184:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9195:4:10",
														"nodeType": "YulTypedName",
														"src": "9195:4:10",
														"type": ""
													}
												],
												"src": "9106:214:10"
											},
											{
												"body": {
													"nativeSrc": "9415:28:10",
													"nodeType": "YulBlock",
													"src": "9415:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9432:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9435:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9435:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9425:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:10"
																},
																"nativeSrc": "9425:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9425:12:10"
															},
															"nativeSrc": "9425:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "9425:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "9326:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9326:117:10"
											},
											{
												"body": {
													"nativeSrc": "9538:28:10",
													"nodeType": "YulBlock",
													"src": "9538:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9555:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9558:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9558:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9548:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9548:6:10"
																},
																"nativeSrc": "9548:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9548:12:10"
															},
															"nativeSrc": "9548:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "9548:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "9449:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9449:117:10"
											},
											{
												"body": {
													"nativeSrc": "9600:152:10",
													"nodeType": "YulBlock",
													"src": "9600:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9617:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9617:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9620:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9620:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:10"
																},
																"nativeSrc": "9610:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9610:88:10"
															},
															"nativeSrc": "9610:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9610:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9714:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9714:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9717:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9717:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9707:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9707:6:10"
																},
																"nativeSrc": "9707:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9707:15:10"
															},
															"nativeSrc": "9707:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9707:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9738:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9738:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9741:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9741:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9731:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9731:6:10"
																},
																"nativeSrc": "9731:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9731:15:10"
															},
															"nativeSrc": "9731:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9731:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9572:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9572:180:10"
											},
											{
												"body": {
													"nativeSrc": "9801:238:10",
													"nodeType": "YulBlock",
													"src": "9801:238:10",
													"statements": [
														{
															"nativeSrc": "9811:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9811:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9833:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9833:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "9863:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9863:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9841:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "9841:21:10"
																		},
																		"nativeSrc": "9841:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9841:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9829:3:10"
																},
																"nativeSrc": "9829:40:10",
																"nodeType": "YulFunctionCall",
																"src": "9829:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "9815:10:10",
																	"nodeType": "YulTypedName",
																	"src": "9815:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9980:22:10",
																"nodeType": "YulBlock",
																"src": "9980:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9982:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9982:16:10"
																			},
																			"nativeSrc": "9982:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9982:18:10"
																		},
																		"nativeSrc": "9982:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9982:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9923:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "9923:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9935:18:10",
																				"nodeType": "YulLiteral",
																				"src": "9935:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9920:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9920:2:10"
																		},
																		"nativeSrc": "9920:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9920:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9959:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "9959:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "9971:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9971:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9956:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9956:2:10"
																		},
																		"nativeSrc": "9956:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9956:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9917:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9917:2:10"
																},
																"nativeSrc": "9917:62:10",
																"nodeType": "YulFunctionCall",
																"src": "9917:62:10"
															},
															"nativeSrc": "9914:88:10",
															"nodeType": "YulIf",
															"src": "9914:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10018:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10018:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "10022:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "10022:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10011:6:10"
																},
																"nativeSrc": "10011:22:10",
																"nodeType": "YulFunctionCall",
																"src": "10011:22:10"
															},
															"nativeSrc": "10011:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "10011:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "9758:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9787:6:10",
														"nodeType": "YulTypedName",
														"src": "9787:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "9795:4:10",
														"nodeType": "YulTypedName",
														"src": "9795:4:10",
														"type": ""
													}
												],
												"src": "9758:281:10"
											},
											{
												"body": {
													"nativeSrc": "10086:88:10",
													"nodeType": "YulBlock",
													"src": "10086:88:10",
													"statements": [
														{
															"nativeSrc": "10096:30:10",
															"nodeType": "YulAssignment",
															"src": "10096:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "10106:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "10106:18:10"
																},
																"nativeSrc": "10106:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10106:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "10096:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10096:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10155:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10155:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "10163:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10163:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "10135:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "10135:19:10"
																},
																"nativeSrc": "10135:33:10",
																"nodeType": "YulFunctionCall",
																"src": "10135:33:10"
															},
															"nativeSrc": "10135:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "10135:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "10045:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "10070:4:10",
														"nodeType": "YulTypedName",
														"src": "10070:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "10079:6:10",
														"nodeType": "YulTypedName",
														"src": "10079:6:10",
														"type": ""
													}
												],
												"src": "10045:129:10"
											},
											{
												"body": {
													"nativeSrc": "10247:241:10",
													"nodeType": "YulBlock",
													"src": "10247:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10352:22:10",
																"nodeType": "YulBlock",
																"src": "10352:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10354:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10354:16:10"
																			},
																			"nativeSrc": "10354:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10354:18:10"
																		},
																		"nativeSrc": "10354:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10354:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10324:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10324:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10332:18:10",
																		"nodeType": "YulLiteral",
																		"src": "10332:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10321:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10321:2:10"
																},
																"nativeSrc": "10321:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10321:30:10"
															},
															"nativeSrc": "10318:56:10",
															"nodeType": "YulIf",
															"src": "10318:56:10"
														},
														{
															"nativeSrc": "10384:37:10",
															"nodeType": "YulAssignment",
															"src": "10384:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10414:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10414:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10392:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "10392:21:10"
																},
																"nativeSrc": "10392:29:10",
																"nodeType": "YulFunctionCall",
																"src": "10392:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10384:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10384:4:10"
																}
															]
														},
														{
															"nativeSrc": "10458:23:10",
															"nodeType": "YulAssignment",
															"src": "10458:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10470:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10470:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10476:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10476:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10466:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:10"
																},
																"nativeSrc": "10466:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10466:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10458:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "10180:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10231:6:10",
														"nodeType": "YulTypedName",
														"src": "10231:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10242:4:10",
														"nodeType": "YulTypedName",
														"src": "10242:4:10",
														"type": ""
													}
												],
												"src": "10180:308:10"
											},
											{
												"body": {
													"nativeSrc": "10558:84:10",
													"nodeType": "YulBlock",
													"src": "10558:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10582:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10582:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10587:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10587:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10592:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10592:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10569:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "10569:12:10"
																},
																"nativeSrc": "10569:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10569:30:10"
															},
															"nativeSrc": "10569:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10569:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10619:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10619:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10624:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10624:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10615:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10615:3:10"
																		},
																		"nativeSrc": "10615:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10615:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10608:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10608:6:10"
																},
																"nativeSrc": "10608:27:10",
																"nodeType": "YulFunctionCall",
																"src": "10608:27:10"
															},
															"nativeSrc": "10608:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "10608:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "10494:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10540:3:10",
														"nodeType": "YulTypedName",
														"src": "10540:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10545:3:10",
														"nodeType": "YulTypedName",
														"src": "10545:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10550:6:10",
														"nodeType": "YulTypedName",
														"src": "10550:6:10",
														"type": ""
													}
												],
												"src": "10494:148:10"
											},
											{
												"body": {
													"nativeSrc": "10732:341:10",
													"nodeType": "YulBlock",
													"src": "10732:341:10",
													"statements": [
														{
															"nativeSrc": "10742:75:10",
															"nodeType": "YulAssignment",
															"src": "10742:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10809:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10809:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10767:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "10767:41:10"
																		},
																		"nativeSrc": "10767:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10767:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10751:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "10751:15:10"
																},
																"nativeSrc": "10751:66:10",
																"nodeType": "YulFunctionCall",
																"src": "10751:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10742:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10742:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10833:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10833:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10840:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10840:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10826:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10826:6:10"
																},
																"nativeSrc": "10826:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10826:21:10"
															},
															"nativeSrc": "10826:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "10826:21:10"
														},
														{
															"nativeSrc": "10856:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10856:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10871:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10871:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10878:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10878:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10867:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10867:3:10"
																},
																"nativeSrc": "10867:16:10",
																"nodeType": "YulFunctionCall",
																"src": "10867:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10860:3:10",
																	"nodeType": "YulTypedName",
																	"src": "10860:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10921:83:10",
																"nodeType": "YulBlock",
																"src": "10921:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10923:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10923:77:10"
																			},
																			"nativeSrc": "10923:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10923:79:10"
																		},
																		"nativeSrc": "10923:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10923:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10902:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10902:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10907:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10907:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10898:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10898:3:10"
																		},
																		"nativeSrc": "10898:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10898:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10916:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10916:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10895:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10895:2:10"
																},
																"nativeSrc": "10895:25:10",
																"nodeType": "YulFunctionCall",
																"src": "10895:25:10"
															},
															"nativeSrc": "10892:112:10",
															"nodeType": "YulIf",
															"src": "10892:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11050:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11050:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11055:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11055:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11060:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11060:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11013:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "11013:36:10"
																},
																"nativeSrc": "11013:54:10",
																"nodeType": "YulFunctionCall",
																"src": "11013:54:10"
															},
															"nativeSrc": "11013:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "11013:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10648:425:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10705:3:10",
														"nodeType": "YulTypedName",
														"src": "10705:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10710:6:10",
														"nodeType": "YulTypedName",
														"src": "10710:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10718:3:10",
														"nodeType": "YulTypedName",
														"src": "10718:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10726:5:10",
														"nodeType": "YulTypedName",
														"src": "10726:5:10",
														"type": ""
													}
												],
												"src": "10648:425:10"
											},
											{
												"body": {
													"nativeSrc": "11155:278:10",
													"nodeType": "YulBlock",
													"src": "11155:278:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11204:83:10",
																"nodeType": "YulBlock",
																"src": "11204:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11206:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11206:77:10"
																			},
																			"nativeSrc": "11206:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11206:79:10"
																		},
																		"nativeSrc": "11206:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11206:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11183:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11183:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11191:4:10",
																						"nodeType": "YulLiteral",
																						"src": "11191:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11179:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11179:3:10"
																				},
																				"nativeSrc": "11179:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11179:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11198:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11198:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11175:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:10"
																		},
																		"nativeSrc": "11175:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11175:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11168:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:10"
																},
																"nativeSrc": "11168:35:10",
																"nodeType": "YulFunctionCall",
																"src": "11168:35:10"
															},
															"nativeSrc": "11165:122:10",
															"nodeType": "YulIf",
															"src": "11165:122:10"
														},
														{
															"nativeSrc": "11296:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11296:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11323:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11323:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11310:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "11310:12:10"
																},
																"nativeSrc": "11310:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11310:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11300:6:10",
																	"nodeType": "YulTypedName",
																	"src": "11300:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11339:88:10",
															"nodeType": "YulAssignment",
															"src": "11339:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11400:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11400:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11408:4:10",
																				"nodeType": "YulLiteral",
																				"src": "11408:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11396:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11396:3:10"
																		},
																		"nativeSrc": "11396:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11396:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11415:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11415:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11423:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11423:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11348:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "11348:47:10"
																},
																"nativeSrc": "11348:79:10",
																"nodeType": "YulFunctionCall",
																"src": "11348:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11339:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11339:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "11093:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11133:6:10",
														"nodeType": "YulTypedName",
														"src": "11133:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11141:3:10",
														"nodeType": "YulTypedName",
														"src": "11141:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11149:5:10",
														"nodeType": "YulTypedName",
														"src": "11149:5:10",
														"type": ""
													}
												],
												"src": "11093:340:10"
											},
											{
												"body": {
													"nativeSrc": "11479:76:10",
													"nodeType": "YulBlock",
													"src": "11479:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11533:16:10",
																"nodeType": "YulBlock",
																"src": "11533:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11542:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11542:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11545:1:10",
																					"nodeType": "YulLiteral",
																					"src": "11545:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11535:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11535:6:10"
																			},
																			"nativeSrc": "11535:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11535:12:10"
																		},
																		"nativeSrc": "11535:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11535:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11502:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11502:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11524:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "11524:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11509:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "11509:14:10"
																				},
																				"nativeSrc": "11509:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11509:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11499:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11499:2:10"
																		},
																		"nativeSrc": "11499:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11499:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11492:6:10"
																},
																"nativeSrc": "11492:40:10",
																"nodeType": "YulFunctionCall",
																"src": "11492:40:10"
															},
															"nativeSrc": "11489:60:10",
															"nodeType": "YulIf",
															"src": "11489:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11439:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11472:5:10",
														"nodeType": "YulTypedName",
														"src": "11472:5:10",
														"type": ""
													}
												],
												"src": "11439:116:10"
											},
											{
												"body": {
													"nativeSrc": "11610:84:10",
													"nodeType": "YulBlock",
													"src": "11610:84:10",
													"statements": [
														{
															"nativeSrc": "11620:29:10",
															"nodeType": "YulAssignment",
															"src": "11620:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11642:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11642:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11629:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "11629:12:10"
																},
																"nativeSrc": "11629:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11629:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11620:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11620:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11682:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11682:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11658:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "11658:23:10"
																},
																"nativeSrc": "11658:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11658:30:10"
															},
															"nativeSrc": "11658:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "11658:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "11561:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11588:6:10",
														"nodeType": "YulTypedName",
														"src": "11588:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11596:3:10",
														"nodeType": "YulTypedName",
														"src": "11596:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11604:5:10",
														"nodeType": "YulTypedName",
														"src": "11604:5:10",
														"type": ""
													}
												],
												"src": "11561:133:10"
											},
											{
												"body": {
													"nativeSrc": "11824:815:10",
													"nodeType": "YulBlock",
													"src": "11824:815:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11871:83:10",
																"nodeType": "YulBlock",
																"src": "11871:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11873:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11873:77:10"
																			},
																			"nativeSrc": "11873:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11873:79:10"
																		},
																		"nativeSrc": "11873:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11873:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11845:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11845:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11854:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11854:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11841:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:10"
																		},
																		"nativeSrc": "11841:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11841:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11866:3:10",
																		"nodeType": "YulLiteral",
																		"src": "11866:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11837:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11837:3:10"
																},
																"nativeSrc": "11837:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11837:33:10"
															},
															"nativeSrc": "11834:120:10",
															"nodeType": "YulIf",
															"src": "11834:120:10"
														},
														{
															"nativeSrc": "11964:287:10",
															"nodeType": "YulBlock",
															"src": "11964:287:10",
															"statements": [
																{
																	"nativeSrc": "11979:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11979:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12010:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12010:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12021:1:10",
																						"nodeType": "YulLiteral",
																						"src": "12021:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12006:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12006:3:10"
																				},
																				"nativeSrc": "12006:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12006:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11993:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "11993:12:10"
																		},
																		"nativeSrc": "11993:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11993:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11983:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11983:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12071:83:10",
																		"nodeType": "YulBlock",
																		"src": "12071:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12073:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "12073:77:10"
																					},
																					"nativeSrc": "12073:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "12073:79:10"
																				},
																				"nativeSrc": "12073:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "12073:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12043:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12043:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "12051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12040:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "12040:2:10"
																		},
																		"nativeSrc": "12040:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12040:30:10"
																	},
																	"nativeSrc": "12037:117:10",
																	"nodeType": "YulIf",
																	"src": "12037:117:10"
																},
																{
																	"nativeSrc": "12168:73:10",
																	"nodeType": "YulAssignment",
																	"src": "12168:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12213:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12213:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12224:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12224:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12209:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12209:3:10"
																				},
																				"nativeSrc": "12209:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12209:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12233:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12233:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "12178:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "12178:30:10"
																		},
																		"nativeSrc": "12178:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12178:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12168:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12168:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12261:118:10",
															"nodeType": "YulBlock",
															"src": "12261:118:10",
															"statements": [
																{
																	"nativeSrc": "12276:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12276:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12290:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12290:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12280:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12280:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12306:63:10",
																	"nodeType": "YulAssignment",
																	"src": "12306:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12341:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12341:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12352:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12352:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12337:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12337:3:10"
																				},
																				"nativeSrc": "12337:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12337:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12361:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12361:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12316:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "12316:20:10"
																		},
																		"nativeSrc": "12316:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12316:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12306:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12306:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12389:118:10",
															"nodeType": "YulBlock",
															"src": "12389:118:10",
															"statements": [
																{
																	"nativeSrc": "12404:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12404:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12418:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12418:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12408:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12408:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12434:63:10",
																	"nodeType": "YulAssignment",
																	"src": "12434:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12469:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12469:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12480:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12480:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12465:3:10"
																				},
																				"nativeSrc": "12465:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12465:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12489:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12489:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12444:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "12444:20:10"
																		},
																		"nativeSrc": "12444:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12444:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12434:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12434:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12517:115:10",
															"nodeType": "YulBlock",
															"src": "12517:115:10",
															"statements": [
																{
																	"nativeSrc": "12532:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12532:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12546:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12546:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12536:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12536:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12562:60:10",
																	"nodeType": "YulAssignment",
																	"src": "12562:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12594:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12594:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12605:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12605:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12590:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12590:3:10"
																				},
																				"nativeSrc": "12590:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12590:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12614:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12614:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "12572:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "12572:17:10"
																		},
																		"nativeSrc": "12572:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12572:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12562:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12562:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_bool",
												"nativeSrc": "11700:939:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11770:9:10",
														"nodeType": "YulTypedName",
														"src": "11770:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11781:7:10",
														"nodeType": "YulTypedName",
														"src": "11781:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11793:6:10",
														"nodeType": "YulTypedName",
														"src": "11793:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11801:6:10",
														"nodeType": "YulTypedName",
														"src": "11801:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11809:6:10",
														"nodeType": "YulTypedName",
														"src": "11809:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11817:6:10",
														"nodeType": "YulTypedName",
														"src": "11817:6:10",
														"type": ""
													}
												],
												"src": "11700:939:10"
											},
											{
												"body": {
													"nativeSrc": "12711:263:10",
													"nodeType": "YulBlock",
													"src": "12711:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "12757:83:10",
																"nodeType": "YulBlock",
																"src": "12757:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12759:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "12759:77:10"
																			},
																			"nativeSrc": "12759:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12759:79:10"
																		},
																		"nativeSrc": "12759:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12759:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12732:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12732:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12741:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12728:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12728:3:10"
																		},
																		"nativeSrc": "12728:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12728:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12753:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12753:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12724:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12724:3:10"
																},
																"nativeSrc": "12724:32:10",
																"nodeType": "YulFunctionCall",
																"src": "12724:32:10"
															},
															"nativeSrc": "12721:119:10",
															"nodeType": "YulIf",
															"src": "12721:119:10"
														},
														{
															"nativeSrc": "12850:117:10",
															"nodeType": "YulBlock",
															"src": "12850:117:10",
															"statements": [
																{
																	"nativeSrc": "12865:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12865:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12879:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12879:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12869:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12869:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12894:63:10",
																	"nodeType": "YulAssignment",
																	"src": "12894:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12929:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12929:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12940:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12940:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12925:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12925:3:10"
																				},
																				"nativeSrc": "12925:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12925:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12949:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12949:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12904:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "12904:20:10"
																		},
																		"nativeSrc": "12904:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12904:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12894:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12894:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "12645:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12681:9:10",
														"nodeType": "YulTypedName",
														"src": "12681:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12692:7:10",
														"nodeType": "YulTypedName",
														"src": "12692:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12704:6:10",
														"nodeType": "YulTypedName",
														"src": "12704:6:10",
														"type": ""
													}
												],
												"src": "12645:329:10"
											},
											{
												"body": {
													"nativeSrc": "13063:391:10",
													"nodeType": "YulBlock",
													"src": "13063:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13109:83:10",
																"nodeType": "YulBlock",
																"src": "13109:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13111:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "13111:77:10"
																			},
																			"nativeSrc": "13111:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13111:79:10"
																		},
																		"nativeSrc": "13111:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13111:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13084:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13084:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13093:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13093:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13080:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13080:3:10"
																		},
																		"nativeSrc": "13080:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13080:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13105:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13105:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13076:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13076:3:10"
																},
																"nativeSrc": "13076:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13076:32:10"
															},
															"nativeSrc": "13073:119:10",
															"nodeType": "YulIf",
															"src": "13073:119:10"
														},
														{
															"nativeSrc": "13202:117:10",
															"nodeType": "YulBlock",
															"src": "13202:117:10",
															"statements": [
																{
																	"nativeSrc": "13217:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13217:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13231:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13231:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13221:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13221:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13246:63:10",
																	"nodeType": "YulAssignment",
																	"src": "13246:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13281:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13281:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13292:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13292:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13277:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13277:3:10"
																				},
																				"nativeSrc": "13277:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13277:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13301:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13301:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13256:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "13256:20:10"
																		},
																		"nativeSrc": "13256:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13256:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13246:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13246:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13329:118:10",
															"nodeType": "YulBlock",
															"src": "13329:118:10",
															"statements": [
																{
																	"nativeSrc": "13344:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13344:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13358:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13348:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13348:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13374:63:10",
																	"nodeType": "YulAssignment",
																	"src": "13374:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13409:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13409:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13420:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13420:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13405:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13405:3:10"
																				},
																				"nativeSrc": "13405:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13405:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13429:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13429:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "13384:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "13384:20:10"
																		},
																		"nativeSrc": "13384:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13384:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13374:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13374:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32",
												"nativeSrc": "12980:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13025:9:10",
														"nodeType": "YulTypedName",
														"src": "13025:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13036:7:10",
														"nodeType": "YulTypedName",
														"src": "13036:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13048:6:10",
														"nodeType": "YulTypedName",
														"src": "13048:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13056:6:10",
														"nodeType": "YulTypedName",
														"src": "13056:6:10",
														"type": ""
													}
												],
												"src": "12980:474:10"
											},
											{
												"body": {
													"nativeSrc": "13543:391:10",
													"nodeType": "YulBlock",
													"src": "13543:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13589:83:10",
																"nodeType": "YulBlock",
																"src": "13589:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13591:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "13591:77:10"
																			},
																			"nativeSrc": "13591:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13591:79:10"
																		},
																		"nativeSrc": "13591:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13591:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13564:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13564:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13573:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13573:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13560:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13560:3:10"
																		},
																		"nativeSrc": "13560:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13560:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13585:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13556:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13556:3:10"
																},
																"nativeSrc": "13556:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13556:32:10"
															},
															"nativeSrc": "13553:119:10",
															"nodeType": "YulIf",
															"src": "13553:119:10"
														},
														{
															"nativeSrc": "13682:117:10",
															"nodeType": "YulBlock",
															"src": "13682:117:10",
															"statements": [
																{
																	"nativeSrc": "13697:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13697:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13711:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13711:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13701:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13701:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13726:63:10",
																	"nodeType": "YulAssignment",
																	"src": "13726:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13761:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13761:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13772:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13772:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13757:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13757:3:10"
																				},
																				"nativeSrc": "13757:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13757:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13781:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13781:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13736:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "13736:20:10"
																		},
																		"nativeSrc": "13736:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13736:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13726:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13726:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13809:118:10",
															"nodeType": "YulBlock",
															"src": "13809:118:10",
															"statements": [
																{
																	"nativeSrc": "13824:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13824:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13838:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13838:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13828:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13828:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13854:63:10",
																	"nodeType": "YulAssignment",
																	"src": "13854:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13889:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13889:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13900:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13900:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13885:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13885:3:10"
																				},
																				"nativeSrc": "13885:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13885:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13909:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13909:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13864:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "13864:20:10"
																		},
																		"nativeSrc": "13864:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13864:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13854:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13854:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13460:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13505:9:10",
														"nodeType": "YulTypedName",
														"src": "13505:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13516:7:10",
														"nodeType": "YulTypedName",
														"src": "13516:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13528:6:10",
														"nodeType": "YulTypedName",
														"src": "13528:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13536:6:10",
														"nodeType": "YulTypedName",
														"src": "13536:6:10",
														"type": ""
													}
												],
												"src": "13460:474:10"
											},
											{
												"body": {
													"nativeSrc": "13968:152:10",
													"nodeType": "YulBlock",
													"src": "13968:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13985:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13985:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13988:77:10",
																		"nodeType": "YulLiteral",
																		"src": "13988:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13978:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13978:6:10"
																},
																"nativeSrc": "13978:88:10",
																"nodeType": "YulFunctionCall",
																"src": "13978:88:10"
															},
															"nativeSrc": "13978:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "13978:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14082:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14082:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14085:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14085:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14075:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14075:6:10"
																},
																"nativeSrc": "14075:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14075:15:10"
															},
															"nativeSrc": "14075:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14075:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14106:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14106:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14109:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14109:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14099:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14099:6:10"
																},
																"nativeSrc": "14099:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14099:15:10"
															},
															"nativeSrc": "14099:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14099:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13940:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "13940:180:10"
											},
											{
												"body": {
													"nativeSrc": "14177:269:10",
													"nodeType": "YulBlock",
													"src": "14177:269:10",
													"statements": [
														{
															"nativeSrc": "14187:22:10",
															"nodeType": "YulAssignment",
															"src": "14187:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14201:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14201:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14207:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14207:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14197:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14197:3:10"
																},
																"nativeSrc": "14197:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14197:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14187:6:10"
																}
															]
														},
														{
															"nativeSrc": "14218:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14218:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14248:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14248:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14254:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14244:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14244:3:10"
																},
																"nativeSrc": "14244:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14244:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14222:18:10",
																	"nodeType": "YulTypedName",
																	"src": "14222:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14295:51:10",
																"nodeType": "YulBlock",
																"src": "14295:51:10",
																"statements": [
																	{
																		"nativeSrc": "14309:27:10",
																		"nodeType": "YulAssignment",
																		"src": "14309:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14323:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14323:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14331:4:10",
																					"nodeType": "YulLiteral",
																					"src": "14331:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14319:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "14319:3:10"
																			},
																			"nativeSrc": "14319:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14319:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14309:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14309:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14275:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "14275:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14268:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14268:6:10"
																},
																"nativeSrc": "14268:26:10",
																"nodeType": "YulFunctionCall",
																"src": "14268:26:10"
															},
															"nativeSrc": "14265:81:10",
															"nodeType": "YulIf",
															"src": "14265:81:10"
														},
														{
															"body": {
																"nativeSrc": "14398:42:10",
																"nodeType": "YulBlock",
																"src": "14398:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14412:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14412:16:10"
																			},
																			"nativeSrc": "14412:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14412:18:10"
																		},
																		"nativeSrc": "14412:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14412:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14362:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "14362:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14385:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14385:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14393:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14393:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14382:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14382:2:10"
																		},
																		"nativeSrc": "14382:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14382:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14359:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14359:2:10"
																},
																"nativeSrc": "14359:38:10",
																"nodeType": "YulFunctionCall",
																"src": "14359:38:10"
															},
															"nativeSrc": "14356:84:10",
															"nodeType": "YulIf",
															"src": "14356:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14126:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14161:4:10",
														"nodeType": "YulTypedName",
														"src": "14161:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14170:6:10",
														"nodeType": "YulTypedName",
														"src": "14170:6:10",
														"type": ""
													}
												],
												"src": "14126:320:10"
											},
											{
												"body": {
													"nativeSrc": "14558:57:10",
													"nodeType": "YulBlock",
													"src": "14558:57:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14580:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14580:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14588:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14588:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14576:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14576:3:10"
																		},
																		"nativeSrc": "14576:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14576:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420696e707574",
																		"kind": "string",
																		"nativeSrc": "14592:15:10",
																		"nodeType": "YulLiteral",
																		"src": "14592:15:10",
																		"type": "",
																		"value": "Invalid input"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14569:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14569:6:10"
																},
																"nativeSrc": "14569:39:10",
																"nodeType": "YulFunctionCall",
																"src": "14569:39:10"
															},
															"nativeSrc": "14569:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "14569:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
												"nativeSrc": "14452:163:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14550:6:10",
														"nodeType": "YulTypedName",
														"src": "14550:6:10",
														"type": ""
													}
												],
												"src": "14452:163:10"
											},
											{
												"body": {
													"nativeSrc": "14767:220:10",
													"nodeType": "YulBlock",
													"src": "14767:220:10",
													"statements": [
														{
															"nativeSrc": "14777:74:10",
															"nodeType": "YulAssignment",
															"src": "14777:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14843:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14843:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14848:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14848:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14784:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14784:58:10"
																},
																"nativeSrc": "14784:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14784:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14777:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14949:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14949:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																	"nativeSrc": "14860:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14860:88:10"
																},
																"nativeSrc": "14860:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14860:93:10"
															},
															"nativeSrc": "14860:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14860:93:10"
														},
														{
															"nativeSrc": "14962:19:10",
															"nodeType": "YulAssignment",
															"src": "14962:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14973:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14973:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14978:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14978:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14969:3:10"
																},
																"nativeSrc": "14969:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14969:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14962:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14962:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14621:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14755:3:10",
														"nodeType": "YulTypedName",
														"src": "14755:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14763:3:10",
														"nodeType": "YulTypedName",
														"src": "14763:3:10",
														"type": ""
													}
												],
												"src": "14621:366:10"
											},
											{
												"body": {
													"nativeSrc": "15164:248:10",
													"nodeType": "YulBlock",
													"src": "15164:248:10",
													"statements": [
														{
															"nativeSrc": "15174:26:10",
															"nodeType": "YulAssignment",
															"src": "15174:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15186:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15186:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15197:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15197:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15182:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15182:3:10"
																},
																"nativeSrc": "15182:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15182:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15174:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15174:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15221:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15221:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15232:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15232:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15217:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15217:3:10"
																		},
																		"nativeSrc": "15217:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15217:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15240:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15240:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15246:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15246:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15236:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15236:3:10"
																		},
																		"nativeSrc": "15236:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15236:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15210:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15210:6:10"
																},
																"nativeSrc": "15210:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15210:47:10"
															},
															"nativeSrc": "15210:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15210:47:10"
														},
														{
															"nativeSrc": "15266:139:10",
															"nodeType": "YulAssignment",
															"src": "15266:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15400:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15400:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15274:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15274:124:10"
																},
																"nativeSrc": "15274:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15274:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15266:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15266:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14993:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15144:9:10",
														"nodeType": "YulTypedName",
														"src": "15144:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15159:4:10",
														"nodeType": "YulTypedName",
														"src": "15159:4:10",
														"type": ""
													}
												],
												"src": "14993:419:10"
											},
											{
												"body": {
													"nativeSrc": "15446:152:10",
													"nodeType": "YulBlock",
													"src": "15446:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15463:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15463:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15466:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15466:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15456:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15456:6:10"
																},
																"nativeSrc": "15456:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15456:88:10"
															},
															"nativeSrc": "15456:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15456:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15560:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15560:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15563:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15563:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15553:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15553:6:10"
																},
																"nativeSrc": "15553:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15553:15:10"
															},
															"nativeSrc": "15553:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15553:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15584:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15584:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15587:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15587:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15577:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15577:6:10"
																},
																"nativeSrc": "15577:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15577:15:10"
															},
															"nativeSrc": "15577:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15577:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15418:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15418:180:10"
											},
											{
												"body": {
													"nativeSrc": "15647:190:10",
													"nodeType": "YulBlock",
													"src": "15647:190:10",
													"statements": [
														{
															"nativeSrc": "15657:33:10",
															"nodeType": "YulAssignment",
															"src": "15657:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15684:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15684:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15666:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15666:17:10"
																},
																"nativeSrc": "15666:24:10",
																"nodeType": "YulFunctionCall",
																"src": "15666:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15657:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "15657:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15780:22:10",
																"nodeType": "YulBlock",
																"src": "15780:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15782:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15782:16:10"
																			},
																			"nativeSrc": "15782:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15782:18:10"
																		},
																		"nativeSrc": "15782:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15782:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15705:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15705:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15712:66:10",
																		"nodeType": "YulLiteral",
																		"src": "15712:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15702:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15702:2:10"
																},
																"nativeSrc": "15702:77:10",
																"nodeType": "YulFunctionCall",
																"src": "15702:77:10"
															},
															"nativeSrc": "15699:103:10",
															"nodeType": "YulIf",
															"src": "15699:103:10"
														},
														{
															"nativeSrc": "15811:20:10",
															"nodeType": "YulAssignment",
															"src": "15811:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15822:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "15822:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15829:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15829:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15818:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15818:3:10"
																},
																"nativeSrc": "15818:13:10",
																"nodeType": "YulFunctionCall",
																"src": "15818:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15811:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "15604:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15633:5:10",
														"nodeType": "YulTypedName",
														"src": "15633:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15643:3:10",
														"nodeType": "YulTypedName",
														"src": "15643:3:10",
														"type": ""
													}
												],
												"src": "15604:233:10"
											},
											{
												"body": {
													"nativeSrc": "15897:87:10",
													"nodeType": "YulBlock",
													"src": "15897:87:10",
													"statements": [
														{
															"nativeSrc": "15907:11:10",
															"nodeType": "YulAssignment",
															"src": "15907:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "15915:3:10",
																"nodeType": "YulIdentifier",
																"src": "15915:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15907:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15907:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15935:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15935:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15938:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15938:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15928:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15928:6:10"
																},
																"nativeSrc": "15928:14:10",
																"nodeType": "YulFunctionCall",
																"src": "15928:14:10"
															},
															"nativeSrc": "15928:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "15928:14:10"
														},
														{
															"nativeSrc": "15951:26:10",
															"nodeType": "YulAssignment",
															"src": "15951:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15969:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15969:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15972:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15972:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15959:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "15959:9:10"
																},
																"nativeSrc": "15959:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15959:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15951:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15951:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "15843:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15884:3:10",
														"nodeType": "YulTypedName",
														"src": "15884:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15892:4:10",
														"nodeType": "YulTypedName",
														"src": "15892:4:10",
														"type": ""
													}
												],
												"src": "15843:141:10"
											},
											{
												"body": {
													"nativeSrc": "16034:49:10",
													"nodeType": "YulBlock",
													"src": "16034:49:10",
													"statements": [
														{
															"nativeSrc": "16044:33:10",
															"nodeType": "YulAssignment",
															"src": "16044:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16062:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "16062:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16069:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16069:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16058:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16058:3:10"
																		},
																		"nativeSrc": "16058:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16058:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16054:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16054:3:10"
																},
																"nativeSrc": "16054:23:10",
																"nodeType": "YulFunctionCall",
																"src": "16054:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16044:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16044:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15990:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16017:5:10",
														"nodeType": "YulTypedName",
														"src": "16017:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16027:6:10",
														"nodeType": "YulTypedName",
														"src": "16027:6:10",
														"type": ""
													}
												],
												"src": "15990:93:10"
											},
											{
												"body": {
													"nativeSrc": "16142:54:10",
													"nodeType": "YulBlock",
													"src": "16142:54:10",
													"statements": [
														{
															"nativeSrc": "16152:37:10",
															"nodeType": "YulAssignment",
															"src": "16152:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16177:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16177:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16183:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16183:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16173:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16173:3:10"
																},
																"nativeSrc": "16173:16:10",
																"nodeType": "YulFunctionCall",
																"src": "16173:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16152:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "16152:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16089:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16117:4:10",
														"nodeType": "YulTypedName",
														"src": "16117:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16123:5:10",
														"nodeType": "YulTypedName",
														"src": "16123:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16133:8:10",
														"nodeType": "YulTypedName",
														"src": "16133:8:10",
														"type": ""
													}
												],
												"src": "16089:107:10"
											},
											{
												"body": {
													"nativeSrc": "16278:317:10",
													"nodeType": "YulBlock",
													"src": "16278:317:10",
													"statements": [
														{
															"nativeSrc": "16288:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16288:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16309:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "16309:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16321:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16321:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16305:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16305:3:10"
																},
																"nativeSrc": "16305:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16305:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16292:9:10",
																	"nodeType": "YulTypedName",
																	"src": "16292:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16332:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16332:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16363:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16363:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16374:66:10",
																		"nodeType": "YulLiteral",
																		"src": "16374:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16344:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "16344:18:10"
																},
																"nativeSrc": "16344:97:10",
																"nodeType": "YulFunctionCall",
																"src": "16344:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16336:4:10",
																	"nodeType": "YulTypedName",
																	"src": "16336:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16450:51:10",
															"nodeType": "YulAssignment",
															"src": "16450:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16481:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16481:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16492:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "16492:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16462:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "16462:18:10"
																},
																"nativeSrc": "16462:39:10",
																"nodeType": "YulFunctionCall",
																"src": "16462:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16450:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "16450:8:10"
																}
															]
														},
														{
															"nativeSrc": "16510:30:10",
															"nodeType": "YulAssignment",
															"src": "16510:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16523:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16523:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16534:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16534:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16530:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16530:3:10"
																		},
																		"nativeSrc": "16530:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16530:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16519:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16519:3:10"
																},
																"nativeSrc": "16519:21:10",
																"nodeType": "YulFunctionCall",
																"src": "16519:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16510:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "16510:5:10"
																}
															]
														},
														{
															"nativeSrc": "16549:40:10",
															"nodeType": "YulAssignment",
															"src": "16549:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16562:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "16562:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16573:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "16573:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16583:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16583:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16569:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16569:3:10"
																		},
																		"nativeSrc": "16569:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16569:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16559:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "16559:2:10"
																},
																"nativeSrc": "16559:30:10",
																"nodeType": "YulFunctionCall",
																"src": "16559:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16549:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16549:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16202:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16239:5:10",
														"nodeType": "YulTypedName",
														"src": "16239:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16246:10:10",
														"nodeType": "YulTypedName",
														"src": "16246:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16258:8:10",
														"nodeType": "YulTypedName",
														"src": "16258:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16271:6:10",
														"nodeType": "YulTypedName",
														"src": "16271:6:10",
														"type": ""
													}
												],
												"src": "16202:393:10"
											},
											{
												"body": {
													"nativeSrc": "16633:28:10",
													"nodeType": "YulBlock",
													"src": "16633:28:10",
													"statements": [
														{
															"nativeSrc": "16643:12:10",
															"nodeType": "YulAssignment",
															"src": "16643:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "16650:5:10",
																"nodeType": "YulIdentifier",
																"src": "16650:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16643:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16643:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16601:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16619:5:10",
														"nodeType": "YulTypedName",
														"src": "16619:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16629:3:10",
														"nodeType": "YulTypedName",
														"src": "16629:3:10",
														"type": ""
													}
												],
												"src": "16601:60:10"
											},
											{
												"body": {
													"nativeSrc": "16727:82:10",
													"nodeType": "YulBlock",
													"src": "16727:82:10",
													"statements": [
														{
															"nativeSrc": "16737:66:10",
															"nodeType": "YulAssignment",
															"src": "16737:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16795:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "16795:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16777:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "16777:17:10"
																				},
																				"nativeSrc": "16777:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16777:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16768:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "16768:8:10"
																		},
																		"nativeSrc": "16768:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16768:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16750:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16750:17:10"
																},
																"nativeSrc": "16750:53:10",
																"nodeType": "YulFunctionCall",
																"src": "16750:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16737:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "16737:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16667:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16707:5:10",
														"nodeType": "YulTypedName",
														"src": "16707:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16717:9:10",
														"nodeType": "YulTypedName",
														"src": "16717:9:10",
														"type": ""
													}
												],
												"src": "16667:142:10"
											},
											{
												"body": {
													"nativeSrc": "16862:28:10",
													"nodeType": "YulBlock",
													"src": "16862:28:10",
													"statements": [
														{
															"nativeSrc": "16872:12:10",
															"nodeType": "YulAssignment",
															"src": "16872:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "16879:5:10",
																"nodeType": "YulIdentifier",
																"src": "16879:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16872:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "16815:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16848:5:10",
														"nodeType": "YulTypedName",
														"src": "16848:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16858:3:10",
														"nodeType": "YulTypedName",
														"src": "16858:3:10",
														"type": ""
													}
												],
												"src": "16815:75:10"
											},
											{
												"body": {
													"nativeSrc": "16972:193:10",
													"nodeType": "YulBlock",
													"src": "16972:193:10",
													"statements": [
														{
															"nativeSrc": "16982:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16982:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17037:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "17037:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17006:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "17006:30:10"
																},
																"nativeSrc": "17006:39:10",
																"nodeType": "YulFunctionCall",
																"src": "17006:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16986:16:10",
																	"nodeType": "YulTypedName",
																	"src": "16986:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17061:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17061:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17101:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "17101:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17095:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "17095:5:10"
																				},
																				"nativeSrc": "17095:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17095:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17108:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17108:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17140:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "17140:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17116:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "17116:23:10"
																				},
																				"nativeSrc": "17116:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17116:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17067:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "17067:27:10"
																		},
																		"nativeSrc": "17067:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17067:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17054:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17054:6:10"
																},
																"nativeSrc": "17054:105:10",
																"nodeType": "YulFunctionCall",
																"src": "17054:105:10"
															},
															"nativeSrc": "17054:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "17054:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "16896:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16949:4:10",
														"nodeType": "YulTypedName",
														"src": "16949:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16955:6:10",
														"nodeType": "YulTypedName",
														"src": "16955:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16963:7:10",
														"nodeType": "YulTypedName",
														"src": "16963:7:10",
														"type": ""
													}
												],
												"src": "16896:269:10"
											},
											{
												"body": {
													"nativeSrc": "17220:24:10",
													"nodeType": "YulBlock",
													"src": "17220:24:10",
													"statements": [
														{
															"nativeSrc": "17230:8:10",
															"nodeType": "YulAssignment",
															"src": "17230:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "17237:1:10",
																"nodeType": "YulLiteral",
																"src": "17237:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17230:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17230:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17171:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17216:3:10",
														"nodeType": "YulTypedName",
														"src": "17216:3:10",
														"type": ""
													}
												],
												"src": "17171:73:10"
											},
											{
												"body": {
													"nativeSrc": "17303:136:10",
													"nodeType": "YulBlock",
													"src": "17303:136:10",
													"statements": [
														{
															"nativeSrc": "17313:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "17313:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17327:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "17327:30:10"
																},
																"nativeSrc": "17327:32:10",
																"nodeType": "YulFunctionCall",
																"src": "17327:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17317:6:10",
																	"nodeType": "YulTypedName",
																	"src": "17317:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17412:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17412:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17418:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17418:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17426:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17426:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17368:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17368:43:10"
																},
																"nativeSrc": "17368:65:10",
																"nodeType": "YulFunctionCall",
																"src": "17368:65:10"
															},
															"nativeSrc": "17368:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "17368:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17250:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17289:4:10",
														"nodeType": "YulTypedName",
														"src": "17289:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17295:6:10",
														"nodeType": "YulTypedName",
														"src": "17295:6:10",
														"type": ""
													}
												],
												"src": "17250:189:10"
											},
											{
												"body": {
													"nativeSrc": "17495:136:10",
													"nodeType": "YulBlock",
													"src": "17495:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "17562:63:10",
																"nodeType": "YulBlock",
																"src": "17562:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17606:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "17606:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17613:1:10",
																					"nodeType": "YulLiteral",
																					"src": "17613:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17576:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "17576:29:10"
																			},
																			"nativeSrc": "17576:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17576:39:10"
																		},
																		"nativeSrc": "17576:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17576:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17515:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "17515:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17522:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17522:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17512:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "17512:2:10"
																},
																"nativeSrc": "17512:14:10",
																"nodeType": "YulFunctionCall",
																"src": "17512:14:10"
															},
															"nativeSrc": "17505:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17527:26:10",
																"nodeType": "YulBlock",
																"src": "17527:26:10",
																"statements": [
																	{
																		"nativeSrc": "17529:22:10",
																		"nodeType": "YulAssignment",
																		"src": "17529:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17542:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "17542:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17549:1:10",
																					"nodeType": "YulLiteral",
																					"src": "17549:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17538:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "17538:3:10"
																			},
																			"nativeSrc": "17538:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17538:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17529:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "17529:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17509:2:10",
																"nodeType": "YulBlock",
																"src": "17509:2:10",
																"statements": []
															},
															"src": "17505:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17445:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17483:5:10",
														"nodeType": "YulTypedName",
														"src": "17483:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17490:3:10",
														"nodeType": "YulTypedName",
														"src": "17490:3:10",
														"type": ""
													}
												],
												"src": "17445:186:10"
											},
											{
												"body": {
													"nativeSrc": "17716:464:10",
													"nodeType": "YulBlock",
													"src": "17716:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "17742:431:10",
																"nodeType": "YulBlock",
																"src": "17742:431:10",
																"statements": [
																	{
																		"nativeSrc": "17756:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17756:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17804:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "17804:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17772:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "17772:31:10"
																			},
																			"nativeSrc": "17772:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17772:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17760:8:10",
																				"nodeType": "YulTypedName",
																				"src": "17760:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17823:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17823:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "17846:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "17846:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "17874:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "17874:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "17856:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "17856:17:10"
																					},
																					"nativeSrc": "17856:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "17856:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17842:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "17842:3:10"
																			},
																			"nativeSrc": "17842:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17842:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "17827:11:10",
																				"nodeType": "YulTypedName",
																				"src": "17827:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18043:27:10",
																			"nodeType": "YulBlock",
																			"src": "18043:27:10",
																			"statements": [
																				{
																					"nativeSrc": "18045:23:10",
																					"nodeType": "YulAssignment",
																					"src": "18045:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18060:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "18060:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18045:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "18045:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18027:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "18027:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18039:2:10",
																					"nodeType": "YulLiteral",
																					"src": "18039:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18024:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "18024:2:10"
																			},
																			"nativeSrc": "18024:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "18024:18:10"
																		},
																		"nativeSrc": "18021:49:10",
																		"nodeType": "YulIf",
																		"src": "18021:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18112:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "18112:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18129:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "18129:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18157:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "18157:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18139:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "18139:17:10"
																							},
																							"nativeSrc": "18139:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "18139:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18125:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "18125:3:10"
																					},
																					"nativeSrc": "18125:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "18125:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18083:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "18083:28:10"
																			},
																			"nativeSrc": "18083:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "18083:80:10"
																		},
																		"nativeSrc": "18083:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "18083:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17733:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17733:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17738:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17738:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17730:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "17730:2:10"
																},
																"nativeSrc": "17730:11:10",
																"nodeType": "YulFunctionCall",
																"src": "17730:11:10"
															},
															"nativeSrc": "17727:446:10",
															"nodeType": "YulIf",
															"src": "17727:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17637:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17692:5:10",
														"nodeType": "YulTypedName",
														"src": "17692:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17699:3:10",
														"nodeType": "YulTypedName",
														"src": "17699:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17704:10:10",
														"nodeType": "YulTypedName",
														"src": "17704:10:10",
														"type": ""
													}
												],
												"src": "17637:543:10"
											},
											{
												"body": {
													"nativeSrc": "18249:54:10",
													"nodeType": "YulBlock",
													"src": "18249:54:10",
													"statements": [
														{
															"nativeSrc": "18259:37:10",
															"nodeType": "YulAssignment",
															"src": "18259:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18284:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18284:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18290:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "18290:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18280:3:10"
																},
																"nativeSrc": "18280:16:10",
																"nodeType": "YulFunctionCall",
																"src": "18280:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18259:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "18259:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18186:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18224:4:10",
														"nodeType": "YulTypedName",
														"src": "18224:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18230:5:10",
														"nodeType": "YulTypedName",
														"src": "18230:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18240:8:10",
														"nodeType": "YulTypedName",
														"src": "18240:8:10",
														"type": ""
													}
												],
												"src": "18186:117:10"
											},
											{
												"body": {
													"nativeSrc": "18360:118:10",
													"nodeType": "YulBlock",
													"src": "18360:118:10",
													"statements": [
														{
															"nativeSrc": "18370:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "18370:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18419:1:10",
																						"nodeType": "YulLiteral",
																						"src": "18419:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18422:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "18422:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18415:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "18415:3:10"
																				},
																				"nativeSrc": "18415:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "18415:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18434:1:10",
																						"nodeType": "YulLiteral",
																						"src": "18434:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18430:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "18430:3:10"
																				},
																				"nativeSrc": "18430:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "18430:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18386:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "18386:28:10"
																		},
																		"nativeSrc": "18386:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18386:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18382:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18382:3:10"
																},
																"nativeSrc": "18382:56:10",
																"nodeType": "YulFunctionCall",
																"src": "18382:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18374:4:10",
																	"nodeType": "YulTypedName",
																	"src": "18374:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18447:25:10",
															"nodeType": "YulAssignment",
															"src": "18447:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18461:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18461:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18467:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18467:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18457:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18457:3:10"
																},
																"nativeSrc": "18457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "18457:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18447:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18447:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18309:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18337:4:10",
														"nodeType": "YulTypedName",
														"src": "18337:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18343:5:10",
														"nodeType": "YulTypedName",
														"src": "18343:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18353:6:10",
														"nodeType": "YulTypedName",
														"src": "18353:6:10",
														"type": ""
													}
												],
												"src": "18309:169:10"
											},
											{
												"body": {
													"nativeSrc": "18564:214:10",
													"nodeType": "YulBlock",
													"src": "18564:214:10",
													"statements": [
														{
															"nativeSrc": "18697:37:10",
															"nodeType": "YulAssignment",
															"src": "18697:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18724:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18724:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18730:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18730:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18705:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "18705:18:10"
																},
																"nativeSrc": "18705:29:10",
																"nodeType": "YulFunctionCall",
																"src": "18705:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18697:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18697:4:10"
																}
															]
														},
														{
															"nativeSrc": "18743:29:10",
															"nodeType": "YulAssignment",
															"src": "18743:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18754:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18754:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18764:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18764:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18767:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "18767:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18760:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18760:3:10"
																		},
																		"nativeSrc": "18760:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18760:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18751:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "18751:2:10"
																},
																"nativeSrc": "18751:21:10",
																"nodeType": "YulFunctionCall",
																"src": "18751:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18743:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18743:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18483:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18545:4:10",
														"nodeType": "YulTypedName",
														"src": "18545:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18551:3:10",
														"nodeType": "YulTypedName",
														"src": "18551:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18559:4:10",
														"nodeType": "YulTypedName",
														"src": "18559:4:10",
														"type": ""
													}
												],
												"src": "18483:295:10"
											},
											{
												"body": {
													"nativeSrc": "18875:1303:10",
													"nodeType": "YulBlock",
													"src": "18875:1303:10",
													"statements": [
														{
															"nativeSrc": "18886:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "18886:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "18933:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18933:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18900:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "18900:32:10"
																},
																"nativeSrc": "18900:37:10",
																"nodeType": "YulFunctionCall",
																"src": "18900:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "18890:6:10",
																	"nodeType": "YulTypedName",
																	"src": "18890:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19022:22:10",
																"nodeType": "YulBlock",
																"src": "19022:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19024:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "19024:16:10"
																			},
																			"nativeSrc": "19024:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19024:18:10"
																		},
																		"nativeSrc": "19024:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19024:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18994:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18994:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19002:18:10",
																		"nodeType": "YulLiteral",
																		"src": "19002:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18991:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "18991:2:10"
																},
																"nativeSrc": "18991:30:10",
																"nodeType": "YulFunctionCall",
																"src": "18991:30:10"
															},
															"nativeSrc": "18988:56:10",
															"nodeType": "YulIf",
															"src": "18988:56:10"
														},
														{
															"nativeSrc": "19054:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19054:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19100:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19100:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19094:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "19094:5:10"
																		},
																		"nativeSrc": "19094:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19094:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19068:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "19068:25:10"
																},
																"nativeSrc": "19068:38:10",
																"nodeType": "YulFunctionCall",
																"src": "19068:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19058:6:10",
																	"nodeType": "YulTypedName",
																	"src": "19058:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19199:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19199:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19205:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19205:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19213:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19213:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19153:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "19153:45:10"
																},
																"nativeSrc": "19153:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19153:67:10"
															},
															"nativeSrc": "19153:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "19153:67:10"
														},
														{
															"nativeSrc": "19230:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "19230:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "19247:1:10",
																"nodeType": "YulLiteral",
																"src": "19247:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19234:9:10",
																	"nodeType": "YulTypedName",
																	"src": "19234:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19258:17:10",
															"nodeType": "YulAssignment",
															"src": "19258:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "19271:4:10",
																"nodeType": "YulLiteral",
																"src": "19271:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19258:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "19258:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19322:611:10",
																		"nodeType": "YulBlock",
																		"src": "19322:611:10",
																		"statements": [
																			{
																				"nativeSrc": "19336:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19336:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19355:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "19355:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19367:4:10",
																									"nodeType": "YulLiteral",
																									"src": "19367:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19363:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "19363:3:10"
																							},
																							"nativeSrc": "19363:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "19363:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19351:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "19351:3:10"
																					},
																					"nativeSrc": "19351:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "19351:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19340:7:10",
																						"nodeType": "YulTypedName",
																						"src": "19340:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19387:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19387:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19433:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "19433:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19401:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "19401:31:10"
																					},
																					"nativeSrc": "19401:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "19401:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19391:6:10",
																						"nodeType": "YulTypedName",
																						"src": "19391:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19451:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19451:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19460:1:10",
																					"nodeType": "YulLiteral",
																					"src": "19460:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19455:1:10",
																						"nodeType": "YulTypedName",
																						"src": "19455:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19519:163:10",
																					"nodeType": "YulBlock",
																					"src": "19519:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19544:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "19544:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19562:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "19562:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19567:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "19567:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19558:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "19558:3:10"
																												},
																												"nativeSrc": "19558:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "19558:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "19552:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "19552:5:10"
																										},
																										"nativeSrc": "19552:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "19552:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19537:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "19537:6:10"
																								},
																								"nativeSrc": "19537:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "19537:42:10"
																							},
																							"nativeSrc": "19537:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "19537:42:10"
																						},
																						{
																							"nativeSrc": "19596:24:10",
																							"nodeType": "YulAssignment",
																							"src": "19596:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19610:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "19610:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19618:1:10",
																										"nodeType": "YulLiteral",
																										"src": "19618:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19606:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "19606:3:10"
																								},
																								"nativeSrc": "19606:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "19606:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19596:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "19596:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19637:31:10",
																							"nodeType": "YulAssignment",
																							"src": "19637:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19654:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "19654:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19665:2:10",
																										"nodeType": "YulLiteral",
																										"src": "19665:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19650:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "19650:3:10"
																								},
																								"nativeSrc": "19650:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "19650:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19637:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "19637:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19485:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "19485:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19488:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "19488:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19482:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "19482:2:10"
																					},
																					"nativeSrc": "19482:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "19482:14:10"
																				},
																				"nativeSrc": "19474:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19497:21:10",
																					"nodeType": "YulBlock",
																					"src": "19497:21:10",
																					"statements": [
																						{
																							"nativeSrc": "19499:17:10",
																							"nodeType": "YulAssignment",
																							"src": "19499:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19508:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "19508:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19511:4:10",
																										"nodeType": "YulLiteral",
																										"src": "19511:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19504:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "19504:3:10"
																								},
																								"nativeSrc": "19504:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "19504:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19499:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "19499:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19478:3:10",
																					"nodeType": "YulBlock",
																					"src": "19478:3:10",
																					"statements": []
																				},
																				"src": "19474:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "19718:156:10",
																					"nodeType": "YulBlock",
																					"src": "19718:156:10",
																					"statements": [
																						{
																							"nativeSrc": "19736:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19736:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19763:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "19763:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19768:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "19768:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19759:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "19759:3:10"
																										},
																										"nativeSrc": "19759:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "19759:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19753:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "19753:5:10"
																								},
																								"nativeSrc": "19753:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "19753:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19740:9:10",
																									"nodeType": "YulTypedName",
																									"src": "19740:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19803:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "19803:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "19830:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "19830:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "19845:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "19845:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "19853:4:10",
																														"nodeType": "YulLiteral",
																														"src": "19853:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "19841:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "19841:3:10"
																												},
																												"nativeSrc": "19841:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "19841:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "19811:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "19811:18:10"
																										},
																										"nativeSrc": "19811:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "19811:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19796:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "19796:6:10"
																								},
																								"nativeSrc": "19796:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "19796:64:10"
																							},
																							"nativeSrc": "19796:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "19796:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19701:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "19701:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19710:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "19710:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19698:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "19698:2:10"
																					},
																					"nativeSrc": "19698:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "19698:19:10"
																				},
																				"nativeSrc": "19695:179:10",
																				"nodeType": "YulIf",
																				"src": "19695:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19894:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "19894:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "19908:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "19908:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "19916:1:10",
																											"nodeType": "YulLiteral",
																											"src": "19916:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "19904:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "19904:3:10"
																									},
																									"nativeSrc": "19904:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "19904:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19920:1:10",
																									"nodeType": "YulLiteral",
																									"src": "19920:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19900:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "19900:3:10"
																							},
																							"nativeSrc": "19900:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "19900:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19887:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "19887:6:10"
																					},
																					"nativeSrc": "19887:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "19887:36:10"
																				},
																				"nativeSrc": "19887:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "19887:36:10"
																			}
																		]
																	},
																	"nativeSrc": "19315:618:10",
																	"nodeType": "YulCase",
																	"src": "19315:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19320:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19950:222:10",
																		"nodeType": "YulBlock",
																		"src": "19950:222:10",
																		"statements": [
																			{
																				"nativeSrc": "19964:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19964:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19977:1:10",
																					"nodeType": "YulLiteral",
																					"src": "19977:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "19968:5:10",
																						"nodeType": "YulTypedName",
																						"src": "19968:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20001:67:10",
																					"nodeType": "YulBlock",
																					"src": "20001:67:10",
																					"statements": [
																						{
																							"nativeSrc": "20019:35:10",
																							"nodeType": "YulAssignment",
																							"src": "20019:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20038:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "20038:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20043:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "20043:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20034:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "20034:3:10"
																										},
																										"nativeSrc": "20034:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "20034:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20028:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "20028:5:10"
																								},
																								"nativeSrc": "20028:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "20028:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20019:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "20019:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19994:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "19994:6:10"
																				},
																				"nativeSrc": "19991:77:10",
																				"nodeType": "YulIf",
																				"src": "19991:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20088:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "20088:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20147:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "20147:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20154:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "20154:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20094:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "20094:52:10"
																							},
																							"nativeSrc": "20094:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "20094:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20081:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "20081:6:10"
																					},
																					"nativeSrc": "20081:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "20081:81:10"
																				},
																				"nativeSrc": "20081:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "20081:81:10"
																			}
																		]
																	},
																	"nativeSrc": "19942:230:10",
																	"nodeType": "YulCase",
																	"src": "19942:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19295:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19295:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19303:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19303:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19292:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "19292:2:10"
																},
																"nativeSrc": "19292:14:10",
																"nodeType": "YulFunctionCall",
																"src": "19292:14:10"
															},
															"nativeSrc": "19285:887:10",
															"nodeType": "YulSwitch",
															"src": "19285:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "18783:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18864:4:10",
														"nodeType": "YulTypedName",
														"src": "18864:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "18870:3:10",
														"nodeType": "YulTypedName",
														"src": "18870:3:10",
														"type": ""
													}
												],
												"src": "18783:1395:10"
											},
											{
												"body": {
													"nativeSrc": "20310:206:10",
													"nodeType": "YulBlock",
													"src": "20310:206:10",
													"statements": [
														{
															"nativeSrc": "20320:26:10",
															"nodeType": "YulAssignment",
															"src": "20320:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20332:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20332:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20343:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20343:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20328:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20328:3:10"
																},
																"nativeSrc": "20328:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20328:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20320:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20320:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20400:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20400:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20413:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20413:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20424:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20424:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20409:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20409:3:10"
																		},
																		"nativeSrc": "20409:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20409:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20356:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20356:43:10"
																},
																"nativeSrc": "20356:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20356:71:10"
															},
															"nativeSrc": "20356:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20356:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20481:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20481:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20494:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20494:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20505:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20505:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20490:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20490:3:10"
																		},
																		"nativeSrc": "20490:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20490:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20437:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20437:43:10"
																},
																"nativeSrc": "20437:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20437:72:10"
															},
															"nativeSrc": "20437:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20437:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20184:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20274:9:10",
														"nodeType": "YulTypedName",
														"src": "20274:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20286:6:10",
														"nodeType": "YulTypedName",
														"src": "20286:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20294:6:10",
														"nodeType": "YulTypedName",
														"src": "20294:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20305:4:10",
														"nodeType": "YulTypedName",
														"src": "20305:4:10",
														"type": ""
													}
												],
												"src": "20184:332:10"
											},
											{
												"body": {
													"nativeSrc": "20628:58:10",
													"nodeType": "YulBlock",
													"src": "20628:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20650:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20650:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20658:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20658:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20646:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20646:3:10"
																		},
																		"nativeSrc": "20646:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20646:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420737461747573",
																		"kind": "string",
																		"nativeSrc": "20662:16:10",
																		"nodeType": "YulLiteral",
																		"src": "20662:16:10",
																		"type": "",
																		"value": "Invalid status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20639:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20639:6:10"
																},
																"nativeSrc": "20639:40:10",
																"nodeType": "YulFunctionCall",
																"src": "20639:40:10"
															},
															"nativeSrc": "20639:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "20639:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
												"nativeSrc": "20522:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20620:6:10",
														"nodeType": "YulTypedName",
														"src": "20620:6:10",
														"type": ""
													}
												],
												"src": "20522:164:10"
											},
											{
												"body": {
													"nativeSrc": "20838:220:10",
													"nodeType": "YulBlock",
													"src": "20838:220:10",
													"statements": [
														{
															"nativeSrc": "20848:74:10",
															"nodeType": "YulAssignment",
															"src": "20848:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20914:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20914:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20919:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20919:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20855:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20855:58:10"
																},
																"nativeSrc": "20855:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20855:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20848:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20848:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21020:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21020:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																	"nativeSrc": "20931:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20931:88:10"
																},
																"nativeSrc": "20931:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20931:93:10"
															},
															"nativeSrc": "20931:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20931:93:10"
														},
														{
															"nativeSrc": "21033:19:10",
															"nodeType": "YulAssignment",
															"src": "21033:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21044:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21044:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21049:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21049:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21040:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21040:3:10"
																},
																"nativeSrc": "21040:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21040:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21033:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21033:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20692:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20826:3:10",
														"nodeType": "YulTypedName",
														"src": "20826:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20834:3:10",
														"nodeType": "YulTypedName",
														"src": "20834:3:10",
														"type": ""
													}
												],
												"src": "20692:366:10"
											},
											{
												"body": {
													"nativeSrc": "21235:248:10",
													"nodeType": "YulBlock",
													"src": "21235:248:10",
													"statements": [
														{
															"nativeSrc": "21245:26:10",
															"nodeType": "YulAssignment",
															"src": "21245:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21257:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21257:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21268:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21268:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21253:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21253:3:10"
																},
																"nativeSrc": "21253:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21253:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21245:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21245:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21292:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21292:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21303:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21303:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21288:3:10"
																		},
																		"nativeSrc": "21288:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21288:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21311:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21311:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21317:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21317:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21307:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21307:3:10"
																		},
																		"nativeSrc": "21307:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21307:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21281:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21281:6:10"
																},
																"nativeSrc": "21281:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21281:47:10"
															},
															"nativeSrc": "21281:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21281:47:10"
														},
														{
															"nativeSrc": "21337:139:10",
															"nodeType": "YulAssignment",
															"src": "21337:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21471:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21471:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21345:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21345:124:10"
																},
																"nativeSrc": "21345:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21345:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21337:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21337:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21064:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21215:9:10",
														"nodeType": "YulTypedName",
														"src": "21215:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21230:4:10",
														"nodeType": "YulTypedName",
														"src": "21230:4:10",
														"type": ""
													}
												],
												"src": "21064:419:10"
											},
											{
												"body": {
													"nativeSrc": "21595:63:10",
													"nodeType": "YulBlock",
													"src": "21595:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21617:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21625:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21625:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21613:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21613:3:10"
																		},
																		"nativeSrc": "21613:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21613:14:10"
																	},
																	{
																		"hexValue": "4974656d206e6f742072657061697261626c65",
																		"kind": "string",
																		"nativeSrc": "21629:21:10",
																		"nodeType": "YulLiteral",
																		"src": "21629:21:10",
																		"type": "",
																		"value": "Item not repairable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21606:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21606:6:10"
																},
																"nativeSrc": "21606:45:10",
																"nodeType": "YulFunctionCall",
																"src": "21606:45:10"
															},
															"nativeSrc": "21606:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "21606:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c",
												"nativeSrc": "21489:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21587:6:10",
														"nodeType": "YulTypedName",
														"src": "21587:6:10",
														"type": ""
													}
												],
												"src": "21489:169:10"
											},
											{
												"body": {
													"nativeSrc": "21810:220:10",
													"nodeType": "YulBlock",
													"src": "21810:220:10",
													"statements": [
														{
															"nativeSrc": "21820:74:10",
															"nodeType": "YulAssignment",
															"src": "21820:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21886:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21886:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21891:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21891:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21827:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21827:58:10"
																},
																"nativeSrc": "21827:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21827:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21820:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21820:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21992:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21992:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c",
																	"nativeSrc": "21903:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21903:88:10"
																},
																"nativeSrc": "21903:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21903:93:10"
															},
															"nativeSrc": "21903:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21903:93:10"
														},
														{
															"nativeSrc": "22005:19:10",
															"nodeType": "YulAssignment",
															"src": "22005:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22016:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22016:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22021:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22021:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22012:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22012:3:10"
																},
																"nativeSrc": "22012:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22012:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22005:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22005:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21664:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21798:3:10",
														"nodeType": "YulTypedName",
														"src": "21798:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21806:3:10",
														"nodeType": "YulTypedName",
														"src": "21806:3:10",
														"type": ""
													}
												],
												"src": "21664:366:10"
											},
											{
												"body": {
													"nativeSrc": "22207:248:10",
													"nodeType": "YulBlock",
													"src": "22207:248:10",
													"statements": [
														{
															"nativeSrc": "22217:26:10",
															"nodeType": "YulAssignment",
															"src": "22217:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22229:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22229:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22240:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22240:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22225:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22225:3:10"
																},
																"nativeSrc": "22225:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22225:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22217:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22217:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22264:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22264:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22275:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22275:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22260:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22260:3:10"
																		},
																		"nativeSrc": "22260:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22260:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22283:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22283:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22289:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22289:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22279:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22279:3:10"
																		},
																		"nativeSrc": "22279:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22279:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22253:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22253:6:10"
																},
																"nativeSrc": "22253:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22253:47:10"
															},
															"nativeSrc": "22253:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22253:47:10"
														},
														{
															"nativeSrc": "22309:139:10",
															"nodeType": "YulAssignment",
															"src": "22309:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22443:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22443:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22317:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22317:124:10"
																},
																"nativeSrc": "22317:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22317:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22309:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22309:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22036:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22187:9:10",
														"nodeType": "YulTypedName",
														"src": "22187:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22202:4:10",
														"nodeType": "YulTypedName",
														"src": "22202:4:10",
														"type": ""
													}
												],
												"src": "22036:419:10"
											},
											{
												"body": {
													"nativeSrc": "22567:53:10",
													"nodeType": "YulBlock",
													"src": "22567:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22589:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22589:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22597:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22597:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22585:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22585:3:10"
																		},
																		"nativeSrc": "22585:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22585:14:10"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "22601:11:10",
																		"nodeType": "YulLiteral",
																		"src": "22601:11:10",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22578:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22578:6:10"
																},
																"nativeSrc": "22578:35:10",
																"nodeType": "YulFunctionCall",
																"src": "22578:35:10"
															},
															"nativeSrc": "22578:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "22578:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
												"nativeSrc": "22461:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22559:6:10",
														"nodeType": "YulTypedName",
														"src": "22559:6:10",
														"type": ""
													}
												],
												"src": "22461:159:10"
											},
											{
												"body": {
													"nativeSrc": "22772:219:10",
													"nodeType": "YulBlock",
													"src": "22772:219:10",
													"statements": [
														{
															"nativeSrc": "22782:73:10",
															"nodeType": "YulAssignment",
															"src": "22782:73:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22848:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22848:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22853:1:10",
																		"nodeType": "YulLiteral",
																		"src": "22853:1:10",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22789:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "22789:58:10"
																},
																"nativeSrc": "22789:66:10",
																"nodeType": "YulFunctionCall",
																"src": "22789:66:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22782:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22782:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22953:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22953:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																	"nativeSrc": "22864:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "22864:88:10"
																},
																"nativeSrc": "22864:93:10",
																"nodeType": "YulFunctionCall",
																"src": "22864:93:10"
															},
															"nativeSrc": "22864:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "22864:93:10"
														},
														{
															"nativeSrc": "22966:19:10",
															"nodeType": "YulAssignment",
															"src": "22966:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22977:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22977:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22982:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22982:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22973:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22973:3:10"
																},
																"nativeSrc": "22973:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22973:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22966:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22966:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22626:365:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22760:3:10",
														"nodeType": "YulTypedName",
														"src": "22760:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22768:3:10",
														"nodeType": "YulTypedName",
														"src": "22768:3:10",
														"type": ""
													}
												],
												"src": "22626:365:10"
											},
											{
												"body": {
													"nativeSrc": "23168:248:10",
													"nodeType": "YulBlock",
													"src": "23168:248:10",
													"statements": [
														{
															"nativeSrc": "23178:26:10",
															"nodeType": "YulAssignment",
															"src": "23178:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23190:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23190:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23201:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23186:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23186:3:10"
																},
																"nativeSrc": "23186:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23186:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23178:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23178:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23225:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23225:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23236:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23236:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23221:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23221:3:10"
																		},
																		"nativeSrc": "23221:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23221:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23244:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23244:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23250:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23250:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23240:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23240:3:10"
																		},
																		"nativeSrc": "23240:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23240:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23214:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23214:6:10"
																},
																"nativeSrc": "23214:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23214:47:10"
															},
															"nativeSrc": "23214:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23214:47:10"
														},
														{
															"nativeSrc": "23270:139:10",
															"nodeType": "YulAssignment",
															"src": "23270:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23404:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23404:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23278:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23278:124:10"
																},
																"nativeSrc": "23278:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23278:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23270:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23270:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22997:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23148:9:10",
														"nodeType": "YulTypedName",
														"src": "23148:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23163:4:10",
														"nodeType": "YulTypedName",
														"src": "23163:4:10",
														"type": ""
													}
												],
												"src": "22997:419:10"
											},
											{
												"body": {
													"nativeSrc": "23576:288:10",
													"nodeType": "YulBlock",
													"src": "23576:288:10",
													"statements": [
														{
															"nativeSrc": "23586:26:10",
															"nodeType": "YulAssignment",
															"src": "23586:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23598:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23598:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23609:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23609:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23594:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23594:3:10"
																},
																"nativeSrc": "23594:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23594:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23586:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23586:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23666:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23666:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23679:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23679:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23690:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23690:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23675:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23675:3:10"
																		},
																		"nativeSrc": "23675:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23675:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23622:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23622:43:10"
																},
																"nativeSrc": "23622:71:10",
																"nodeType": "YulFunctionCall",
																"src": "23622:71:10"
															},
															"nativeSrc": "23622:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "23622:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23747:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23747:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23760:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23760:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23771:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23771:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23756:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23756:3:10"
																		},
																		"nativeSrc": "23756:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23756:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23703:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23703:43:10"
																},
																"nativeSrc": "23703:72:10",
																"nodeType": "YulFunctionCall",
																"src": "23703:72:10"
															},
															"nativeSrc": "23703:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "23703:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23829:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23829:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23842:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23842:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23853:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23853:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23838:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23838:3:10"
																		},
																		"nativeSrc": "23838:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23838:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23785:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23785:43:10"
																},
																"nativeSrc": "23785:72:10",
																"nodeType": "YulFunctionCall",
																"src": "23785:72:10"
															},
															"nativeSrc": "23785:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "23785:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23422:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23532:9:10",
														"nodeType": "YulTypedName",
														"src": "23532:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23544:6:10",
														"nodeType": "YulTypedName",
														"src": "23544:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23552:6:10",
														"nodeType": "YulTypedName",
														"src": "23552:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23560:6:10",
														"nodeType": "YulTypedName",
														"src": "23560:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23571:4:10",
														"nodeType": "YulTypedName",
														"src": "23571:4:10",
														"type": ""
													}
												],
												"src": "23422:442:10"
											},
											{
												"body": {
													"nativeSrc": "23968:124:10",
													"nodeType": "YulBlock",
													"src": "23968:124:10",
													"statements": [
														{
															"nativeSrc": "23978:26:10",
															"nodeType": "YulAssignment",
															"src": "23978:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23990:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23990:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24001:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24001:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23986:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23986:3:10"
																},
																"nativeSrc": "23986:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23986:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23978:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23978:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24058:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24058:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24071:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24071:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24082:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24082:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24067:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24067:3:10"
																		},
																		"nativeSrc": "24067:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24067:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24014:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24014:43:10"
																},
																"nativeSrc": "24014:71:10",
																"nodeType": "YulFunctionCall",
																"src": "24014:71:10"
															},
															"nativeSrc": "24014:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "24014:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "23870:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23940:9:10",
														"nodeType": "YulTypedName",
														"src": "23940:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23952:6:10",
														"nodeType": "YulTypedName",
														"src": "23952:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23963:4:10",
														"nodeType": "YulTypedName",
														"src": "23963:4:10",
														"type": ""
													}
												],
												"src": "23870:222:10"
											},
											{
												"body": {
													"nativeSrc": "24142:147:10",
													"nodeType": "YulBlock",
													"src": "24142:147:10",
													"statements": [
														{
															"nativeSrc": "24152:25:10",
															"nodeType": "YulAssignment",
															"src": "24152:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24175:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24175:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24157:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "24157:17:10"
																},
																"nativeSrc": "24157:20:10",
																"nodeType": "YulFunctionCall",
																"src": "24157:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24152:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "24152:1:10"
																}
															]
														},
														{
															"nativeSrc": "24186:25:10",
															"nodeType": "YulAssignment",
															"src": "24186:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24209:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24209:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24191:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "24191:17:10"
																},
																"nativeSrc": "24191:20:10",
																"nodeType": "YulFunctionCall",
																"src": "24191:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "24186:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "24186:1:10"
																}
															]
														},
														{
															"nativeSrc": "24220:16:10",
															"nodeType": "YulAssignment",
															"src": "24220:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24231:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24231:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24234:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24234:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24227:3:10"
																},
																"nativeSrc": "24227:9:10",
																"nodeType": "YulFunctionCall",
																"src": "24227:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "24220:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24220:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24260:22:10",
																"nodeType": "YulBlock",
																"src": "24260:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24262:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "24262:16:10"
																			},
																			"nativeSrc": "24262:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "24262:18:10"
																		},
																		"nativeSrc": "24262:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "24262:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24252:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "24252:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "24255:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24255:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24249:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "24249:2:10"
																},
																"nativeSrc": "24249:10:10",
																"nodeType": "YulFunctionCall",
																"src": "24249:10:10"
															},
															"nativeSrc": "24246:36:10",
															"nodeType": "YulIf",
															"src": "24246:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "24098:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24129:1:10",
														"nodeType": "YulTypedName",
														"src": "24129:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24132:1:10",
														"nodeType": "YulTypedName",
														"src": "24132:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "24138:3:10",
														"nodeType": "YulTypedName",
														"src": "24138:3:10",
														"type": ""
													}
												],
												"src": "24098:191:10"
											},
											{
												"body": {
													"nativeSrc": "24514:463:10",
													"nodeType": "YulBlock",
													"src": "24514:463:10",
													"statements": [
														{
															"nativeSrc": "24524:27:10",
															"nodeType": "YulAssignment",
															"src": "24524:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24536:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24536:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24547:3:10",
																		"nodeType": "YulLiteral",
																		"src": "24547:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24532:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24532:3:10"
																},
																"nativeSrc": "24532:19:10",
																"nodeType": "YulFunctionCall",
																"src": "24532:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24524:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24524:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24614:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24614:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24627:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24627:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24638:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24638:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24623:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24623:3:10"
																		},
																		"nativeSrc": "24623:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24623:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$1280_to_t_uint8_fromStack",
																	"nativeSrc": "24561:52:10",
																	"nodeType": "YulIdentifier",
																	"src": "24561:52:10"
																},
																"nativeSrc": "24561:80:10",
																"nodeType": "YulFunctionCall",
																"src": "24561:80:10"
															},
															"nativeSrc": "24561:80:10",
															"nodeType": "YulExpressionStatement",
															"src": "24561:80:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24695:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24695:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24708:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24708:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24719:2:10",
																				"nodeType": "YulLiteral",
																				"src": "24719:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24704:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24704:3:10"
																		},
																		"nativeSrc": "24704:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24704:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24651:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24651:43:10"
																},
																"nativeSrc": "24651:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24651:72:10"
															},
															"nativeSrc": "24651:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24651:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24777:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24777:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24790:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24790:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24801:2:10",
																				"nodeType": "YulLiteral",
																				"src": "24801:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24786:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24786:3:10"
																		},
																		"nativeSrc": "24786:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24786:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24733:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24733:43:10"
																},
																"nativeSrc": "24733:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24733:72:10"
															},
															"nativeSrc": "24733:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24733:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "24859:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24859:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24872:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24883:2:10",
																				"nodeType": "YulLiteral",
																				"src": "24883:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24868:3:10"
																		},
																		"nativeSrc": "24868:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24868:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24815:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24815:43:10"
																},
																"nativeSrc": "24815:72:10",
																"nodeType": "YulFunctionCall",
																"src": "24815:72:10"
															},
															"nativeSrc": "24815:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "24815:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "24941:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24941:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24954:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24954:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24965:3:10",
																				"nodeType": "YulLiteral",
																				"src": "24965:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24950:3:10"
																		},
																		"nativeSrc": "24950:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24950:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24897:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "24897:43:10"
																},
																"nativeSrc": "24897:73:10",
																"nodeType": "YulFunctionCall",
																"src": "24897:73:10"
															},
															"nativeSrc": "24897:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "24897:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$1280_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "24295:682:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24454:9:10",
														"nodeType": "YulTypedName",
														"src": "24454:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "24466:6:10",
														"nodeType": "YulTypedName",
														"src": "24466:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24474:6:10",
														"nodeType": "YulTypedName",
														"src": "24474:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24482:6:10",
														"nodeType": "YulTypedName",
														"src": "24482:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24490:6:10",
														"nodeType": "YulTypedName",
														"src": "24490:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24498:6:10",
														"nodeType": "YulTypedName",
														"src": "24498:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24509:4:10",
														"nodeType": "YulTypedName",
														"src": "24509:4:10",
														"type": ""
													}
												],
												"src": "24295:682:10"
											},
											{
												"body": {
													"nativeSrc": "25109:206:10",
													"nodeType": "YulBlock",
													"src": "25109:206:10",
													"statements": [
														{
															"nativeSrc": "25119:26:10",
															"nodeType": "YulAssignment",
															"src": "25119:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25131:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25131:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25142:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25142:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25127:3:10"
																},
																"nativeSrc": "25127:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25127:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25119:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25119:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25199:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25199:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25212:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25212:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25223:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25223:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25208:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25208:3:10"
																		},
																		"nativeSrc": "25208:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25208:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25155:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25155:43:10"
																},
																"nativeSrc": "25155:71:10",
																"nodeType": "YulFunctionCall",
																"src": "25155:71:10"
															},
															"nativeSrc": "25155:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "25155:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25280:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25280:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25293:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25293:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25304:2:10",
																				"nodeType": "YulLiteral",
																				"src": "25304:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25289:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25289:3:10"
																		},
																		"nativeSrc": "25289:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25289:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "25236:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25236:43:10"
																},
																"nativeSrc": "25236:72:10",
																"nodeType": "YulFunctionCall",
																"src": "25236:72:10"
															},
															"nativeSrc": "25236:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "25236:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "24983:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25073:9:10",
														"nodeType": "YulTypedName",
														"src": "25073:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25085:6:10",
														"nodeType": "YulTypedName",
														"src": "25085:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25093:6:10",
														"nodeType": "YulTypedName",
														"src": "25093:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25104:4:10",
														"nodeType": "YulTypedName",
														"src": "25104:4:10",
														"type": ""
													}
												],
												"src": "24983:332:10"
											},
											{
												"body": {
													"nativeSrc": "25369:362:10",
													"nodeType": "YulBlock",
													"src": "25369:362:10",
													"statements": [
														{
															"nativeSrc": "25379:25:10",
															"nodeType": "YulAssignment",
															"src": "25379:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25402:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "25402:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25384:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "25384:17:10"
																},
																"nativeSrc": "25384:20:10",
																"nodeType": "YulFunctionCall",
																"src": "25384:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25379:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "25379:1:10"
																}
															]
														},
														{
															"nativeSrc": "25413:25:10",
															"nodeType": "YulAssignment",
															"src": "25413:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25436:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "25436:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25418:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "25418:17:10"
																},
																"nativeSrc": "25418:20:10",
																"nodeType": "YulFunctionCall",
																"src": "25418:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25413:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "25413:1:10"
																}
															]
														},
														{
															"nativeSrc": "25447:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "25447:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25470:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "25470:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25473:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "25473:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "25466:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25466:3:10"
																},
																"nativeSrc": "25466:9:10",
																"nodeType": "YulFunctionCall",
																"src": "25466:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "25451:11:10",
																	"nodeType": "YulTypedName",
																	"src": "25451:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25484:41:10",
															"nodeType": "YulAssignment",
															"src": "25484:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "25513:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "25513:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25495:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "25495:17:10"
																},
																"nativeSrc": "25495:30:10",
																"nodeType": "YulFunctionCall",
																"src": "25495:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "25484:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "25484:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25702:22:10",
																"nodeType": "YulBlock",
																"src": "25702:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25704:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "25704:16:10"
																			},
																			"nativeSrc": "25704:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "25704:18:10"
																		},
																		"nativeSrc": "25704:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "25704:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "25635:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "25635:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "25628:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "25628:6:10"
																				},
																				"nativeSrc": "25628:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25628:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "25658:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "25658:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "25665:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "25665:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "25674:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "25674:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "25661:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "25661:3:10"
																						},
																						"nativeSrc": "25661:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "25661:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "25655:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "25655:2:10"
																				},
																				"nativeSrc": "25655:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "25655:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "25608:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "25608:2:10"
																		},
																		"nativeSrc": "25608:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25608:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25588:6:10"
																},
																"nativeSrc": "25588:113:10",
																"nodeType": "YulFunctionCall",
																"src": "25588:113:10"
															},
															"nativeSrc": "25585:139:10",
															"nodeType": "YulIf",
															"src": "25585:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "25321:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25352:1:10",
														"nodeType": "YulTypedName",
														"src": "25352:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25355:1:10",
														"nodeType": "YulTypedName",
														"src": "25355:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "25361:7:10",
														"nodeType": "YulTypedName",
														"src": "25361:7:10",
														"type": ""
													}
												],
												"src": "25321:410:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$1280(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$1280(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$1280(value)\n    }\n\n    function convert_t_enum$_Status_$1280_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$1280(value)\n    }\n\n    function abi_encode_t_enum$_Status_$1280_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$1280_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_enum$_Status_$1280_t_address_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint8_t_address_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_enum$_Status_$1280_to_t_uint8_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid input\")\n\n    }\n\n    function abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid status\")\n\n    }\n\n    function abi_encode_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Item not repairable\")\n\n    }\n\n    function abi_encode_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$1280_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_enum$_Status_$1280_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061023b575f3560e01c80638287662c11610139578063b8fe58e4116100b6578063d547741f1161007a578063d547741f146106c0578063d8101dcd146106dc578063dd62ed3e146106f8578063ed276caf14610728578063f0dda65c146107465761023b565b8063b8fe58e41461062a578063be65131614610648578063bf31377814610666578063c53b4b0914610684578063cb963a39146106a25761023b565b8063990281b8116100fd578063990281b8146105865780639ca39ae9146105a2578063a217fddf146105c0578063a73f7f8a146105de578063a9059cbb146105fa5761023b565b80638287662c146104e4578063855c72fb14610500578063918106741461051c57806391d148541461053857806395d89b41146105685761023b565b8063313ce567116101c757806365258b661161018b57806365258b661461043c5780636d6d00ed1461045a57806370a082311461047857806374e4d700146104a857806375b238fc146104c65761023b565b8063313ce567146103ac578063352b6dc3146103ca5780633609a1eb146103e657806336568abe14610402578063579108f71461041e5761023b565b80630f555c541161020e5780630f555c54146102f457806318160ddd1461031257806323b872dd14610330578063248a9ca3146103605780632f2ff15d146103905761023b565b806301ffc9a71461023f57806306fdde031461026f578063091929c01461028d578063095ea7b3146102c4575b5f80fd5b61025960048036038101906102549190612852565b610762565b6040516102669190612897565b60405180910390f35b6102776107db565b6040516102849190612920565b60405180910390f35b6102a760048036038101906102a29190612973565b61086b565b6040516102bb989796959493929190612a5f565b60405180910390f35b6102de60048036038101906102d99190612b0c565b61098d565b6040516102eb9190612897565b60405180910390f35b6102fc6109af565b6040516103099190612b4a565b60405180910390f35b61031a6109bb565b6040516103279190612b4a565b60405180910390f35b61034a60048036038101906103459190612b63565b6109c4565b6040516103579190612897565b60405180910390f35b61037a60048036038101906103759190612be6565b6109f2565b6040516103879190612c20565b60405180910390f35b6103aa60048036038101906103a59190612c39565b610a0f565b005b6103b4610a31565b6040516103c19190612c92565b60405180910390f35b6103e460048036038101906103df9190612e01565b610a39565b005b61040060048036038101906103fb9190612973565b610c93565b005b61041c60048036038101906104179190612c39565b610e34565b005b610426610eaf565b6040516104339190612c20565b60405180910390f35b610444610ed3565b6040516104519190612b4a565b60405180910390f35b610462610ede565b60405161046f9190612b4a565b60405180910390f35b610492600480360381019061048d9190612e81565b610ee4565b60405161049f9190612b4a565b60405180910390f35b6104b0610f29565b6040516104bd9190612b4a565b60405180910390f35b6104ce610f35565b6040516104db9190612c20565b60405180910390f35b6104fe60048036038101906104f99190612973565b610f59565b005b61051a60048036038101906105159190612973565b6110fb565b005b61053660048036038101906105319190612973565b6112ec565b005b610552600480360381019061054d9190612c39565b61148e565b60405161055f9190612897565b60405180910390f35b6105706114f2565b60405161057d9190612920565b60405180910390f35b6105a0600480360381019061059b9190612973565b611582565b005b6105aa611718565b6040516105b79190612c20565b60405180910390f35b6105c861173c565b6040516105d59190612c20565b60405180910390f35b6105f860048036038101906105f39190612eac565b611742565b005b610614600480360381019061060f9190612b0c565b61177b565b6040516106219190612897565b60405180910390f35b61063261179d565b60405161063f9190612b4a565b60405180910390f35b6106506117a9565b60405161065d9190612c20565b60405180910390f35b61066e6117cd565b60405161067b9190612c20565b60405180910390f35b61068c6117f1565b6040516106999190612b4a565b60405180910390f35b6106aa6117fd565b6040516106b79190612b4a565b60405180910390f35b6106da60048036038101906106d59190612c39565b611809565b005b6106f660048036038101906106f19190612973565b61182b565b005b610712600480360381019061070d9190612eea565b6119d6565b60405161071f9190612b4a565b60405180910390f35b610730611a58565b60405161073d9190612b4a565b60405180910390f35b610760600480360381019061075b9190612b0c565b611a64565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107d457506107d382611a9d565b5b9050919050565b6060600380546107ea90612f55565b80601f016020809104026020016040519081016040528092919081815260200182805461081690612f55565b80156108615780601f1061083857610100808354040283529160200191610861565b820191905f5260205f20905b81548152906001019060200180831161084457829003601f168201915b5050505050905090565b6006602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546108b590612f55565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190612f55565b801561092c5780601f106109035761010080835404028352916020019161092c565b820191905f5260205f20905b81548152906001019060200180831161090f57829003601f168201915b505050505090806003015490806004015490806005015f9054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160159054906101000a900460ff16905088565b5f80610997611b06565b90506109a4818585611b0d565b600191505092915050565b670de0b6b3a764000081565b5f600254905090565b5f806109ce611b06565b90506109db858285611b1f565b6109e6858585611bb2565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b610a18826109f2565b610a2181611ca2565b610a2b8383611cb6565b50505050565b5f6012905090565b5f82118015610a4757505f83115b610a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7d90612fcf565b60405180910390fd5b5f60075f815480929190610a999061301a565b9190505590506040518061010001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020015f6006811115610af257610af16129ec565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff16815260200183151581525060065f8381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610b8d91906131fe565b50606082015181600301556080820151816004015560a0820151816005015f6101000a81548160ff02191690836006811115610bcc57610bcb6129ec565b5b021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160050160156101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f46d5e1fa50133f2ad2b0346ff4a3f42484fe3bb406c6c15fd7ae095d10b125818587604051610c849291906132cd565b60405180910390a35050505050565b7f14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d2610cbd81611ca2565b5f6006811115610cd057610ccf6129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff166006811115610d0357610d026129ec565b5b14610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a9061333e565b60405180910390fd5b600160065f8481526020019081526020015f206005015f6101000a81548160ff02191690836006811115610d7a57610d796129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f610dde836001611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837f2a18ae28442ec525b81831921d81b734ce7861d68a812e4546c7945075766f1d83604051610e279190612b4a565b60405180910390a3505050565b610e3c611b06565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ea0576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610eaa8282611e25565b505050565b7fb636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c75581565b662386f26fc1000081565b60075481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b678ac7230489e8000081565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b7fab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e7610f8381611ca2565b60026006811115610f9757610f966129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff166006811115610fca57610fc96129ec565b5b1461100a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110019061333e565b60405180910390fd5b600360065f8481526020019081526020015f206005015f6101000a81548160ff02191690836006811115611041576110406129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6110a5836003611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837fe5e46d59e99676fbf7547ce5cc7583dc849e2af037032e0f6611224b75bb8967836040516110ee9190612b4a565b60405180910390a3505050565b7f11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd15461112581611ca2565b60016006811115611139576111386129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff16600681111561116c5761116b6129ec565b5b14806111bc575060036006811115611187576111866129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff1660068111156111ba576111b96129ec565b5b145b6111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f29061333e565b60405180910390fd5b600460065f8481526020019081526020015f206005015f6101000a81548160ff02191690836006811115611232576112316129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f611296836004611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837f3f0bdd39c575256b0686bbbc300a04a9c5828c01f9cc42a0179879b48b8eeddf836040516112df9190612b4a565b60405180910390a3505050565b7fb636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c75561131681611ca2565b6004600681111561132a576113296129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff16600681111561135d5761135c6129ec565b5b1461139d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113949061333e565b60405180910390fd5b600560065f8481526020019081526020015f206005015f6101000a81548160ff021916908360068111156113d4576113d36129ec565b5b02179055503360065f8481526020019081526020015f2060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f611438836005611da0565b90503373ffffffffffffffffffffffffffffffffffffffff16837f77b29112f6bbaf1890ec3f52fb1f9ef0367e0babd3bcb3aa7d123b7a7734a54c836040516114819190612b4a565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461150190612f55565b80601f016020809104026020016040519081016040528092919081815260200182805461152d90612f55565b80156115785780601f1061154f57610100808354040283529160200191611578565b820191905f5260205f20905b81548152906001019060200180831161155b57829003601f168201915b5050505050905090565b7f14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d26115ac81611ca2565b600160068111156115c0576115bf6129ec565b5b60065f8481526020019081526020015f206005015f9054906101000a900460ff1660068111156115f3576115f26129ec565b5b14611633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162a9061333e565b60405180910390fd5b60065f8381526020019081526020015f2060050160159054906101000a900460ff16611694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168b906133a6565b60405180910390fd5b600260065f8481526020019081526020015f206005015f6101000a81548160ff021916908360068111156116cb576116ca6129ec565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff16827fd0ff3b517d0c850b614729642e089a59aea81eb4ba36827eafe9b43b404da0d760405160405180910390a35050565b7f14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d281565b5f801b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561176c81611ca2565b6117768284610a0f565b505050565b5f80611785611b06565b9050611792818585611bb2565b600191505092915050565b676f05b59d3b20000081565b7fab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e781565b7f11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd15481565b676124fee993bc000081565b674563918244f4000081565b611812826109f2565b61181b81611ca2565b6118258383611e25565b50505050565b6005600681111561183f5761183e6129ec565b5b60065f8381526020019081526020015f206005015f9054906101000a900460ff166006811115611872576118716129ec565b5b146118b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a99061333e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660065f8381526020019081526020015f2060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194b9061340e565b60405180910390fd5b6006805f8381526020019081526020015f206005015f6101000a81548160ff0219169083600681111561198a576119896129ec565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff16817f278ab484a5db5fc05f3a869b94767b4a630943a85f774aa97a69aedb086c269c60405160405180910390a350565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6753444835ec58000081565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775611a8e81611ca2565b611a988383611f0f565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b611b1a8383836001611f8e565b505050565b5f611b2a84846119d6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015611bac5781811015611b9d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611b949392919061342c565b60405180910390fd5b611bab84848484035f611f8e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c22575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611c199190613461565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c92575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c899190613461565b60405180910390fd5b611c9d83838361215d565b505050565b611cb381611cae611b06565b612376565b50565b5f611cc1838361148e565b611d9657600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611d33611b06565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611d9a565b5f90505b92915050565b5f805f80611dae86866123c7565b9250925092505f818385611dc2919061347a565b611dcc919061347a565b9050611dd83382611f0f565b867f8841d639ba79954a7c240dde37b5d6e3990383dc2f87c13e288e408108efb4578786868686604051611e109594939291906134ad565b60405180910390a28094505050505092915050565b5f611e30838361148e565b15611f05575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611ea2611b06565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611f09565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f7f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611f769190613461565b60405180910390fd5b611f8a5f838361215d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611ffe575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ff59190613461565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361206e575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016120659190613461565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015612157578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161214e9190612b4a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121ad578060025f8282546121a1919061347a565b9250508190555061227b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612236578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161222d9392919061342c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036122c2578060025f828254039250508190555061230c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516123699190612b4a565b60405180910390a3505050565b612380828261148e565b6123c35780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016123ba9291906134fe565b60405180910390fd5b5050565b5f805f8060065f8781526020019081526020015f20604051806101000160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461245690612f55565b80601f016020809104026020016040519081016040528092919081815260200182805461248290612f55565b80156124cd5780601f106124a4576101008083540402835291602001916124cd565b820191905f5260205f20905b8154815290600101906020018083116124b057829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015f9054906101000a900460ff16600681111561250e5761250d6129ec565b5b60068111156125205761251f6129ec565b5b81526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160159054906101000a900460ff16151515158152505090505f60068111156125aa576125a96129ec565b5b8560068111156125bd576125bc6129ec565b5b036125d257678ac7230489e8000093506126c2565b600160068111156125e6576125e56129ec565b5b8560068111156125f9576125f86129ec565b5b0361260e57674563918244f4000093506126c1565b60036006811115612622576126216129ec565b5b856006811115612635576126346129ec565b5b0361264a57676f05b59d3b20000093506126c0565b6004600681111561265e5761265d6129ec565b5b856006811115612671576126706129ec565b5b0361268657676124fee993bc000093506126bf565b6005600681111561269a576126996129ec565b5b8560068111156126ad576126ac6129ec565b5b036126be576753444835ec58000093505b5b5b5b5b8060800151670de0b6b3a76400006126da9190613525565b9250600360068111156126f0576126ef6129ec565b5b856006811115612703576127026129ec565b5b0361271c576002836127159190613525565b92506127e4565b600460068111156127305761272f6129ec565b5b856006811115612743576127426129ec565b5b036127725760028160600151662386f26fc100006127619190613525565b61276b9190613525565b91506127e3565b60056006811115612786576127856129ec565b5b856006811115612799576127986129ec565b5b036127c85760038160600151662386f26fc100006127b79190613525565b6127c19190613525565b91506127e2565b8060600151662386f26fc100006127df9190613525565b91505b5b5b509250925092565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612831816127fd565b811461283b575f80fd5b50565b5f8135905061284c81612828565b92915050565b5f60208284031215612867576128666127f5565b5b5f6128748482850161283e565b91505092915050565b5f8115159050919050565b6128918161287d565b82525050565b5f6020820190506128aa5f830184612888565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6128f2826128b0565b6128fc81856128ba565b935061290c8185602086016128ca565b612915816128d8565b840191505092915050565b5f6020820190508181035f83015261293881846128e8565b905092915050565b5f819050919050565b61295281612940565b811461295c575f80fd5b50565b5f8135905061296d81612949565b92915050565b5f60208284031215612988576129876127f5565b5b5f6129958482850161295f565b91505092915050565b6129a781612940565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6129d6826129ad565b9050919050565b6129e6816129cc565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60078110612a2a57612a296129ec565b5b50565b5f819050612a3a82612a19565b919050565b5f612a4982612a2d565b9050919050565b612a5981612a3f565b82525050565b5f61010082019050612a735f83018b61299e565b612a80602083018a6129dd565b8181036040830152612a9281896128e8565b9050612aa1606083018861299e565b612aae608083018761299e565b612abb60a0830186612a50565b612ac860c08301856129dd565b612ad560e0830184612888565b9998505050505050505050565b612aeb816129cc565b8114612af5575f80fd5b50565b5f81359050612b0681612ae2565b92915050565b5f8060408385031215612b2257612b216127f5565b5b5f612b2f85828601612af8565b9250506020612b408582860161295f565b9150509250929050565b5f602082019050612b5d5f83018461299e565b92915050565b5f805f60608486031215612b7a57612b796127f5565b5b5f612b8786828701612af8565b9350506020612b9886828701612af8565b9250506040612ba98682870161295f565b9150509250925092565b5f819050919050565b612bc581612bb3565b8114612bcf575f80fd5b50565b5f81359050612be081612bbc565b92915050565b5f60208284031215612bfb57612bfa6127f5565b5b5f612c0884828501612bd2565b91505092915050565b612c1a81612bb3565b82525050565b5f602082019050612c335f830184612c11565b92915050565b5f8060408385031215612c4f57612c4e6127f5565b5b5f612c5c85828601612bd2565b9250506020612c6d85828601612af8565b9150509250929050565b5f60ff82169050919050565b612c8c81612c77565b82525050565b5f602082019050612ca55f830184612c83565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612ce9826128d8565b810181811067ffffffffffffffff82111715612d0857612d07612cb3565b5b80604052505050565b5f612d1a6127ec565b9050612d268282612ce0565b919050565b5f67ffffffffffffffff821115612d4557612d44612cb3565b5b612d4e826128d8565b9050602081019050919050565b828183375f83830152505050565b5f612d7b612d7684612d2b565b612d11565b905082815260208101848484011115612d9757612d96612caf565b5b612da2848285612d5b565b509392505050565b5f82601f830112612dbe57612dbd612cab565b5b8135612dce848260208601612d69565b91505092915050565b612de08161287d565b8114612dea575f80fd5b50565b5f81359050612dfb81612dd7565b92915050565b5f805f8060808587031215612e1957612e186127f5565b5b5f85013567ffffffffffffffff811115612e3657612e356127f9565b5b612e4287828801612daa565b9450506020612e538782880161295f565b9350506040612e648782880161295f565b9250506060612e7587828801612ded565b91505092959194509250565b5f60208284031215612e9657612e956127f5565b5b5f612ea384828501612af8565b91505092915050565b5f8060408385031215612ec257612ec16127f5565b5b5f612ecf85828601612af8565b9250506020612ee085828601612bd2565b9150509250929050565b5f8060408385031215612f0057612eff6127f5565b5b5f612f0d85828601612af8565b9250506020612f1e85828601612af8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612f6c57607f821691505b602082108103612f7f57612f7e612f28565b5b50919050565b7f496e76616c696420696e707574000000000000000000000000000000000000005f82015250565b5f612fb9600d836128ba565b9150612fc482612f85565b602082019050919050565b5f6020820190508181035f830152612fe681612fad565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61302482612940565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361305657613055612fed565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026130bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613082565b6130c78683613082565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6131026130fd6130f884612940565b6130df565b612940565b9050919050565b5f819050919050565b61311b836130e8565b61312f61312782613109565b84845461308e565b825550505050565b5f90565b613143613137565b61314e818484613112565b505050565b5b81811015613171576131665f8261313b565b600181019050613154565b5050565b601f8211156131b65761318781613061565b61319084613073565b8101602085101561319f578190505b6131b36131ab85613073565b830182613153565b50505b505050565b5f82821c905092915050565b5f6131d65f19846008026131bb565b1980831691505092915050565b5f6131ee83836131c7565b9150826002028217905092915050565b613207826128b0565b67ffffffffffffffff8111156132205761321f612cb3565b5b61322a8254612f55565b613235828285613175565b5f60209050601f831160018114613266575f8415613254578287015190505b61325e85826131e3565b8655506132c5565b601f19841661327486613061565b5f5b8281101561329b57848901518255600182019150602085019450602081019050613276565b868310156132b857848901516132b4601f8916826131c7565b8355505b6001600288020188555050505b505050505050565b5f6040820190506132e05f83018561299e565b6132ed602083018461299e565b9392505050565b7f496e76616c6964207374617475730000000000000000000000000000000000005f82015250565b5f613328600e836128ba565b9150613333826132f4565b602082019050919050565b5f6020820190508181035f8301526133558161331c565b9050919050565b7f4974656d206e6f742072657061697261626c65000000000000000000000000005f82015250565b5f6133906013836128ba565b915061339b8261335c565b602082019050919050565b5f6020820190508181035f8301526133bd81613384565b9050919050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f6133f86009836128ba565b9150613403826133c4565b602082019050919050565b5f6020820190508181035f830152613425816133ec565b9050919050565b5f60608201905061343f5f8301866129dd565b61344c602083018561299e565b613459604083018461299e565b949350505050565b5f6020820190506134745f8301846129dd565b92915050565b5f61348482612940565b915061348f83612940565b92508282019050808211156134a7576134a6612fed565b5b92915050565b5f60a0820190506134c05f830188612a50565b6134cd602083018761299e565b6134da604083018661299e565b6134e7606083018561299e565b6134f4608083018461299e565b9695505050505050565b5f6040820190506135115f8301856129dd565b61351e6020830184612c11565b9392505050565b5f61352f82612940565b915061353a83612940565b925082820261354881612940565b9150828204841483151761355f5761355e612fed565b5b509291505056fea26469706673582212206a3b36be9c963f420118913ea278407b2192d57099bd528afdb38c5e58591f2e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8287662C GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xB8FE58E4 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xD8101DCD EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xED276CAF EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x746 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0xB8FE58E4 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xBE651316 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xBF313778 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xC53B4B09 EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xCB963A39 EQ PUSH2 0x6A2 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x990281B8 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x990281B8 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x9CA39AE9 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xA73F7F8A EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5FA JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x8287662C EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x855C72FB EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x91810674 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x568 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x65258B66 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x65258B66 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x6D6D00ED EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x74E4D700 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x4C6 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x352B6DC3 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x3609A1EB EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x579108F7 EQ PUSH2 0x41E JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0xF555C54 GT PUSH2 0x20E JUMPI DUP1 PUSH4 0xF555C54 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x390 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x91929C0 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2C92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0xA39 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0xF59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x536 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x12EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x552 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x570 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x1582 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AA PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C8 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x2EAC JUMP JUMPDEST PUSH2 0x1742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x177B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x632 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x650 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66E PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68C PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AA PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x182B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x2EEA JUMP JUMPDEST PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71F SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x730 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73D SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x760 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1A64 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7D4 JUMPI POP PUSH2 0x7D3 DUP3 PUSH2 0x1A9D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x7EA SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x816 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x861 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x838 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x861 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x844 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x8B5 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E1 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x903 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x997 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A4 DUP2 DUP6 DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9CE PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x9DB DUP6 DUP3 DUP6 PUSH2 0x1B1F JUMP JUMPDEST PUSH2 0x9E6 DUP6 DUP6 DUP6 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA18 DUP3 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xA21 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0xA2B DUP4 DUP4 PUSH2 0x1CB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xA47 JUMPI POP PUSH0 DUP4 GT JUMPDEST PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7D SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA99 SWAP1 PUSH2 0x301A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x31FE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x46D5E1FA50133F2AD2B0346FF4A3F42484FE3BB406C6C15FD7AE095D10B12581 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC84 SWAP3 SWAP2 SWAP1 PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2 PUSH2 0xCBD DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD79 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0xDDE DUP4 PUSH1 0x1 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2A18AE28442EC525B81831921D81B734CE7861D68A812E4546C7945075766F1D DUP4 PUSH1 0x40 MLOAD PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE3C PUSH2 0x1B06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP3 DUP3 PUSH2 0x1E25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xB636CAC4A39CBEE3063D40395F1623A30746F1C8BC201CED0489C50A6345C755 DUP2 JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH32 0xAB5C443DD93B1877C3B155B5E3DDB79CB901FD6F9D2E3BD366F3216A80B889E7 PUSH2 0xF83 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xFCA JUMPI PUSH2 0xFC9 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x10A5 DUP4 PUSH1 0x3 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xE5E46D59E99676FBF7547CE5CC7583DC849E2AF037032E0F6611224B75BB8967 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x11D2C681BC9C10ED61F9A422C0DBAADDC4054CE58EC726ACA73E7E4D31BCD154 PUSH2 0x1125 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x11BC JUMPI POP PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1186 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x11BA JUMPI PUSH2 0x11B9 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x11FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F2 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1232 JUMPI PUSH2 0x1231 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1296 DUP4 PUSH1 0x4 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x3F0BDD39C575256B0686BBBC300A04A9C5828C01F9CC42A0179879B48B8EEDDF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xB636CAC4A39CBEE3063D40395F1623A30746F1C8BC201CED0489C50A6345C755 PUSH2 0x1316 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x132A JUMPI PUSH2 0x1329 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x139D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1394 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x1438 DUP4 PUSH1 0x5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x77B29112F6BBAF1890EC3F52FB1F9EF0367E0BABD3BCB3AA7D123B7A7734A54C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1501 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x152D SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x154F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x155B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2 PUSH2 0x15AC DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1633 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162A SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168B SWAP1 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CA PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xD0FF3B517D0C850B614729642E089A59AEA81EB4BA36827EAFE9B43B404DA0D7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x176C DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1776 DUP3 DUP5 PUSH2 0xA0F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1785 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP PUSH2 0x1792 DUP2 DUP6 DUP6 PUSH2 0x1BB2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x6F05B59D3B200000 DUP2 JUMP JUMPDEST PUSH32 0xAB5C443DD93B1877C3B155B5E3DDB79CB901FD6F9D2E3BD366F3216A80B889E7 DUP2 JUMP JUMPDEST PUSH32 0x11D2C681BC9C10ED61F9A422C0DBAADDC4054CE58EC726ACA73E7E4D31BCD154 DUP2 JUMP JUMPDEST PUSH8 0x6124FEE993BC0000 DUP2 JUMP JUMPDEST PUSH8 0x4563918244F40000 DUP2 JUMP JUMPDEST PUSH2 0x1812 DUP3 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1825 DUP4 DUP4 PUSH2 0x1E25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1872 JUMPI PUSH2 0x1871 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A9 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1954 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194B SWAP1 PUSH2 0x340E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x198A JUMPI PUSH2 0x1989 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x278AB484A5DB5FC05F3A869B94767B4A630943A85F774AA97A69AEDB086C269C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0x53444835EC580000 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x1A8E DUP2 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1A98 DUP4 DUP4 PUSH2 0x1F0F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1F8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2A DUP5 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1BAC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1B9D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x342C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BAB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C22 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C19 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C9D DUP4 DUP4 DUP4 PUSH2 0x215D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1CAE PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC1 DUP4 DUP4 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x1D96 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1D33 PUSH2 0x1B06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D9A JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1DAE DUP7 DUP7 PUSH2 0x23C7 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 DUP2 DUP4 DUP6 PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x347A JUMP JUMPDEST PUSH2 0x1DCC SWAP2 SWAP1 PUSH2 0x347A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DD8 CALLER DUP3 PUSH2 0x1F0F JUMP JUMPDEST DUP7 PUSH32 0x8841D639BA79954A7C240DDE37B5D6E3990383DC2F87C13E288E408108EFB457 DUP8 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1E10 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E30 DUP4 DUP4 PUSH2 0x148E JUMP JUMPDEST ISZERO PUSH2 0x1F05 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EA2 PUSH2 0x1B06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F09 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F76 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F8A PUSH0 DUP4 DUP4 PUSH2 0x215D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FFE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF5 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x206E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2065 SWAP2 SWAP1 PUSH2 0x3461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2157 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x214E SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21AD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21A1 SWAP2 SWAP1 PUSH2 0x347A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x227B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2236 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x342C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22C2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x230C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2369 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2380 DUP3 DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x23C3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23BA SWAP3 SWAP2 SWAP1 PUSH2 0x34FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2456 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2482 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x250E JUMPI PUSH2 0x250D PUSH2 0x29EC JUMP JUMPDEST JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2520 JUMPI PUSH2 0x251F PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25AA JUMPI PUSH2 0x25A9 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25BD JUMPI PUSH2 0x25BC PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25D2 JUMPI PUSH8 0x8AC7230489E80000 SWAP4 POP PUSH2 0x26C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25E6 JUMPI PUSH2 0x25E5 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x260E JUMPI PUSH8 0x4563918244F40000 SWAP4 POP PUSH2 0x26C1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2622 JUMPI PUSH2 0x2621 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2635 JUMPI PUSH2 0x2634 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x264A JUMPI PUSH8 0x6F05B59D3B200000 SWAP4 POP PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x265E JUMPI PUSH2 0x265D PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2671 JUMPI PUSH2 0x2670 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2686 JUMPI PUSH8 0x6124FEE993BC0000 SWAP4 POP PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x269A JUMPI PUSH2 0x2699 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x26AD JUMPI PUSH2 0x26AC PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x26BE JUMPI PUSH8 0x53444835EC580000 SWAP4 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x26DA SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x26F0 JUMPI PUSH2 0x26EF PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2703 JUMPI PUSH2 0x2702 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x271C JUMPI PUSH1 0x2 DUP4 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP3 POP PUSH2 0x27E4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2730 JUMPI PUSH2 0x272F PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2743 JUMPI PUSH2 0x2742 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2772 JUMPI PUSH1 0x2 DUP2 PUSH1 0x60 ADD MLOAD PUSH7 0x2386F26FC10000 PUSH2 0x2761 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x276B SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2786 JUMPI PUSH2 0x2785 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2799 JUMPI PUSH2 0x2798 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x27C8 JUMPI PUSH1 0x3 DUP2 PUSH1 0x60 ADD MLOAD PUSH7 0x2386F26FC10000 PUSH2 0x27B7 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x27C1 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E2 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH7 0x2386F26FC10000 PUSH2 0x27DF SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2831 DUP2 PUSH2 0x27FD JUMP JUMPDEST DUP2 EQ PUSH2 0x283B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x284C DUP2 PUSH2 0x2828 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2867 JUMPI PUSH2 0x2866 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2874 DUP5 DUP3 DUP6 ADD PUSH2 0x283E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2891 DUP2 PUSH2 0x287D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28AA PUSH0 DUP4 ADD DUP5 PUSH2 0x2888 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28F2 DUP3 PUSH2 0x28B0 JUMP JUMPDEST PUSH2 0x28FC DUP2 DUP6 PUSH2 0x28BA JUMP JUMPDEST SWAP4 POP PUSH2 0x290C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28CA JUMP JUMPDEST PUSH2 0x2915 DUP2 PUSH2 0x28D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2938 DUP2 DUP5 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2952 DUP2 PUSH2 0x2940 JUMP JUMPDEST DUP2 EQ PUSH2 0x295C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x296D DUP2 PUSH2 0x2949 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2995 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29A7 DUP2 PUSH2 0x2940 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29D6 DUP3 PUSH2 0x29AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E6 DUP2 PUSH2 0x29CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x2A2A JUMPI PUSH2 0x2A29 PUSH2 0x29EC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2A3A DUP3 PUSH2 0x2A19 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A49 DUP3 PUSH2 0x2A2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A59 DUP2 PUSH2 0x2A3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2A73 PUSH0 DUP4 ADD DUP12 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x2A80 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x29DD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2A92 DUP2 DUP10 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA1 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x2AAE PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x2ABB PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2A50 JUMP JUMPDEST PUSH2 0x2AC8 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x2AD5 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2888 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AEB DUP2 PUSH2 0x29CC JUMP JUMPDEST DUP2 EQ PUSH2 0x2AF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B06 DUP2 PUSH2 0x2AE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x2B21 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B2F DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B40 DUP6 DUP3 DUP7 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B5D PUSH0 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B7A JUMPI PUSH2 0x2B79 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B87 DUP7 DUP3 DUP8 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B98 DUP7 DUP3 DUP8 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BA9 DUP7 DUP3 DUP8 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC5 DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE0 DUP2 PUSH2 0x2BBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFB JUMPI PUSH2 0x2BFA PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C08 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C1A DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C33 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C4F JUMPI PUSH2 0x2C4E PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C5C DUP6 DUP3 DUP7 ADD PUSH2 0x2BD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C6D DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C8C DUP2 PUSH2 0x2C77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2CE9 DUP3 PUSH2 0x28D8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D08 JUMPI PUSH2 0x2D07 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D1A PUSH2 0x27EC JUMP JUMPDEST SWAP1 POP PUSH2 0x2D26 DUP3 DUP3 PUSH2 0x2CE0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D45 JUMPI PUSH2 0x2D44 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST PUSH2 0x2D4E DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B PUSH2 0x2D76 DUP5 PUSH2 0x2D2B JUMP JUMPDEST PUSH2 0x2D11 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D97 JUMPI PUSH2 0x2D96 PUSH2 0x2CAF JUMP JUMPDEST JUMPDEST PUSH2 0x2DA2 DUP5 DUP3 DUP6 PUSH2 0x2D5B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DBE JUMPI PUSH2 0x2DBD PUSH2 0x2CAB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DCE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DE0 DUP2 PUSH2 0x287D JUMP JUMPDEST DUP2 EQ PUSH2 0x2DEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DFB DUP2 PUSH2 0x2DD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E19 JUMPI PUSH2 0x2E18 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E36 JUMPI PUSH2 0x2E35 PUSH2 0x27F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2E42 DUP8 DUP3 DUP9 ADD PUSH2 0x2DAA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2E53 DUP8 DUP3 DUP9 ADD PUSH2 0x295F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2E64 DUP8 DUP3 DUP9 ADD PUSH2 0x295F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2E75 DUP8 DUP3 DUP9 ADD PUSH2 0x2DED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E96 JUMPI PUSH2 0x2E95 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EA3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EC2 JUMPI PUSH2 0x2EC1 PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2ECF DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2EE0 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F00 JUMPI PUSH2 0x2EFF PUSH2 0x27F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F0D DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1E DUP6 DUP3 DUP7 ADD PUSH2 0x2AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2F6C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2F7F JUMPI PUSH2 0x2F7E PUSH2 0x2F28 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB9 PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP3 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE6 DUP2 PUSH2 0x2FAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3024 DUP3 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3056 JUMPI PUSH2 0x3055 PUSH2 0x2FED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x30BD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3082 JUMP JUMPDEST PUSH2 0x30C7 DUP7 DUP4 PUSH2 0x3082 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3102 PUSH2 0x30FD PUSH2 0x30F8 DUP5 PUSH2 0x2940 JUMP JUMPDEST PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x2940 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x311B DUP4 PUSH2 0x30E8 JUMP JUMPDEST PUSH2 0x312F PUSH2 0x3127 DUP3 PUSH2 0x3109 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x308E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3143 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x314E DUP2 DUP5 DUP5 PUSH2 0x3112 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3171 JUMPI PUSH2 0x3166 PUSH0 DUP3 PUSH2 0x313B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3154 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x31B6 JUMPI PUSH2 0x3187 DUP2 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0x3190 DUP5 PUSH2 0x3073 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x319F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x31B3 PUSH2 0x31AB DUP6 PUSH2 0x3073 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3153 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31D6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x31BB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31EE DUP4 DUP4 PUSH2 0x31C7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3207 DUP3 PUSH2 0x28B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3220 JUMPI PUSH2 0x321F PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST PUSH2 0x322A DUP3 SLOAD PUSH2 0x2F55 JUMP JUMPDEST PUSH2 0x3235 DUP3 DUP3 DUP6 PUSH2 0x3175 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3266 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3254 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x325E DUP6 DUP3 PUSH2 0x31E3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x32C5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3274 DUP7 PUSH2 0x3061 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x329B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3276 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x32B8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x32B4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x31C7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x32ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420737461747573000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3328 PUSH1 0xE DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x3333 DUP3 PUSH2 0x32F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3355 DUP2 PUSH2 0x331C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F742072657061697261626C6500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3390 PUSH1 0x13 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x339B DUP3 PUSH2 0x335C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33BD DUP2 PUSH2 0x3384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33F8 PUSH1 0x9 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x3403 DUP3 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3425 DUP2 PUSH2 0x33EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x343F PUSH0 DUP4 ADD DUP7 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x344C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x3459 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3474 PUSH0 DUP4 ADD DUP5 PUSH2 0x29DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3484 DUP3 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP PUSH2 0x348F DUP4 PUSH2 0x2940 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x34A7 JUMPI PUSH2 0x34A6 PUSH2 0x2FED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x34C0 PUSH0 DUP4 ADD DUP9 PUSH2 0x2A50 JUMP JUMPDEST PUSH2 0x34CD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x34DA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x34E7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x34F4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3511 PUSH0 DUP4 ADD DUP6 PUSH2 0x29DD JUMP JUMPDEST PUSH2 0x351E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C11 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x352F DUP3 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP PUSH2 0x353A DUP4 PUSH2 0x2940 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3548 DUP2 PUSH2 0x2940 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x355F JUMPI PUSH2 0x355E PUSH2 0x2FED JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x3B36BE9C963F420118913E LOG2 PUSH25 0x407B2192D57099BD528AFDB38C5E58591F2E64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "179:7826:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1473:47:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3998:186:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;945:49:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2674:750:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3432:398;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;393:70:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1001:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1527:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;637:55:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;543:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4194:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4608:502;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5118:415;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3838:348:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;245:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7751:125:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;824:52:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;762:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;699:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5541:310:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:55:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7884:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:3:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;1473:47:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3998:186:3:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;945:49:9:-;987:7;945:49;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;2674:750:9:-;2858:1;2846:9;:13;:28;;;;;2873:1;2863:7;:11;2846:28;2838:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2913:13;2929:11;;:13;;;;;;;;;:::i;:::-;;;;;2913:29;;2973:298;;;;;;;;3002:5;2973:298;;;;3031:10;2973:298;;;;;;3066:9;2973:298;;;;3098:7;2973:298;;;;3130:9;2973:298;;;;3162:14;2973:298;;;;;;;;:::i;:::-;;;;;;3207:10;2973:298;;;;;;3246:13;2973:298;;;;;2953:10;:17;2964:5;2953:17;;;;;;;;;;;:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:10;3366:50;;3378:5;3366:50;3397:9;3408:7;3366:50;;;;;;;:::i;:::-;;;;;;;;2827:597;2674:750;;;;:::o;3432:398::-;286:27;2464:16:0;2475:4;2464:10;:16::i;:::-;3545:14:9::1;3519:40;;;;;;;;:::i;:::-;;:10;:15;3530:3;3519:15;;;;;;;;;;;:22;;;;;;;;;;;;:40;;;;;;;;:::i;:::-;;;3511:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3614:16;3589:10;:15;3600:3;3589:15;;;;;;;;;;;:22;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3674:10;3641;:15;3652:3;3641:15;;;;;;;;;;;:30;;;:43;;;;;;;;;;;;;;;;;;3705:14;3722:46;3746:3;3751:16;3722:23;:46::i;:::-;3705:63;;3803:10;3784:38;;3798:3;3784:38;3815:6;3784:38;;;;;;:::i;:::-;;;;;;;;3500:330;3432:398:::0;;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;393:70:9:-;435:28;393:70;:::o;1001:52::-;1043:10;1001:52;:::o;1527:26::-;;;;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;637:55:9:-;684:8;637:55;:::o;543:60::-;580:23;543:60;:::o;4194:406::-;510:26;2464:16:0;2475:4;2464:10;:16::i;:::-;4305:17:9::1;4279:43;;;;;;;;:::i;:::-;;:10;:15;4290:3;4279:15;;;;;;;;;;;:22;;;;;;;;;;;;:43;;;;;;;;:::i;:::-;;;4271:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4387:15;4362:10;:15;4373:3;4362:15;;;;;;;;;;;:22;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4446:10;4413;:15;4424:3;4413:15;;;;;;;;;;;:30;;;:43;;;;;;;;;;;;;;;;;;4477:14;4494:45;4518:3;4523:15;4494:23;:45::i;:::-;4477:62;;4573:10;4555:37;;4568:3;4555:37;4585:6;4555:37;;;;;;:::i;:::-;;;;;;;;4260:340;4194:406:::0;;:::o;4608:502::-;360:26;2464:16:0;2475:4;2464:10;:16::i;:::-;4734::9::1;4708:42;;;;;;;;:::i;:::-;;:10;:15;4719:3;4708:15;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;:101;;;;4794:15;4768:41;;;;;;;;:::i;:::-;;:10;:15;4779:3;4768:15;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;4708:101;4686:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;4897:15;4872:10;:15;4883:3;4872:15;;;;;;;;;;;:22;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4956:10;4923;:15;4934:3;4923:15;;;;;;;;;;;:30;;;:43;;;;;;;;;;;;;;;;;;4987:14;5004:45;5028:3;5033:15;5004:23;:45::i;:::-;4987:62;;5083:10;5065:37;;5078:3;5065:37;5095:6;5065:37;;;;;;:::i;:::-;;;;;;;;4675:435;4608:502:::0;;:::o;5118:415::-;435:28;2464:16:0;2475:4;2464:10;:16::i;:::-;5234:15:9::1;5208:41;;;;;;;;:::i;:::-;;:10;:15;5219:3;5208:15;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;5200:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5314:17;5289:10;:15;5300:3;5289:15;;;;;;;;;;;:22;;;:42;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5375:10;5342;:15;5353:3;5342:15;;;;;;;;;;;:30;;;:43;;;;;;;;;;;;;;;;;;5406:14;5423:47;5447:3;5452:17;5423:23;:47::i;:::-;5406:64;;5506:10;5486:39;;5501:3;5486:39;5518:6;5486:39;;;;;;:::i;:::-;;;;;;;;5189:344;5118:415:::0;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3838:348:9:-;286:27;2464:16:0;2475:4;2464:10;:16::i;:::-;3956::9::1;3930:42;;;;;;;;:::i;:::-;;:10;:15;3941:3;3930:15;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;3922:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4010:10;:15;4021:3;4010:15;;;;;;;;;;;:28;;;;;;;;;;;;4002:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4108:17;4083:10;:15;4094:3;4083:15;;;;;;;;;;;:22;;;:42;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4167:10;4141:37;;4162:3;4141:37;;;;;;;;;;3838:348:::0;;:::o;245:68::-;286:27;245:68;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;7751:125:9:-;580:23;2464:16:0;2475:4;2464:10;:16::i;:::-;7842:26:9::1;7852:5;7859:8;7842:9;:26::i;:::-;7751:125:::0;;;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;824:52:9:-;869:7;824:52;:::o;470:66::-;510:26;470:66;:::o;320:::-;360:26;320:66;:::o;762:55::-;810:7;762:55;:::o;699:56::-;748:7;699:56;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;5541:310:9:-;5628:17;5602:43;;;;;;;;:::i;:::-;;:10;:15;5613:3;5602:15;;;;;;;;;;;:22;;;;;;;;;;;;:43;;;;;;;;:::i;:::-;;;5594:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5717:10;5683:44;;:10;:15;5694:3;5683:15;;;;;;;;;;;:30;;;;;;;;;;;;:44;;;5675:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5787:13;5762:10;:15;5773:3;5762:15;;;;;;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5832:10;5816:27;;5827:3;5816:27;;;;;;;;;;5541:310;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;883:55:9:-;931:7;883:55;:::o;7884:118::-;580:23;2464:16:0;2475:4;2464:10;:16::i;:::-;7975:19:9::1;7981:3;7986:7;7975:5;:19::i;:::-;7884:118:::0;;;:::o;763:146:7:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;5907:516:9:-;5987:7;6008:12;6022:14;6038;6056:34;6077:3;6082:7;6056:20;:34::i;:::-;6007:83;;;;;;6101:19;6139:6;6130;6123:4;:13;;;;:::i;:::-;:22;;;;:::i;:::-;6101:44;;6166:30;6172:10;6184:11;6166:5;:30::i;:::-;6253:3;6222:154;6271:7;6293:4;6312:6;6333;6354:11;6222:154;;;;;;;;;;:::i;:::-;;;;;;;;6404:11;6397:18;;;;;;5907:516;;;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6431:1288:9:-;6523:18;6552:21;6584:19;6622:21;6646:10;:15;6657:3;6646:15;;;;;;;;;;;6622:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6697:14;6686:25;;;;;;;;:::i;:::-;;:7;:25;;;;;;;;:::i;:::-;;;6682:488;;684:8;6728:33;;6682:488;;;6794:16;6783:27;;;;;;;;:::i;:::-;;:7;:27;;;;;;;;:::i;:::-;;;6779:391;;748:7;6827:35;;6779:391;;;6895:15;6884:26;;;;;;;;:::i;:::-;;:7;:26;;;;;;;;:::i;:::-;;;6880:290;;869:7;6927:31;;6880:290;;;6991:15;6980:26;;;;;;;;:::i;:::-;;:7;:26;;;;;;;;:::i;:::-;;;6976:194;;810:7;7023:34;;6976:194;;;7090:17;7079:28;;;;;;;;:::i;:::-;;:7;:28;;;;;;;;:::i;:::-;;;7075:95;;931:7;7124:34;;7075:95;6976:194;6880:290;6779:391;6682:488;7216:4;:13;;;987:7;7198:31;;;;:::i;:::-;7182:47;;7316:15;7305:26;;;;;;;;:::i;:::-;;:7;:26;;;;;;;;:::i;:::-;;;7301:411;;7365:1;7348:18;;;;;:::i;:::-;;;7301:411;;;7427:15;7416:26;;;;;;;;:::i;:::-;;:7;:26;;;;;;;;:::i;:::-;;;7412:300;;7507:1;7492:4;:11;;;1043:10;7474:29;;;;:::i;:::-;7473:35;;;;:::i;:::-;7459:49;;7412:300;;;7541:17;7530:28;;;;;;;;:::i;:::-;;:7;:28;;;;;;;;:::i;:::-;;;7526:186;;7623:1;7608:4;:11;;;1043:10;7590:29;;;;:::i;:::-;7589:35;;;;:::i;:::-;7575:49;;7526:186;;;7689:4;:11;;;1043:10;7671:29;;;;:::i;:::-;7657:43;;7526:186;7412:300;7301:411;6611:1108;6431:1288;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:118::-;3531:24;3549:5;3531:24;:::i;:::-;3526:3;3519:37;3444:118;;:::o;3568:126::-;3605:7;3645:42;3638:5;3634:54;3623:65;;3568:126;;;:::o;3700:96::-;3737:7;3766:24;3784:5;3766:24;:::i;:::-;3755:35;;3700:96;;;:::o;3802:118::-;3889:24;3907:5;3889:24;:::i;:::-;3884:3;3877:37;3802:118;;:::o;3926:180::-;3974:77;3971:1;3964:88;4071:4;4068:1;4061:15;4095:4;4092:1;4085:15;4112:116;4196:1;4189:5;4186:12;4176:46;;4202:18;;:::i;:::-;4176:46;4112:116;:::o;4234:133::-;4282:7;4311:5;4300:16;;4317:44;4355:5;4317:44;:::i;:::-;4234:133;;;:::o;4373:::-;4432:9;4465:35;4494:5;4465:35;:::i;:::-;4452:48;;4373:133;;;:::o;4512:149::-;4608:46;4648:5;4608:46;:::i;:::-;4603:3;4596:59;4512:149;;:::o;4667:1094::-;4979:4;5017:3;5006:9;5002:19;4994:27;;5031:71;5099:1;5088:9;5084:17;5075:6;5031:71;:::i;:::-;5112:72;5180:2;5169:9;5165:18;5156:6;5112:72;:::i;:::-;5231:9;5225:4;5221:20;5216:2;5205:9;5201:18;5194:48;5259:78;5332:4;5323:6;5259:78;:::i;:::-;5251:86;;5347:72;5415:2;5404:9;5400:18;5391:6;5347:72;:::i;:::-;5429:73;5497:3;5486:9;5482:19;5473:6;5429:73;:::i;:::-;5512:82;5589:3;5578:9;5574:19;5565:6;5512:82;:::i;:::-;5604:73;5672:3;5661:9;5657:19;5648:6;5604:73;:::i;:::-;5687:67;5749:3;5738:9;5734:19;5725:6;5687:67;:::i;:::-;4667:1094;;;;;;;;;;;:::o;5767:122::-;5840:24;5858:5;5840:24;:::i;:::-;5833:5;5830:35;5820:63;;5879:1;5876;5869:12;5820:63;5767:122;:::o;5895:139::-;5941:5;5979:6;5966:20;5957:29;;5995:33;6022:5;5995:33;:::i;:::-;5895:139;;;;:::o;6040:474::-;6108:6;6116;6165:2;6153:9;6144:7;6140:23;6136:32;6133:119;;;6171:79;;:::i;:::-;6133:119;6291:1;6316:53;6361:7;6352:6;6341:9;6337:22;6316:53;:::i;:::-;6306:63;;6262:117;6418:2;6444:53;6489:7;6480:6;6469:9;6465:22;6444:53;:::i;:::-;6434:63;;6389:118;6040:474;;;;;:::o;6520:222::-;6613:4;6651:2;6640:9;6636:18;6628:26;;6664:71;6732:1;6721:9;6717:17;6708:6;6664:71;:::i;:::-;6520:222;;;;:::o;6748:619::-;6825:6;6833;6841;6890:2;6878:9;6869:7;6865:23;6861:32;6858:119;;;6896:79;;:::i;:::-;6858:119;7016:1;7041:53;7086:7;7077:6;7066:9;7062:22;7041:53;:::i;:::-;7031:63;;6987:117;7143:2;7169:53;7214:7;7205:6;7194:9;7190:22;7169:53;:::i;:::-;7159:63;;7114:118;7271:2;7297:53;7342:7;7333:6;7322:9;7318:22;7297:53;:::i;:::-;7287:63;;7242:118;6748:619;;;;;:::o;7373:77::-;7410:7;7439:5;7428:16;;7373:77;;;:::o;7456:122::-;7529:24;7547:5;7529:24;:::i;:::-;7522:5;7519:35;7509:63;;7568:1;7565;7558:12;7509:63;7456:122;:::o;7584:139::-;7630:5;7668:6;7655:20;7646:29;;7684:33;7711:5;7684:33;:::i;:::-;7584:139;;;;:::o;7729:329::-;7788:6;7837:2;7825:9;7816:7;7812:23;7808:32;7805:119;;;7843:79;;:::i;:::-;7805:119;7963:1;7988:53;8033:7;8024:6;8013:9;8009:22;7988:53;:::i;:::-;7978:63;;7934:117;7729:329;;;;:::o;8064:118::-;8151:24;8169:5;8151:24;:::i;:::-;8146:3;8139:37;8064:118;;:::o;8188:222::-;8281:4;8319:2;8308:9;8304:18;8296:26;;8332:71;8400:1;8389:9;8385:17;8376:6;8332:71;:::i;:::-;8188:222;;;;:::o;8416:474::-;8484:6;8492;8541:2;8529:9;8520:7;8516:23;8512:32;8509:119;;;8547:79;;:::i;:::-;8509:119;8667:1;8692:53;8737:7;8728:6;8717:9;8713:22;8692:53;:::i;:::-;8682:63;;8638:117;8794:2;8820:53;8865:7;8856:6;8845:9;8841:22;8820:53;:::i;:::-;8810:63;;8765:118;8416:474;;;;;:::o;8896:86::-;8931:7;8971:4;8964:5;8960:16;8949:27;;8896:86;;;:::o;8988:112::-;9071:22;9087:5;9071:22;:::i;:::-;9066:3;9059:35;8988:112;;:::o;9106:214::-;9195:4;9233:2;9222:9;9218:18;9210:26;;9246:67;9310:1;9299:9;9295:17;9286:6;9246:67;:::i;:::-;9106:214;;;;:::o;9326:117::-;9435:1;9432;9425:12;9449:117;9558:1;9555;9548:12;9572:180;9620:77;9617:1;9610:88;9717:4;9714:1;9707:15;9741:4;9738:1;9731:15;9758:281;9841:27;9863:4;9841:27;:::i;:::-;9833:6;9829:40;9971:6;9959:10;9956:22;9935:18;9923:10;9920:34;9917:62;9914:88;;;9982:18;;:::i;:::-;9914:88;10022:10;10018:2;10011:22;9801:238;9758:281;;:::o;10045:129::-;10079:6;10106:20;;:::i;:::-;10096:30;;10135:33;10163:4;10155:6;10135:33;:::i;:::-;10045:129;;;:::o;10180:308::-;10242:4;10332:18;10324:6;10321:30;10318:56;;;10354:18;;:::i;:::-;10318:56;10392:29;10414:6;10392:29;:::i;:::-;10384:37;;10476:4;10470;10466:15;10458:23;;10180:308;;;:::o;10494:148::-;10592:6;10587:3;10582;10569:30;10633:1;10624:6;10619:3;10615:16;10608:27;10494:148;;;:::o;10648:425::-;10726:5;10751:66;10767:49;10809:6;10767:49;:::i;:::-;10751:66;:::i;:::-;10742:75;;10840:6;10833:5;10826:21;10878:4;10871:5;10867:16;10916:3;10907:6;10902:3;10898:16;10895:25;10892:112;;;10923:79;;:::i;:::-;10892:112;11013:54;11060:6;11055:3;11050;11013:54;:::i;:::-;10732:341;10648:425;;;;;:::o;11093:340::-;11149:5;11198:3;11191:4;11183:6;11179:17;11175:27;11165:122;;11206:79;;:::i;:::-;11165:122;11323:6;11310:20;11348:79;11423:3;11415:6;11408:4;11400:6;11396:17;11348:79;:::i;:::-;11339:88;;11155:278;11093:340;;;;:::o;11439:116::-;11509:21;11524:5;11509:21;:::i;:::-;11502:5;11499:32;11489:60;;11545:1;11542;11535:12;11489:60;11439:116;:::o;11561:133::-;11604:5;11642:6;11629:20;11620:29;;11658:30;11682:5;11658:30;:::i;:::-;11561:133;;;;:::o;11700:939::-;11793:6;11801;11809;11817;11866:3;11854:9;11845:7;11841:23;11837:33;11834:120;;;11873:79;;:::i;:::-;11834:120;12021:1;12010:9;12006:17;11993:31;12051:18;12043:6;12040:30;12037:117;;;12073:79;;:::i;:::-;12037:117;12178:63;12233:7;12224:6;12213:9;12209:22;12178:63;:::i;:::-;12168:73;;11964:287;12290:2;12316:53;12361:7;12352:6;12341:9;12337:22;12316:53;:::i;:::-;12306:63;;12261:118;12418:2;12444:53;12489:7;12480:6;12469:9;12465:22;12444:53;:::i;:::-;12434:63;;12389:118;12546:2;12572:50;12614:7;12605:6;12594:9;12590:22;12572:50;:::i;:::-;12562:60;;12517:115;11700:939;;;;;;;:::o;12645:329::-;12704:6;12753:2;12741:9;12732:7;12728:23;12724:32;12721:119;;;12759:79;;:::i;:::-;12721:119;12879:1;12904:53;12949:7;12940:6;12929:9;12925:22;12904:53;:::i;:::-;12894:63;;12850:117;12645:329;;;;:::o;12980:474::-;13048:6;13056;13105:2;13093:9;13084:7;13080:23;13076:32;13073:119;;;13111:79;;:::i;:::-;13073:119;13231:1;13256:53;13301:7;13292:6;13281:9;13277:22;13256:53;:::i;:::-;13246:63;;13202:117;13358:2;13384:53;13429:7;13420:6;13409:9;13405:22;13384:53;:::i;:::-;13374:63;;13329:118;12980:474;;;;;:::o;13460:::-;13528:6;13536;13585:2;13573:9;13564:7;13560:23;13556:32;13553:119;;;13591:79;;:::i;:::-;13553:119;13711:1;13736:53;13781:7;13772:6;13761:9;13757:22;13736:53;:::i;:::-;13726:63;;13682:117;13838:2;13864:53;13909:7;13900:6;13889:9;13885:22;13864:53;:::i;:::-;13854:63;;13809:118;13460:474;;;;;:::o;13940:180::-;13988:77;13985:1;13978:88;14085:4;14082:1;14075:15;14109:4;14106:1;14099:15;14126:320;14170:6;14207:1;14201:4;14197:12;14187:22;;14254:1;14248:4;14244:12;14275:18;14265:81;;14331:4;14323:6;14319:17;14309:27;;14265:81;14393:2;14385:6;14382:14;14362:18;14359:38;14356:84;;14412:18;;:::i;:::-;14356:84;14177:269;14126:320;;;:::o;14452:163::-;14592:15;14588:1;14580:6;14576:14;14569:39;14452:163;:::o;14621:366::-;14763:3;14784:67;14848:2;14843:3;14784:67;:::i;:::-;14777:74;;14860:93;14949:3;14860:93;:::i;:::-;14978:2;14973:3;14969:12;14962:19;;14621:366;;;:::o;14993:419::-;15159:4;15197:2;15186:9;15182:18;15174:26;;15246:9;15240:4;15236:20;15232:1;15221:9;15217:17;15210:47;15274:131;15400:4;15274:131;:::i;:::-;15266:139;;14993:419;;;:::o;15418:180::-;15466:77;15463:1;15456:88;15563:4;15560:1;15553:15;15587:4;15584:1;15577:15;15604:233;15643:3;15666:24;15684:5;15666:24;:::i;:::-;15657:33;;15712:66;15705:5;15702:77;15699:103;;15782:18;;:::i;:::-;15699:103;15829:1;15822:5;15818:13;15811:20;;15604:233;;;:::o;15843:141::-;15892:4;15915:3;15907:11;;15938:3;15935:1;15928:14;15972:4;15969:1;15959:18;15951:26;;15843:141;;;:::o;15990:93::-;16027:6;16074:2;16069;16062:5;16058:14;16054:23;16044:33;;15990:93;;;:::o;16089:107::-;16133:8;16183:5;16177:4;16173:16;16152:37;;16089:107;;;;:::o;16202:393::-;16271:6;16321:1;16309:10;16305:18;16344:97;16374:66;16363:9;16344:97;:::i;:::-;16462:39;16492:8;16481:9;16462:39;:::i;:::-;16450:51;;16534:4;16530:9;16523:5;16519:21;16510:30;;16583:4;16573:8;16569:19;16562:5;16559:30;16549:40;;16278:317;;16202:393;;;;;:::o;16601:60::-;16629:3;16650:5;16643:12;;16601:60;;;:::o;16667:142::-;16717:9;16750:53;16768:34;16777:24;16795:5;16777:24;:::i;:::-;16768:34;:::i;:::-;16750:53;:::i;:::-;16737:66;;16667:142;;;:::o;16815:75::-;16858:3;16879:5;16872:12;;16815:75;;;:::o;16896:269::-;17006:39;17037:7;17006:39;:::i;:::-;17067:91;17116:41;17140:16;17116:41;:::i;:::-;17108:6;17101:4;17095:11;17067:91;:::i;:::-;17061:4;17054:105;16972:193;16896:269;;;:::o;17171:73::-;17216:3;17171:73;:::o;17250:189::-;17327:32;;:::i;:::-;17368:65;17426:6;17418;17412:4;17368:65;:::i;:::-;17303:136;17250:189;;:::o;17445:186::-;17505:120;17522:3;17515:5;17512:14;17505:120;;;17576:39;17613:1;17606:5;17576:39;:::i;:::-;17549:1;17542:5;17538:13;17529:22;;17505:120;;;17445:186;;:::o;17637:543::-;17738:2;17733:3;17730:11;17727:446;;;17772:38;17804:5;17772:38;:::i;:::-;17856:29;17874:10;17856:29;:::i;:::-;17846:8;17842:44;18039:2;18027:10;18024:18;18021:49;;;18060:8;18045:23;;18021:49;18083:80;18139:22;18157:3;18139:22;:::i;:::-;18129:8;18125:37;18112:11;18083:80;:::i;:::-;17742:431;;17727:446;17637:543;;;:::o;18186:117::-;18240:8;18290:5;18284:4;18280:16;18259:37;;18186:117;;;;:::o;18309:169::-;18353:6;18386:51;18434:1;18430:6;18422:5;18419:1;18415:13;18386:51;:::i;:::-;18382:56;18467:4;18461;18457:15;18447:25;;18360:118;18309:169;;;;:::o;18483:295::-;18559:4;18705:29;18730:3;18724:4;18705:29;:::i;:::-;18697:37;;18767:3;18764:1;18760:11;18754:4;18751:21;18743:29;;18483:295;;;;:::o;18783:1395::-;18900:37;18933:3;18900:37;:::i;:::-;19002:18;18994:6;18991:30;18988:56;;;19024:18;;:::i;:::-;18988:56;19068:38;19100:4;19094:11;19068:38;:::i;:::-;19153:67;19213:6;19205;19199:4;19153:67;:::i;:::-;19247:1;19271:4;19258:17;;19303:2;19295:6;19292:14;19320:1;19315:618;;;;19977:1;19994:6;19991:77;;;20043:9;20038:3;20034:19;20028:26;20019:35;;19991:77;20094:67;20154:6;20147:5;20094:67;:::i;:::-;20088:4;20081:81;19950:222;19285:887;;19315:618;19367:4;19363:9;19355:6;19351:22;19401:37;19433:4;19401:37;:::i;:::-;19460:1;19474:208;19488:7;19485:1;19482:14;19474:208;;;19567:9;19562:3;19558:19;19552:26;19544:6;19537:42;19618:1;19610:6;19606:14;19596:24;;19665:2;19654:9;19650:18;19637:31;;19511:4;19508:1;19504:12;19499:17;;19474:208;;;19710:6;19701:7;19698:19;19695:179;;;19768:9;19763:3;19759:19;19753:26;19811:48;19853:4;19845:6;19841:17;19830:9;19811:48;:::i;:::-;19803:6;19796:64;19718:156;19695:179;19920:1;19916;19908:6;19904:14;19900:22;19894:4;19887:36;19322:611;;;19285:887;;18875:1303;;;18783:1395;;:::o;20184:332::-;20305:4;20343:2;20332:9;20328:18;20320:26;;20356:71;20424:1;20413:9;20409:17;20400:6;20356:71;:::i;:::-;20437:72;20505:2;20494:9;20490:18;20481:6;20437:72;:::i;:::-;20184:332;;;;;:::o;20522:164::-;20662:16;20658:1;20650:6;20646:14;20639:40;20522:164;:::o;20692:366::-;20834:3;20855:67;20919:2;20914:3;20855:67;:::i;:::-;20848:74;;20931:93;21020:3;20931:93;:::i;:::-;21049:2;21044:3;21040:12;21033:19;;20692:366;;;:::o;21064:419::-;21230:4;21268:2;21257:9;21253:18;21245:26;;21317:9;21311:4;21307:20;21303:1;21292:9;21288:17;21281:47;21345:131;21471:4;21345:131;:::i;:::-;21337:139;;21064:419;;;:::o;21489:169::-;21629:21;21625:1;21617:6;21613:14;21606:45;21489:169;:::o;21664:366::-;21806:3;21827:67;21891:2;21886:3;21827:67;:::i;:::-;21820:74;;21903:93;21992:3;21903:93;:::i;:::-;22021:2;22016:3;22012:12;22005:19;;21664:366;;;:::o;22036:419::-;22202:4;22240:2;22229:9;22225:18;22217:26;;22289:9;22283:4;22279:20;22275:1;22264:9;22260:17;22253:47;22317:131;22443:4;22317:131;:::i;:::-;22309:139;;22036:419;;;:::o;22461:159::-;22601:11;22597:1;22589:6;22585:14;22578:35;22461:159;:::o;22626:365::-;22768:3;22789:66;22853:1;22848:3;22789:66;:::i;:::-;22782:73;;22864:93;22953:3;22864:93;:::i;:::-;22982:2;22977:3;22973:12;22966:19;;22626:365;;;:::o;22997:419::-;23163:4;23201:2;23190:9;23186:18;23178:26;;23250:9;23244:4;23240:20;23236:1;23225:9;23221:17;23214:47;23278:131;23404:4;23278:131;:::i;:::-;23270:139;;22997:419;;;:::o;23422:442::-;23571:4;23609:2;23598:9;23594:18;23586:26;;23622:71;23690:1;23679:9;23675:17;23666:6;23622:71;:::i;:::-;23703:72;23771:2;23760:9;23756:18;23747:6;23703:72;:::i;:::-;23785;23853:2;23842:9;23838:18;23829:6;23785:72;:::i;:::-;23422:442;;;;;;:::o;23870:222::-;23963:4;24001:2;23990:9;23986:18;23978:26;;24014:71;24082:1;24071:9;24067:17;24058:6;24014:71;:::i;:::-;23870:222;;;;:::o;24098:191::-;24138:3;24157:20;24175:1;24157:20;:::i;:::-;24152:25;;24191:20;24209:1;24191:20;:::i;:::-;24186:25;;24234:1;24231;24227:9;24220:16;;24255:3;24252:1;24249:10;24246:36;;;24262:18;;:::i;:::-;24246:36;24098:191;;;;:::o;24295:682::-;24509:4;24547:3;24536:9;24532:19;24524:27;;24561:80;24638:1;24627:9;24623:17;24614:6;24561:80;:::i;:::-;24651:72;24719:2;24708:9;24704:18;24695:6;24651:72;:::i;:::-;24733;24801:2;24790:9;24786:18;24777:6;24733:72;:::i;:::-;24815;24883:2;24872:9;24868:18;24859:6;24815:72;:::i;:::-;24897:73;24965:3;24954:9;24950:19;24941:6;24897:73;:::i;:::-;24295:682;;;;;;;;:::o;24983:332::-;25104:4;25142:2;25131:9;25127:18;25119:26;;25155:71;25223:1;25212:9;25208:17;25199:6;25155:71;:::i;:::-;25236:72;25304:2;25293:9;25289:18;25280:6;25236:72;:::i;:::-;24983:332;;;;;:::o;25321:410::-;25361:7;25384:20;25402:1;25384:20;:::i;:::-;25379:25;;25418:20;25436:1;25418:20;:::i;:::-;25413:25;;25473:1;25470;25466:9;25495:30;25513:11;25495:30;:::i;:::-;25484:41;;25674:1;25665:7;25661:15;25658:1;25655:22;25635:1;25628:9;25608:83;25585:139;;25704:18;;:::i;:::-;25585:139;25369:362;25321:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2744800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "458",
								"BASE_COLLECTION_REWARD()": "458",
								"BASE_DISMANTLE_REWARD()": "435",
								"BASE_DISPOSAL_REWARD()": "436",
								"BASE_RECYCLING_REWARD()": "436",
								"BASE_REPAIR_REWARD()": "370",
								"COLLECTOR_ROLE()": "392",
								"DEFAULT_ADMIN_ROLE()": "419",
								"DISMANTLER_ROLE()": "459",
								"PER_GRAM_REWARD()": "370",
								"PER_ITEM_REWARD()": "371",
								"RECYCLER_ROLE()": "414",
								"REPAIRER_ROLE()": "392",
								"addRole(address,bytes32)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"collectItem(uint256)": "infinite",
								"createItem(string,uint256,uint256,bool)": "infinite",
								"decimals()": "384",
								"dismantleItem(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3234",
								"itemCounter()": "2492",
								"markAsRepairable(uint256)": "33398",
								"mintTokens(address,uint256)": "infinite",
								"name()": "infinite",
								"recycleItem(uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"repairItem(uint256)": "infinite",
								"resellItem(uint256)": "30967",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"wasteItems(uint256)": "infinite"
							},
							"internal": {
								"_calculateAndMintReward(uint256,enum EWasteToken.Status)": "infinite",
								"_getRewardComponents(uint256,enum EWasteToken.Status)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8005,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2666,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "455761737465546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4557540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2514,
									"end": 2556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2543,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2543,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2545,
									"end": 2555,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2524,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2514,
									"end": 2524,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2514,
									"end": 2524,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2514,
									"end": 2556,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2556,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2514,
									"end": 2556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2567,
									"end": 2601,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 580,
									"end": 603,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 2590,
									"end": 2600,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2567,
									"end": 2577,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2567,
									"end": 2577,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2567,
									"end": 2577,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2567,
									"end": 2601,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2567,
									"end": 2601,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2567,
									"end": 2601,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2567,
									"end": 2601,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2567,
									"end": 2601,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2567,
									"end": 2601,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2658,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2618,
									"end": 2628,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2657,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2647,
									"end": 2655,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2647,
									"end": 2655,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2655,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2657,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2657,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2657,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2647,
									"end": 2657,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2647,
									"end": 2657,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2645,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 2643,
									"end": 2657,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2643,
									"end": 2657,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2657,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2657,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2643,
									"end": 2657,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2657,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2643,
									"end": 2657,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2630,
									"end": 2640,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "989680"
								},
								{
									"begin": 2630,
									"end": 2657,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 2630,
									"end": 2657,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2630,
									"end": 2657,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2630,
									"end": 2657,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 2630,
									"end": 2657,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2630,
									"end": 2657,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 2630,
									"end": 2657,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2617,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2612,
									"end": 2617,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2612,
									"end": 2617,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2658,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2612,
									"end": 2658,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2658,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2658,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2612,
									"end": 2658,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 10,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7496,
									"end": 7503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7540,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7525,
									"end": 7541,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 7635,
									"end": 7658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 7695,
									"end": 7703,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 7679,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 7760,
									"end": 7826,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7750,
									"end": 7758,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7744,
									"end": 7748,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 7723,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7880,
									"end": 7887,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 7921,
									"end": 7922,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 7903,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 7955,
									"end": 7956,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 7937,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7985,
									"end": 7994,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 8032,
									"end": 8043,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 8014,
									"end": 8044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "tag",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8193,
									"end": 8194,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8184,
									"end": 8191,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8174,
									"end": 8196,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8147,
									"end": 8156,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8127,
									"end": 8210,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 8223,
									"end": 8241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7888,
									"end": 8250,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7840,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8333,
									"end": 8375,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8326,
									"end": 8331,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8322,
									"end": 8376,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8256,
									"end": 8382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8425,
									"end": 8432,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 8472,
									"end": 8477,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8454,
									"end": 8478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "tag",
									"source": 10,
									"value": "179"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 8595,
									"end": 8600,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 8577,
									"end": 8601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "tag",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8572,
									"end": 8575,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8565,
									"end": 8602,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8490,
									"end": 8608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8707,
									"end": 8711,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8745,
									"end": 8747,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8734,
									"end": 8743,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8824,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8811,
									"end": 8828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8802,
									"end": 8808,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 8758,
									"end": 8829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8614,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8882,
									"end": 8885,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 8919,
									"end": 8920,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 8901,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 8935,
									"end": 8955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "tag",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8978,
									"end": 8979,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8975,
									"end": 8976,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8971,
									"end": 8980,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 8996,
									"end": 8997,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8993,
									"end": 9003,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 9006,
									"end": 9024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "tag",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8842,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 9144,
									"end": 9149,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 9126,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9121,
									"end": 9124,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9114,
									"end": 9151,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9039,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9312,
									"end": 9316,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9352,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 9339,
									"end": 9348,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9335,
									"end": 9353,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 9431,
									"end": 9432,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9420,
									"end": 9429,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9416,
									"end": 9433,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 9363,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "tag",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "193"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9488,
									"end": 9494,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 9444,
									"end": 9516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "tag",
									"source": 10,
									"value": "193"
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 9594,
									"end": 9596,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 9583,
									"end": 9592,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 9526,
									"end": 9598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "tag",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9163,
									"end": 9605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9704,
									"end": 9708,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9742,
									"end": 9744,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9727,
									"end": 9745,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 9823,
									"end": 9824,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9808,
									"end": 9825,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9799,
									"end": 9805,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 9755,
									"end": 9826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9611,
									"end": 9833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8005,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a3b36be9c963f420118913ea278407b2192d57099bd528afdb38c5e58591f2e64736f6c634300081a0033",
									".code": [
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "8287662C"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "B8FE58E4"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "D8101DCD"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "ED276CAF"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "F0DDA65C"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "B8FE58E4"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "BE651316"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "BF313778"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "C53B4B09"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "CB963A39"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "990281B8"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "990281B8"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "9CA39AE9"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "A73F7F8A"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "8287662C"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "855C72FB"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "91810674"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "65258B66"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "65258B66"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "6D6D00ED"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "74E4D700"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "75B238FC"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "352B6DC3"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "3609A1EB"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "579108F7"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "F555C54"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "F555C54"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "91929C0"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 8005,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 945,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 945,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 945,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2674,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2674,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3432,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3432,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 463,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 393,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 393,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1001,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1001,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1527,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1527,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 637,
											"end": 692,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 637,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 637,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 543,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 543,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4194,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4194,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4608,
											"end": 5110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 4608,
											"end": 5110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5118,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5118,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3838,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3838,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 245,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 245,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 7751,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7751,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 824,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 824,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 824,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 470,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 470,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 320,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 320,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 762,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 762,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 699,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 699,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5541,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5541,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 883,
											"end": 938,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 883,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 883,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7884,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 7884,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 945,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 987,
											"end": 994,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 945,
											"end": 994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 945,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2859,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2874,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2846,
											"end": 2874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2874,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2874,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2846,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2838,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2838,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2940,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2929,
											"end": 2940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2929,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2942,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3041,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3105,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3139,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2973,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3217,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3259,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2963,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2969,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2970,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2953,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2953,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "PUSH",
											"source": 9,
											"value": "46D5E1FA50133F2AD2B0346FF4A3F42484FE3BB406C6C15FD7AE095D10B12581"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3366,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3416,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 3424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 286,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3519,
											"end": 3559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3534,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3519,
											"end": 3541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3519,
											"end": 3559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3559,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3511,
											"end": 3578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3511,
											"end": 3578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3589,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3603,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3604,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3589,
											"end": 3611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3589,
											"end": 3630,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3589,
											"end": 3630,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3674,
											"end": 3684,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3655,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3656,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3641,
											"end": 3671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3684,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3746,
											"end": 3749,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3722,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3722,
											"end": 3768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3722,
											"end": 3768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3813,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2A18AE28442EC525B81831921D81B734CE7861D68A812E4546C7945075766F1D"
										},
										{
											"begin": 3815,
											"end": 3821,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3784,
											"end": 3822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3822,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 463,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 435,
											"end": 463,
											"name": "PUSH",
											"source": 9,
											"value": "B636CAC4A39CBEE3063D40395F1623A30746F1C8BC201CED0489C50A6345C755"
										},
										{
											"begin": 393,
											"end": 463,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 393,
											"end": 463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1001,
											"end": 1053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 692,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 684,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 637,
											"end": 692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 543,
											"end": 603,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 543,
											"end": 603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 510,
											"end": 536,
											"name": "PUSH",
											"source": 9,
											"value": "AB5C443DD93B1877C3B155B5E3DDB79CB901FD6F9D2E3BD366F3216A80B889E7"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4305,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4279,
											"end": 4322,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4294,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4279,
											"end": 4301,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4279,
											"end": 4322,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4322,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4271,
											"end": 4341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4271,
											"end": 4341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4362,
											"end": 4372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4376,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4377,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4362,
											"end": 4384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4362,
											"end": 4402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4456,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4427,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4428,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4413,
											"end": 4443,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4518,
											"end": 4521,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4494,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4494,
											"end": 4539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4494,
											"end": 4539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4583,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4571,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E5E46D59E99676FBF7547CE5CC7583DC849E2AF037032E0F6611224B75BB8967"
										},
										{
											"begin": 4585,
											"end": 4591,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4555,
											"end": 4592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4592,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"source": 9,
											"value": "11D2C681BC9C10ED61F9A422C0DBAADDC4054CE58EC726ACA73E7E4D31BCD154"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4708,
											"end": 4750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4722,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4723,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4708,
											"end": 4730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4708,
											"end": 4750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4750,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4708,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4768,
											"end": 4809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4782,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4783,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4768,
											"end": 4790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4768,
											"end": 4809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4768,
											"end": 4809,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4708,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4686,
											"end": 4851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4686,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4872,
											"end": 4882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4887,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4872,
											"end": 4894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4872,
											"end": 4912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4956,
											"end": 4966,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4937,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4938,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4923,
											"end": 4953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4987,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5028,
											"end": 5031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5004,
											"end": 5049,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5004,
											"end": 5049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5004,
											"end": 5049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4987,
											"end": 5049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4987,
											"end": 5049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5083,
											"end": 5093,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5078,
											"end": 5081,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F0BDD39C575256B0686BBBC300A04A9C5828C01F9CC42A0179879B48B8EEDDF"
										},
										{
											"begin": 5095,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5065,
											"end": 5102,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5102,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 5110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 5110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 435,
											"end": 463,
											"name": "PUSH",
											"source": 9,
											"value": "B636CAC4A39CBEE3063D40395F1623A30746F1C8BC201CED0489C50A6345C755"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5234,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5208,
											"end": 5249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5222,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5223,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5208,
											"end": 5230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5208,
											"end": 5249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5249,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5200,
											"end": 5268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5200,
											"end": 5268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5289,
											"end": 5299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5303,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5304,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5289,
											"end": 5311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5289,
											"end": 5331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5375,
											"end": 5385,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5356,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5357,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5342,
											"end": 5372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5447,
											"end": 5450,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5452,
											"end": 5469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5423,
											"end": 5446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5423,
											"end": 5470,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5423,
											"end": 5470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5423,
											"end": 5470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5516,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5504,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "77B29112F6BBAF1890EC3F52FB1F9EF0367E0BABD3BCB3AA7D123B7A7734A54C"
										},
										{
											"begin": 5518,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5486,
											"end": 5525,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5525,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 286,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3930,
											"end": 3972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3944,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3930,
											"end": 3972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3972,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3922,
											"end": 3991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 3922,
											"end": 3991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4024,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4025,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4010,
											"end": 4038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4002,
											"end": 4062,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4002,
											"end": 4062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4083,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4097,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4098,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4083,
											"end": 4105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4083,
											"end": 4125,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4167,
											"end": 4177,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4165,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D0FF3B517D0C850B614729642E089A59AEA81EB4BA36827EAFE9B43B404DA0D7"
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4178,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 4186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 286,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "14CF45180C3FCF249A5A305E9657EA05C14FD4F4E1800EE0216A8213091711D2"
										},
										{
											"begin": 245,
											"end": 313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 245,
											"end": 313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7852,
											"end": 7857,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 7867,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 7842,
											"end": 7868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7842,
											"end": 7868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 869,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "6F05B59D3B200000"
										},
										{
											"begin": 824,
											"end": 876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 824,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 510,
											"end": 536,
											"name": "PUSH",
											"source": 9,
											"value": "AB5C443DD93B1877C3B155B5E3DDB79CB901FD6F9D2E3BD366F3216A80B889E7"
										},
										{
											"begin": 470,
											"end": 536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 470,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"source": 9,
											"value": "11D2C681BC9C10ED61F9A422C0DBAADDC4054CE58EC726ACA73E7E4D31BCD154"
										},
										{
											"begin": 320,
											"end": 386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 320,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 810,
											"end": 817,
											"name": "PUSH",
											"source": 9,
											"value": "6124FEE993BC0000"
										},
										{
											"begin": 762,
											"end": 817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "4563918244F40000"
										},
										{
											"begin": 699,
											"end": 755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 699,
											"end": 755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5602,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5612,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5617,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5602,
											"end": 5624,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5602,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5645,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5594,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 5594,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5717,
											"end": 5727,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5727,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5727,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5693,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5697,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5713,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5727,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5727,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5727,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 5675,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 5675,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5762,
											"end": 5772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5762,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5842,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "278AB484A5DB5FC05F3A869B94767B4A630943A85F774AA97A69AEDB086C269C"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 883,
											"end": 938,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 931,
											"end": 938,
											"name": "PUSH",
											"source": 9,
											"value": "53444835EC580000"
										},
										{
											"begin": 883,
											"end": 938,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 883,
											"end": 938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7975,
											"end": 7994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7981,
											"end": 7984,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7986,
											"end": 7993,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 7980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7975,
											"end": 7994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 7994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7975,
											"end": 7994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 8002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 6423,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5907,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 5994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6056,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6090,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 6056,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6101,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6136,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6127,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6123,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6123,
											"end": 6145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6123,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6101,
											"end": 6145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6101,
											"end": 6145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6172,
											"end": 6182,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6184,
											"end": 6195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 6166,
											"end": 6196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6196,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6166,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "PUSH",
											"source": 9,
											"value": "8841D639BA79954A7C240DDE37B5D6E3990383DC2F87C13E288E408108EFB457"
										},
										{
											"begin": 6271,
											"end": 6278,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6318,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6339,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6365,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 6222,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6376,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6415,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6423,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 7719,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6431,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6584,
											"end": 6603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6643,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6656,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6660,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6661,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6622,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6622,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6622,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6622,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6686,
											"end": 6711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6693,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6686,
											"end": 6711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 684,
											"end": 692,
											"name": "PUSH",
											"source": 9,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 6728,
											"end": 6761,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6783,
											"end": 6810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6783,
											"end": 6810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "4563918244F40000"
										},
										{
											"begin": 6827,
											"end": 6862,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6827,
											"end": 6862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6884,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6891,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6884,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 869,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "6F05B59D3B200000"
										},
										{
											"begin": 6927,
											"end": 6958,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6927,
											"end": 6958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6980,
											"end": 7006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 6987,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6980,
											"end": 7006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7006,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 810,
											"end": 817,
											"name": "PUSH",
											"source": 9,
											"value": "6124FEE993BC0000"
										},
										{
											"begin": 7023,
											"end": 7057,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7023,
											"end": 7057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7090,
											"end": 7107,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7079,
											"end": 7107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7086,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7079,
											"end": 7107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7107,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 931,
											"end": 938,
											"name": "PUSH",
											"source": 9,
											"value": "53444835EC580000"
										},
										{
											"begin": 7124,
											"end": 7158,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 7075,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 6976,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6880,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6779,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 6682,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7229,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 987,
											"end": 994,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7198,
											"end": 7229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7229,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7331,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7305,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7312,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7305,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7331,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7348,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7427,
											"end": 7442,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7416,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7423,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7416,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7442,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7508,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7492,
											"end": 7496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7503,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7492,
											"end": 7503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7474,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 7474,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7473,
											"end": 7508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7473,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7508,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 7473,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7459,
											"end": 7508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7459,
											"end": 7508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7558,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7530,
											"end": 7558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7530,
											"end": 7558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7623,
											"end": 7624,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7608,
											"end": 7612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7619,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7608,
											"end": 7619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 7590,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7590,
											"end": 7619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7590,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7619,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7590,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7589,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7575,
											"end": 7624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7575,
											"end": 7624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7700,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7689,
											"end": 7700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7700,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 7671,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 7671,
											"end": 7700,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7671,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7700,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 7671,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7700,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 7526,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7412,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 7301,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6611,
											"end": 7719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 7719,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 7719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 7719,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 7719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 7719,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 7719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 3531,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3526,
											"end": 3529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3694,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 3568,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3687,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3688,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3796,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 3700,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 3766,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3790,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 3766,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3755,
											"end": 3790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3755,
											"end": 3790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3796,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 3907,
											"end": 3912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 3889,
											"end": 3913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4106,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3926,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4051,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 4052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4061,
											"end": 4076,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4228,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 4112,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4189,
											"end": 4194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4186,
											"end": 4198,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 4176,
											"end": 4222,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4202,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4222,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 4176,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4367,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 4234,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 4317,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4361,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 4317,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4367,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4506,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 4373,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 4494,
											"end": 4499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 4465,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4500,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 4465,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4506,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4512,
											"end": 4661,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 4512,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 4648,
											"end": 4653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 4608,
											"end": 4654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 4654,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 4608,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4606,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4512,
											"end": 4661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4512,
											"end": 4661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4512,
											"end": 4661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 4983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5006,
											"end": 5015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5097,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5075,
											"end": 5081,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 5031,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5102,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 5031,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5169,
											"end": 5178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 5112,
											"end": 5184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5184,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 5112,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5221,
											"end": 5241,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5194,
											"end": 5242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 5332,
											"end": 5336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 5259,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5337,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 5259,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 5347,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5419,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 5347,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 5497,
											"end": 5500,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5486,
											"end": 5495,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5479,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 5429,
											"end": 5502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5502,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 5429,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 5589,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5571,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 5512,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5594,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 5512,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 5661,
											"end": 5670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5657,
											"end": 5676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5654,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 5604,
											"end": 5677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5677,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 5604,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 5749,
											"end": 5752,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5738,
											"end": 5747,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 5687,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5754,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 5687,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 5761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5889,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 5767,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 5858,
											"end": 5863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 5840,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5864,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 5840,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5865,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 5820,
											"end": 5883,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5881,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5883,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 5820,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 6034,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 5895,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5941,
											"end": 5946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5966,
											"end": 5986,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5957,
											"end": 5986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5957,
											"end": 5986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5995,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5995,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 5995,
											"end": 6028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5995,
											"end": 6028,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 5995,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 6034,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 6034,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 6034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 6034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 6034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6514,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6040,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6122,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6165,
											"end": 6167,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6151,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6163,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 6133,
											"end": 6252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 6171,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 6171,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 6171,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6252,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 6133,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 6361,
											"end": 6368,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6341,
											"end": 6350,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 6316,
											"end": 6369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6369,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 6316,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6306,
											"end": 6369,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6306,
											"end": 6369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6420,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6469,
											"end": 6478,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6465,
											"end": 6487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 6444,
											"end": 6497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6389,
											"end": 6507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6514,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6514,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6742,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 6520,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6640,
											"end": 6649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6628,
											"end": 6654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6730,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6708,
											"end": 6714,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 6664,
											"end": 6735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6735,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 6664,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 7367,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 6748,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6892,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6878,
											"end": 6887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 6876,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6888,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6861,
											"end": 6893,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 6858,
											"end": 6977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 6896,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 6896,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6896,
											"end": 6975,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 6896,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6977,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 6858,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7016,
											"end": 7017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7041,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 7086,
											"end": 7093,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7075,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7062,
											"end": 7084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 7041,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7094,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 7041,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7094,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7143,
											"end": 7145,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7169,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 7214,
											"end": 7221,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7194,
											"end": 7203,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 7169,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7222,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 7169,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7222,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7271,
											"end": 7273,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 7342,
											"end": 7349,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7322,
											"end": 7331,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7297,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 7297,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7297,
											"end": 7350,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 7297,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 7360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 7367,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 7367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 7367,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 7367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 7367,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 7367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7450,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 7373,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7410,
											"end": 7417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7428,
											"end": 7444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7428,
											"end": 7444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7450,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7450,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7456,
											"end": 7578,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 7456,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 7547,
											"end": 7552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 7529,
											"end": 7553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7553,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 7529,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7509,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 7509,
											"end": 7572,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7565,
											"end": 7566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7558,
											"end": 7570,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7509,
											"end": 7572,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 7509,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7456,
											"end": 7578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7456,
											"end": 7578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7723,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 7584,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7630,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 7675,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7684,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 7711,
											"end": 7716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7684,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 7684,
											"end": 7717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7684,
											"end": 7717,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 7684,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7723,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 8058,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7729,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7788,
											"end": 7794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7816,
											"end": 7823,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7812,
											"end": 7835,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7808,
											"end": 7840,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 7843,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 7843,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 7805,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 8033,
											"end": 8040,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8022,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 7988,
											"end": 8041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8041,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 7988,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 8051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 8058,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 8058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 8058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 8058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 8058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8182,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 8064,
											"end": 8182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 8169,
											"end": 8174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 8151,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8175,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 8151,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8146,
											"end": 8149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8410,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 8188,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8308,
											"end": 8317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8296,
											"end": 8322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8296,
											"end": 8322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 8400,
											"end": 8401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8385,
											"end": 8402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 8332,
											"end": 8403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8403,
											"name": "tag",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 8332,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8890,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 8416,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8498,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8520,
											"end": 8527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8539,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8512,
											"end": 8544,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 8547,
											"end": 8626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8667,
											"end": 8668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 8737,
											"end": 8744,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8717,
											"end": 8726,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 8692,
											"end": 8745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8682,
											"end": 8745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8682,
											"end": 8745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8794,
											"end": 8796,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 8865,
											"end": 8872,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8845,
											"end": 8854,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8841,
											"end": 8863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 8820,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "tag",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8765,
											"end": 8883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8896,
											"end": 8982,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 8896,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8931,
											"end": 8938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8964,
											"end": 8969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8960,
											"end": 8976,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8949,
											"end": 8976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8949,
											"end": 8976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8896,
											"end": 8982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8896,
											"end": 8982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8896,
											"end": 8982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8896,
											"end": 8982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9100,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 8988,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 9087,
											"end": 9092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 9071,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9093,
											"name": "tag",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 9071,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9320,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 9106,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9222,
											"end": 9231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9218,
											"end": 9236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9210,
											"end": 9236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9210,
											"end": 9236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 9310,
											"end": 9311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9308,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9295,
											"end": 9312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9286,
											"end": 9292,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 9246,
											"end": 9313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9313,
											"name": "tag",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 9246,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9320,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9443,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 9326,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9435,
											"end": 9436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9425,
											"end": 9437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9449,
											"end": 9566,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 9449,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9558,
											"end": 9559,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9548,
											"end": 9560,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9752,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 9572,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9697,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9617,
											"end": 9618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9717,
											"end": 9721,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 9714,
											"end": 9715,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9707,
											"end": 9722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9745,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9738,
											"end": 9739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9731,
											"end": 9746,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 10039,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 9758,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 9863,
											"end": 9867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 9841,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "tag",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 9841,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9971,
											"end": 9977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9959,
											"end": 9969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9978,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9923,
											"end": 9933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 9954,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9917,
											"end": 9979,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 10002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 9914,
											"end": 10002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 9982,
											"end": 10000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "tag",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 9982,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 10002,
											"name": "tag",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 9914,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10032,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10011,
											"end": 10033,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 10039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 10039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 10039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 10039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10045,
											"end": 10174,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 10045,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 10106,
											"end": 10126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "tag",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 10106,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10096,
											"end": 10126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10096,
											"end": 10126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 10163,
											"end": 10167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10155,
											"end": 10161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 10135,
											"end": 10168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10168,
											"name": "tag",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 10135,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10045,
											"end": 10174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10045,
											"end": 10174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10045,
											"end": 10174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10045,
											"end": 10174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10488,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 10180,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10324,
											"end": 10330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10351,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10374,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 10318,
											"end": 10374,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "681"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 10354,
											"end": 10372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "tag",
											"source": 10,
											"value": "681"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10374,
											"name": "tag",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 10318,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 10414,
											"end": 10420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 10392,
											"end": 10421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10421,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 10392,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10476,
											"end": 10480,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10470,
											"end": 10474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10642,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 10494,
											"end": 10642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10590,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10582,
											"end": 10585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10569,
											"end": 10599,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10624,
											"end": 10630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10619,
											"end": 10622,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10608,
											"end": 10635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 11073,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 10648,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10726,
											"end": 10731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 10767,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 10809,
											"end": 10815,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 10767,
											"end": 10816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10816,
											"name": "tag",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 10767,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 10751,
											"end": 10817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10817,
											"name": "tag",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 10751,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10742,
											"end": 10817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10742,
											"end": 10817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 10847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10871,
											"end": 10876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10919,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10907,
											"end": 10913,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10902,
											"end": 10905,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10898,
											"end": 10914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10920,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 11004,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 10892,
											"end": 11004,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10923,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 10923,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 10923,
											"end": 11002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10923,
											"end": 11002,
											"name": "tag",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 10923,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 11004,
											"name": "tag",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 10892,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11013,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11055,
											"end": 11058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11050,
											"end": 11053,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11013,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 11013,
											"end": 11067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11013,
											"end": 11067,
											"name": "tag",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 11013,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 11073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 11073,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 11073,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 11073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 11073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 11073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 11073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11433,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 11093,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11198,
											"end": 11201,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11183,
											"end": 11189,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11179,
											"end": 11196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11175,
											"end": 11202,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11165,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 11165,
											"end": 11287,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11206,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 11206,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 11206,
											"end": 11285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11206,
											"end": 11285,
											"name": "tag",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 11206,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11165,
											"end": 11287,
											"name": "tag",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 11165,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11323,
											"end": 11329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11310,
											"end": 11330,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11348,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 11423,
											"end": 11426,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11408,
											"end": 11412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11406,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11396,
											"end": 11413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11348,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 11348,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11348,
											"end": 11427,
											"name": "tag",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 11348,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11093,
											"end": 11433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11439,
											"end": 11555,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 11439,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 11524,
											"end": 11529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 11509,
											"end": 11530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11530,
											"name": "tag",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 11509,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11502,
											"end": 11507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11499,
											"end": 11531,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11489,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 11489,
											"end": 11549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11535,
											"end": 11547,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11489,
											"end": 11549,
											"name": "tag",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 11489,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11439,
											"end": 11555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11439,
											"end": 11555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11561,
											"end": 11694,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 11561,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11604,
											"end": 11609,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11642,
											"end": 11648,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11620,
											"end": 11649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11620,
											"end": 11649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11658,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 11682,
											"end": 11687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11658,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 11658,
											"end": 11688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11658,
											"end": 11688,
											"name": "tag",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 11658,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11561,
											"end": 11694,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11561,
											"end": 11694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11561,
											"end": 11694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11561,
											"end": 11694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11561,
											"end": 11694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 11799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 11869,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11854,
											"end": 11863,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11845,
											"end": 11852,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11841,
											"end": 11864,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11837,
											"end": 11870,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11834,
											"end": 11954,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11834,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 11834,
											"end": 11954,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11873,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 11873,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 11873,
											"end": 11952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11873,
											"end": 11952,
											"name": "tag",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 11873,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11834,
											"end": 11954,
											"name": "tag",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 11834,
											"end": 11954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12010,
											"end": 12019,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11993,
											"end": 12024,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12069,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12043,
											"end": 12049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12070,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 12037,
											"end": 12154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 12152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "703"
										},
										{
											"begin": 12073,
											"end": 12152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 12073,
											"end": 12152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 12152,
											"name": "tag",
											"source": 10,
											"value": "703"
										},
										{
											"begin": 12073,
											"end": 12152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12154,
											"name": "tag",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 12037,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12178,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 12233,
											"end": 12240,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12178,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 12178,
											"end": 12241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12178,
											"end": 12241,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 12178,
											"end": 12241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12241,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11964,
											"end": 12251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12290,
											"end": 12292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12316,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 12361,
											"end": 12368,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12352,
											"end": 12358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12341,
											"end": 12350,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12337,
											"end": 12359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12316,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12316,
											"end": 12369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12316,
											"end": 12369,
											"name": "tag",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 12316,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12306,
											"end": 12369,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12306,
											"end": 12369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12261,
											"end": 12379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12418,
											"end": 12420,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12444,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 12489,
											"end": 12496,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12480,
											"end": 12486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12478,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12444,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12444,
											"end": 12497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12444,
											"end": 12497,
											"name": "tag",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 12444,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12434,
											"end": 12497,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12434,
											"end": 12497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12546,
											"end": 12548,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12572,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 12614,
											"end": 12621,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12594,
											"end": 12603,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12590,
											"end": 12612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 12572,
											"end": 12622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12622,
											"name": "tag",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 12572,
											"end": 12622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12517,
											"end": 12632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 12639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12974,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 12645,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 12710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12741,
											"end": 12750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12732,
											"end": 12739,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12751,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12724,
											"end": 12756,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 12840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 12721,
											"end": 12840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12759,
											"end": 12838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 12759,
											"end": 12838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 12759,
											"end": 12838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12759,
											"end": 12838,
											"name": "tag",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 12759,
											"end": 12838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 12840,
											"name": "tag",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 12721,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12879,
											"end": 12880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12904,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 12949,
											"end": 12956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 12946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12925,
											"end": 12947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12904,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 12904,
											"end": 12957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12904,
											"end": 12957,
											"name": "tag",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 12904,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12894,
											"end": 12957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12894,
											"end": 12957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12850,
											"end": 12967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12974,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12974,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 13454,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 12980,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13107,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13093,
											"end": 13102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13084,
											"end": 13091,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13080,
											"end": 13103,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13076,
											"end": 13108,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13111,
											"end": 13190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "tag",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "tag",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13231,
											"end": 13232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13256,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 13301,
											"end": 13308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13281,
											"end": 13290,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13256,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 13256,
											"end": 13309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13256,
											"end": 13309,
											"name": "tag",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 13256,
											"end": 13309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13246,
											"end": 13309,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13246,
											"end": 13309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13202,
											"end": 13319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13358,
											"end": 13360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13384,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 13429,
											"end": 13436,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13420,
											"end": 13426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13418,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13405,
											"end": 13427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13384,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 13384,
											"end": 13437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13384,
											"end": 13437,
											"name": "tag",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 13384,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13374,
											"end": 13437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13374,
											"end": 13437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13329,
											"end": 13447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 13454,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 13454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 13454,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 13454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 13454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 13454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13934,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 13460,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13528,
											"end": 13534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13536,
											"end": 13542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13573,
											"end": 13582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13564,
											"end": 13571,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13560,
											"end": 13583,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13556,
											"end": 13588,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "718"
										},
										{
											"begin": 13553,
											"end": 13672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13591,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 13591,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13591,
											"end": 13670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13591,
											"end": 13670,
											"name": "tag",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 13591,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13672,
											"name": "tag",
											"source": 10,
											"value": "718"
										},
										{
											"begin": 13553,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13736,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 13781,
											"end": 13788,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13772,
											"end": 13778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13770,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13757,
											"end": 13779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13736,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 13736,
											"end": 13789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13736,
											"end": 13789,
											"name": "tag",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 13736,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13789,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13682,
											"end": 13799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13838,
											"end": 13840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13864,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "721"
										},
										{
											"begin": 13909,
											"end": 13916,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13900,
											"end": 13906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13898,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13885,
											"end": 13907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 13864,
											"end": 13917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 13917,
											"name": "tag",
											"source": 10,
											"value": "721"
										},
										{
											"begin": 13864,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 13917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 13917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13809,
											"end": 13927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13934,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13934,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 14120,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 13940,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13988,
											"end": 14065,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13985,
											"end": 13986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13978,
											"end": 14066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14085,
											"end": 14089,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14082,
											"end": 14083,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14075,
											"end": 14090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14109,
											"end": 14113,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14106,
											"end": 14107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14099,
											"end": 14114,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14126,
											"end": 14446,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 14126,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14170,
											"end": 14176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14208,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 14201,
											"end": 14205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14197,
											"end": 14209,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14187,
											"end": 14209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14187,
											"end": 14209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14254,
											"end": 14255,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14248,
											"end": 14252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14244,
											"end": 14256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14293,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 14265,
											"end": 14346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 14323,
											"end": 14329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14319,
											"end": 14336,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14336,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14346,
											"name": "tag",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 14265,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14395,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14385,
											"end": 14391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14382,
											"end": 14396,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14359,
											"end": 14397,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14356,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 14356,
											"end": 14440,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14412,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 14412,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 14412,
											"end": 14430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14412,
											"end": 14430,
											"name": "tag",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 14412,
											"end": 14430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14356,
											"end": 14440,
											"name": "tag",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 14356,
											"end": 14440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14126,
											"end": 14446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14126,
											"end": 14446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14126,
											"end": 14446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14126,
											"end": 14446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14452,
											"end": 14615,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 14452,
											"end": 14615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14592,
											"end": 14607,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420696E70757400000000000000000000000000000000000000"
										},
										{
											"begin": 14588,
											"end": 14589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14580,
											"end": 14586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14576,
											"end": 14590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14569,
											"end": 14608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14452,
											"end": 14615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14452,
											"end": 14615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14621,
											"end": 14987,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 14621,
											"end": 14987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14763,
											"end": 14766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14784,
											"end": 14851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 14843,
											"end": 14846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14784,
											"end": 14851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 14784,
											"end": 14851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14784,
											"end": 14851,
											"name": "tag",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 14784,
											"end": 14851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14777,
											"end": 14851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14777,
											"end": 14851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14860,
											"end": 14953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "730"
										},
										{
											"begin": 14949,
											"end": 14952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14860,
											"end": 14953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 14860,
											"end": 14953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14860,
											"end": 14953,
											"name": "tag",
											"source": 10,
											"value": "730"
										},
										{
											"begin": 14860,
											"end": 14953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14978,
											"end": 14980,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14973,
											"end": 14976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14969,
											"end": 14981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14962,
											"end": 14981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14962,
											"end": 14981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14621,
											"end": 14987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14621,
											"end": 14987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14621,
											"end": 14987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14621,
											"end": 14987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14993,
											"end": 15412,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 14993,
											"end": 15412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15159,
											"end": 15163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15199,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15186,
											"end": 15195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15182,
											"end": 15200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15174,
											"end": 15200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15174,
											"end": 15200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15236,
											"end": 15256,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15232,
											"end": 15233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15221,
											"end": 15230,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15217,
											"end": 15234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15210,
											"end": 15257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15274,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 15400,
											"end": 15404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15274,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 15274,
											"end": 15405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15274,
											"end": 15405,
											"name": "tag",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 15274,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15266,
											"end": 15405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15266,
											"end": 15405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14993,
											"end": 15412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14993,
											"end": 15412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14993,
											"end": 15412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14993,
											"end": 15412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15598,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 15418,
											"end": 15598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15466,
											"end": 15543,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15463,
											"end": 15464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15456,
											"end": 15544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15563,
											"end": 15567,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15560,
											"end": 15561,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15553,
											"end": 15568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15587,
											"end": 15591,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15584,
											"end": 15585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15592,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15837,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 15604,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15643,
											"end": 15646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15666,
											"end": 15690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "735"
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15666,
											"end": 15690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 15666,
											"end": 15690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15666,
											"end": 15690,
											"name": "tag",
											"source": 10,
											"value": "735"
										},
										{
											"begin": 15666,
											"end": 15690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15657,
											"end": 15690,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15657,
											"end": 15690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15712,
											"end": 15778,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15705,
											"end": 15710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15779,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15699,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 15699,
											"end": 15802,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15782,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 15782,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 15782,
											"end": 15800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15782,
											"end": 15800,
											"name": "tag",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 15782,
											"end": 15800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15699,
											"end": 15802,
											"name": "tag",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 15699,
											"end": 15802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15829,
											"end": 15830,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15822,
											"end": 15827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15818,
											"end": 15831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15811,
											"end": 15831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15811,
											"end": 15831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15837,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15984,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 15843,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15915,
											"end": 15918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15907,
											"end": 15918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15907,
											"end": 15918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15938,
											"end": 15941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15935,
											"end": 15936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15928,
											"end": 15942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15972,
											"end": 15976,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15969,
											"end": 15970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15959,
											"end": 15977,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 15977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 15977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16083,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 15990,
											"end": 16083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16027,
											"end": 16033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16074,
											"end": 16076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16069,
											"end": 16071,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16062,
											"end": 16067,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16058,
											"end": 16072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16077,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16196,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 16089,
											"end": 16196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16183,
											"end": 16188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16177,
											"end": 16181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16173,
											"end": 16189,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16152,
											"end": 16189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16152,
											"end": 16189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16595,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 16202,
											"end": 16595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16271,
											"end": 16277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16321,
											"end": 16322,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 16309,
											"end": 16319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16305,
											"end": 16323,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16344,
											"end": 16441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "742"
										},
										{
											"begin": 16374,
											"end": 16440,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16363,
											"end": 16372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16344,
											"end": 16441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 16344,
											"end": 16441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16344,
											"end": 16441,
											"name": "tag",
											"source": 10,
											"value": "742"
										},
										{
											"begin": 16344,
											"end": 16441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16462,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 16492,
											"end": 16500,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16481,
											"end": 16490,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16462,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 16462,
											"end": 16501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16462,
											"end": 16501,
											"name": "tag",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 16462,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16450,
											"end": 16501,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 16450,
											"end": 16501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16534,
											"end": 16538,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16530,
											"end": 16539,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 16523,
											"end": 16528,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16519,
											"end": 16540,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16510,
											"end": 16540,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16510,
											"end": 16540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16583,
											"end": 16587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16573,
											"end": 16581,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16569,
											"end": 16588,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16562,
											"end": 16567,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16559,
											"end": 16589,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16549,
											"end": 16589,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16549,
											"end": 16589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16278,
											"end": 16595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16278,
											"end": 16595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16595,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16595,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16601,
											"end": 16661,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 16601,
											"end": 16661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16629,
											"end": 16632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16650,
											"end": 16655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16643,
											"end": 16655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16643,
											"end": 16655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16601,
											"end": 16661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16601,
											"end": 16661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16601,
											"end": 16661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16601,
											"end": 16661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16809,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 16667,
											"end": 16809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16717,
											"end": 16726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16750,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "746"
										},
										{
											"begin": 16768,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "747"
										},
										{
											"begin": 16777,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 16795,
											"end": 16800,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16777,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 16777,
											"end": 16801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16777,
											"end": 16801,
											"name": "tag",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 16777,
											"end": 16801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16768,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 16768,
											"end": 16802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16768,
											"end": 16802,
											"name": "tag",
											"source": 10,
											"value": "747"
										},
										{
											"begin": 16768,
											"end": 16802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16750,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 16750,
											"end": 16803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16750,
											"end": 16803,
											"name": "tag",
											"source": 10,
											"value": "746"
										},
										{
											"begin": 16750,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16737,
											"end": 16803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16737,
											"end": 16803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16809,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16858,
											"end": 16861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16879,
											"end": 16884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16872,
											"end": 16884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16872,
											"end": 16884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16815,
											"end": 16890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17165,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 16896,
											"end": 17165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17006,
											"end": 17045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "751"
										},
										{
											"begin": 17037,
											"end": 17044,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17006,
											"end": 17045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 17006,
											"end": 17045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17006,
											"end": 17045,
											"name": "tag",
											"source": 10,
											"value": "751"
										},
										{
											"begin": 17006,
											"end": 17045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17067,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 17116,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "753"
										},
										{
											"begin": 17140,
											"end": 17156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17116,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 17116,
											"end": 17157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17116,
											"end": 17157,
											"name": "tag",
											"source": 10,
											"value": "753"
										},
										{
											"begin": 17116,
											"end": 17157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17108,
											"end": 17114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17101,
											"end": 17105,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17095,
											"end": 17106,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17067,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 17067,
											"end": 17158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17067,
											"end": 17158,
											"name": "tag",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 17067,
											"end": 17158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17061,
											"end": 17065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17054,
											"end": 17159,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16972,
											"end": 17165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16896,
											"end": 17165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17171,
											"end": 17244,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 17171,
											"end": 17244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17216,
											"end": 17219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17171,
											"end": 17244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17171,
											"end": 17244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17250,
											"end": 17439,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 17250,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17327,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "756"
										},
										{
											"begin": 17327,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 17327,
											"end": 17359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17327,
											"end": 17359,
											"name": "tag",
											"source": 10,
											"value": "756"
										},
										{
											"begin": 17327,
											"end": 17359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17368,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 17426,
											"end": 17432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17418,
											"end": 17424,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17412,
											"end": 17416,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17368,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 17368,
											"end": 17433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17368,
											"end": 17433,
											"name": "tag",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 17368,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17303,
											"end": 17439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17250,
											"end": 17439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17250,
											"end": 17439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17250,
											"end": 17439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17631,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 17445,
											"end": 17631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "tag",
											"source": 10,
											"value": "759"
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17522,
											"end": 17525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17515,
											"end": 17520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17512,
											"end": 17526,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "761"
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17576,
											"end": 17615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "762"
										},
										{
											"begin": 17613,
											"end": 17614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17606,
											"end": 17611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17576,
											"end": 17615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 17576,
											"end": 17615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17576,
											"end": 17615,
											"name": "tag",
											"source": 10,
											"value": "762"
										},
										{
											"begin": 17576,
											"end": 17615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17550,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17542,
											"end": 17547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17538,
											"end": 17551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17529,
											"end": 17551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17529,
											"end": 17551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "759"
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "tag",
											"source": 10,
											"value": "761"
										},
										{
											"begin": 17505,
											"end": 17625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 18180,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 17637,
											"end": 18180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17738,
											"end": 17740,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 17733,
											"end": 17736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17730,
											"end": 17741,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17727,
											"end": 18173,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17727,
											"end": 18173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 17727,
											"end": 18173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17772,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "765"
										},
										{
											"begin": 17804,
											"end": 17809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17772,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 17772,
											"end": 17810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17772,
											"end": 17810,
											"name": "tag",
											"source": 10,
											"value": "765"
										},
										{
											"begin": 17772,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17856,
											"end": 17885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 17874,
											"end": 17884,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17856,
											"end": 17885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 17856,
											"end": 17885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17856,
											"end": 17885,
											"name": "tag",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 17856,
											"end": 17885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17846,
											"end": 17854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17842,
											"end": 17886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18039,
											"end": 18041,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18027,
											"end": 18037,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18070,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "767"
										},
										{
											"begin": 18021,
											"end": 18070,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18060,
											"end": 18068,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18070,
											"name": "tag",
											"source": 10,
											"value": "767"
										},
										{
											"begin": 18021,
											"end": 18070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18083,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "768"
										},
										{
											"begin": 18139,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 18157,
											"end": 18160,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18139,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 18139,
											"end": 18161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18139,
											"end": 18161,
											"name": "tag",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 18139,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18129,
											"end": 18137,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18125,
											"end": 18162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18112,
											"end": 18123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18083,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 18083,
											"end": 18163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18083,
											"end": 18163,
											"name": "tag",
											"source": 10,
											"value": "768"
										},
										{
											"begin": 18083,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17742,
											"end": 18173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17742,
											"end": 18173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17727,
											"end": 18173,
											"name": "tag",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 17727,
											"end": 18173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 18180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 18180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 18180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 18180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18303,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 18186,
											"end": 18303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18240,
											"end": 18248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18290,
											"end": 18295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18284,
											"end": 18288,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18280,
											"end": 18296,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 18259,
											"end": 18296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18259,
											"end": 18296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18303,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18478,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 18309,
											"end": 18478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18353,
											"end": 18359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18386,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 18434,
											"end": 18435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18430,
											"end": 18436,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 18422,
											"end": 18427,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18419,
											"end": 18420,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 18415,
											"end": 18428,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 18386,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 18386,
											"end": 18437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18386,
											"end": 18437,
											"name": "tag",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 18386,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18382,
											"end": 18438,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 18467,
											"end": 18471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18461,
											"end": 18465,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18457,
											"end": 18472,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18447,
											"end": 18472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18447,
											"end": 18472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18360,
											"end": 18478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18478,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18309,
											"end": 18478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18778,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 18483,
											"end": 18778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18559,
											"end": 18563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18705,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 18730,
											"end": 18733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18724,
											"end": 18728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18705,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 18705,
											"end": 18734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18705,
											"end": 18734,
											"name": "tag",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 18705,
											"end": 18734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18697,
											"end": 18734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18697,
											"end": 18734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18767,
											"end": 18770,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18764,
											"end": 18765,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 18760,
											"end": 18771,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 18754,
											"end": 18758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18751,
											"end": 18772,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18778,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18783,
											"end": 20178,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 18783,
											"end": 20178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18900,
											"end": 18937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "776"
										},
										{
											"begin": 18933,
											"end": 18936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18900,
											"end": 18937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 18900,
											"end": 18937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18900,
											"end": 18937,
											"name": "tag",
											"source": 10,
											"value": "776"
										},
										{
											"begin": 18900,
											"end": 18937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19002,
											"end": 19020,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18994,
											"end": 19000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18991,
											"end": 19021,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18988,
											"end": 19044,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18988,
											"end": 19044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "777"
										},
										{
											"begin": 18988,
											"end": 19044,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19024,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 19024,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 19024,
											"end": 19042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19024,
											"end": 19042,
											"name": "tag",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 19024,
											"end": 19042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18988,
											"end": 19044,
											"name": "tag",
											"source": 10,
											"value": "777"
										},
										{
											"begin": 18988,
											"end": 19044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 19100,
											"end": 19104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19094,
											"end": 19105,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 19068,
											"end": 19106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19106,
											"name": "tag",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 19068,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "780"
										},
										{
											"begin": 19213,
											"end": 19219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19205,
											"end": 19211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19199,
											"end": 19203,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 19153,
											"end": 19220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "tag",
											"source": 10,
											"value": "780"
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19271,
											"end": 19275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19258,
											"end": 19275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19258,
											"end": 19275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19303,
											"end": 19305,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19295,
											"end": 19301,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19292,
											"end": 19306,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19320,
											"end": 19321,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19315,
											"end": 19933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19315,
											"end": 19933,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19315,
											"end": 19933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "782"
										},
										{
											"begin": 19315,
											"end": 19933,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19977,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19994,
											"end": 20000,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19991,
											"end": 20068,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19991,
											"end": 20068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "783"
										},
										{
											"begin": 19991,
											"end": 20068,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20043,
											"end": 20052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20038,
											"end": 20041,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20034,
											"end": 20053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20028,
											"end": 20054,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20019,
											"end": 20054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20019,
											"end": 20054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19991,
											"end": 20068,
											"name": "tag",
											"source": 10,
											"value": "783"
										},
										{
											"begin": 19991,
											"end": 20068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 20154,
											"end": 20160,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20147,
											"end": 20152,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 20094,
											"end": 20161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20161,
											"name": "tag",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 20094,
											"end": 20161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20088,
											"end": 20092,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20162,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 19950,
											"end": 20172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19285,
											"end": 20172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 19285,
											"end": 20172,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19315,
											"end": 19933,
											"name": "tag",
											"source": 10,
											"value": "782"
										},
										{
											"begin": 19315,
											"end": 19933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19367,
											"end": 19371,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19363,
											"end": 19372,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 19355,
											"end": 19361,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19351,
											"end": 19373,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19401,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "785"
										},
										{
											"begin": 19433,
											"end": 19437,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19401,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 19401,
											"end": 19438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19401,
											"end": 19438,
											"name": "tag",
											"source": 10,
											"value": "785"
										},
										{
											"begin": 19401,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19460,
											"end": 19461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "tag",
											"source": 10,
											"value": "786"
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19488,
											"end": 19495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19485,
											"end": 19486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19482,
											"end": 19496,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "788"
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19567,
											"end": 19576,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19562,
											"end": 19565,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 19558,
											"end": 19577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19552,
											"end": 19578,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19544,
											"end": 19550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19537,
											"end": 19579,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 19618,
											"end": 19619,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19610,
											"end": 19616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19606,
											"end": 19620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19596,
											"end": 19620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19596,
											"end": 19620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19665,
											"end": 19667,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19654,
											"end": 19663,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19650,
											"end": 19668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19668,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19511,
											"end": 19515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19508,
											"end": 19509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 19516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 19516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "786"
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "tag",
											"source": 10,
											"value": "788"
										},
										{
											"begin": 19474,
											"end": 19682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19710,
											"end": 19716,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19701,
											"end": 19708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19698,
											"end": 19717,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19695,
											"end": 19874,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19695,
											"end": 19874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "789"
										},
										{
											"begin": 19695,
											"end": 19874,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19768,
											"end": 19777,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19763,
											"end": 19766,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 19759,
											"end": 19778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19753,
											"end": 19779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19811,
											"end": 19859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "790"
										},
										{
											"begin": 19853,
											"end": 19857,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19845,
											"end": 19851,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 19841,
											"end": 19858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19830,
											"end": 19839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19811,
											"end": 19859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 19811,
											"end": 19859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19811,
											"end": 19859,
											"name": "tag",
											"source": 10,
											"value": "790"
										},
										{
											"begin": 19811,
											"end": 19859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19803,
											"end": 19809,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19796,
											"end": 19860,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 19718,
											"end": 19874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19695,
											"end": 19874,
											"name": "tag",
											"source": 10,
											"value": "789"
										},
										{
											"begin": 19695,
											"end": 19874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19920,
											"end": 19921,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19916,
											"end": 19917,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 19908,
											"end": 19914,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 19904,
											"end": 19918,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 19900,
											"end": 19922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19894,
											"end": 19898,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 19887,
											"end": 19923,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19285,
											"end": 20172,
											"name": "tag",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 19285,
											"end": 20172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19285,
											"end": 20172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18875,
											"end": 20178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18875,
											"end": 20178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18875,
											"end": 20178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18783,
											"end": 20178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18783,
											"end": 20178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18783,
											"end": 20178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20516,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 20184,
											"end": 20516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20343,
											"end": 20345,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20332,
											"end": 20341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20320,
											"end": 20346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20320,
											"end": 20346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20356,
											"end": 20427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "792"
										},
										{
											"begin": 20424,
											"end": 20425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20413,
											"end": 20422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20409,
											"end": 20426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20400,
											"end": 20406,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20356,
											"end": 20427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 20356,
											"end": 20427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20356,
											"end": 20427,
											"name": "tag",
											"source": 10,
											"value": "792"
										},
										{
											"begin": 20356,
											"end": 20427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 20505,
											"end": 20507,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20494,
											"end": 20503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 20508,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20481,
											"end": 20487,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 20437,
											"end": 20509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20509,
											"name": "tag",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 20437,
											"end": 20509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20516,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20516,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20522,
											"end": 20686,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20522,
											"end": 20686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20662,
											"end": 20678,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420737461747573000000000000000000000000000000000000"
										},
										{
											"begin": 20658,
											"end": 20659,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20650,
											"end": 20656,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20639,
											"end": 20679,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20522,
											"end": 20686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20522,
											"end": 20686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20692,
											"end": 21058,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 20692,
											"end": 21058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20834,
											"end": 20837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20855,
											"end": 20922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 20919,
											"end": 20921,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 20914,
											"end": 20917,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20855,
											"end": 20922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 20855,
											"end": 20922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20855,
											"end": 20922,
											"name": "tag",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 20855,
											"end": 20922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20848,
											"end": 20922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20848,
											"end": 20922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20931,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "797"
										},
										{
											"begin": 21020,
											"end": 21023,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20931,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20931,
											"end": 21024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20931,
											"end": 21024,
											"name": "tag",
											"source": 10,
											"value": "797"
										},
										{
											"begin": 20931,
											"end": 21024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21049,
											"end": 21051,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21044,
											"end": 21047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21040,
											"end": 21052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21033,
											"end": 21052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21033,
											"end": 21052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20692,
											"end": 21058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20692,
											"end": 21058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20692,
											"end": 21058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20692,
											"end": 21058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21064,
											"end": 21483,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 21064,
											"end": 21483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21230,
											"end": 21234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21268,
											"end": 21270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21257,
											"end": 21266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21245,
											"end": 21271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21245,
											"end": 21271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21317,
											"end": 21326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21311,
											"end": 21315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21307,
											"end": 21327,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21303,
											"end": 21304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21292,
											"end": 21301,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21288,
											"end": 21305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21281,
											"end": 21328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "799"
										},
										{
											"begin": 21471,
											"end": 21475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 21345,
											"end": 21476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21476,
											"name": "tag",
											"source": 10,
											"value": "799"
										},
										{
											"begin": 21345,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21337,
											"end": 21476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21337,
											"end": 21476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21064,
											"end": 21483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21064,
											"end": 21483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21064,
											"end": 21483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21064,
											"end": 21483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21489,
											"end": 21658,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 21489,
											"end": 21658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21629,
											"end": 21650,
											"name": "PUSH",
											"source": 10,
											"value": "4974656D206E6F742072657061697261626C6500000000000000000000000000"
										},
										{
											"begin": 21625,
											"end": 21626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21617,
											"end": 21623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21613,
											"end": 21627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21606,
											"end": 21651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21489,
											"end": 21658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21489,
											"end": 21658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21664,
											"end": 22030,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 21664,
											"end": 22030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21806,
											"end": 21809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21827,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "802"
										},
										{
											"begin": 21891,
											"end": 21893,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 21886,
											"end": 21889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21827,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 21827,
											"end": 21894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21827,
											"end": 21894,
											"name": "tag",
											"source": 10,
											"value": "802"
										},
										{
											"begin": 21827,
											"end": 21894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21820,
											"end": 21894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21820,
											"end": 21894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21903,
											"end": 21996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "803"
										},
										{
											"begin": 21992,
											"end": 21995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21903,
											"end": 21996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 21903,
											"end": 21996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21903,
											"end": 21996,
											"name": "tag",
											"source": 10,
											"value": "803"
										},
										{
											"begin": 21903,
											"end": 21996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22021,
											"end": 22023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22016,
											"end": 22019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22012,
											"end": 22024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21664,
											"end": 22030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21664,
											"end": 22030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21664,
											"end": 22030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21664,
											"end": 22030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22036,
											"end": 22455,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 22036,
											"end": 22455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22202,
											"end": 22206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22240,
											"end": 22242,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22229,
											"end": 22238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22225,
											"end": 22243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22217,
											"end": 22243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22217,
											"end": 22243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22289,
											"end": 22298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22283,
											"end": 22287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22279,
											"end": 22299,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22275,
											"end": 22276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22264,
											"end": 22273,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22260,
											"end": 22277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22253,
											"end": 22300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22317,
											"end": 22448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "805"
										},
										{
											"begin": 22443,
											"end": 22447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22317,
											"end": 22448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 22317,
											"end": 22448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22317,
											"end": 22448,
											"name": "tag",
											"source": 10,
											"value": "805"
										},
										{
											"begin": 22317,
											"end": 22448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22309,
											"end": 22448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22309,
											"end": 22448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22036,
											"end": 22455,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22036,
											"end": 22455,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22036,
											"end": 22455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22036,
											"end": 22455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22620,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 22461,
											"end": 22620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22601,
											"end": 22612,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22597,
											"end": 22598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22589,
											"end": 22595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22585,
											"end": 22599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22578,
											"end": 22613,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22626,
											"end": 22991,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 22626,
											"end": 22991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22768,
											"end": 22771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22789,
											"end": 22855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 22853,
											"end": 22854,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 22848,
											"end": 22851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22789,
											"end": 22855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 22789,
											"end": 22855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22789,
											"end": 22855,
											"name": "tag",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 22789,
											"end": 22855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22782,
											"end": 22855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22782,
											"end": 22855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "809"
										},
										{
											"begin": 22953,
											"end": 22956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 22864,
											"end": 22957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "tag",
											"source": 10,
											"value": "809"
										},
										{
											"begin": 22864,
											"end": 22957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22982,
											"end": 22984,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22977,
											"end": 22980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22973,
											"end": 22985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22966,
											"end": 22985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22966,
											"end": 22985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22626,
											"end": 22991,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22626,
											"end": 22991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22626,
											"end": 22991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22626,
											"end": 22991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23163,
											"end": 23167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23201,
											"end": 23203,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23190,
											"end": 23199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23186,
											"end": 23204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23250,
											"end": 23259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23244,
											"end": 23248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23240,
											"end": 23260,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23236,
											"end": 23237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23225,
											"end": 23234,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23221,
											"end": 23238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23214,
											"end": 23261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "811"
										},
										{
											"begin": 23404,
											"end": 23408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 23278,
											"end": 23409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "tag",
											"source": 10,
											"value": "811"
										},
										{
											"begin": 23278,
											"end": 23409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23270,
											"end": 23409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23571,
											"end": 23575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23609,
											"end": 23611,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 23598,
											"end": 23607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23594,
											"end": 23612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23586,
											"end": 23612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23586,
											"end": 23612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "813"
										},
										{
											"begin": 23690,
											"end": 23691,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23679,
											"end": 23688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23675,
											"end": 23692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23666,
											"end": 23672,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 23622,
											"end": 23693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23622,
											"end": 23693,
											"name": "tag",
											"source": 10,
											"value": "813"
										},
										{
											"begin": 23622,
											"end": 23693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23703,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 23771,
											"end": 23773,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23760,
											"end": 23769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23756,
											"end": 23774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23747,
											"end": 23753,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23703,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 23703,
											"end": 23775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23703,
											"end": 23775,
											"name": "tag",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 23703,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23785,
											"end": 23857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "815"
										},
										{
											"begin": 23853,
											"end": 23855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23842,
											"end": 23851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23838,
											"end": 23856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23829,
											"end": 23835,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23785,
											"end": 23857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 23785,
											"end": 23857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23785,
											"end": 23857,
											"name": "tag",
											"source": 10,
											"value": "815"
										},
										{
											"begin": 23785,
											"end": 23857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23870,
											"end": 24092,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 23870,
											"end": 24092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23963,
											"end": 23967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24001,
											"end": 24003,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23990,
											"end": 23999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23986,
											"end": 24004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23978,
											"end": 24004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23978,
											"end": 24004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24014,
											"end": 24085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "817"
										},
										{
											"begin": 24082,
											"end": 24083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24071,
											"end": 24080,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24067,
											"end": 24084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24058,
											"end": 24064,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24014,
											"end": 24085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 24014,
											"end": 24085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24014,
											"end": 24085,
											"name": "tag",
											"source": 10,
											"value": "817"
										},
										{
											"begin": 24014,
											"end": 24085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23870,
											"end": 24092,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23870,
											"end": 24092,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23870,
											"end": 24092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23870,
											"end": 24092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23870,
											"end": 24092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24098,
											"end": 24289,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 24098,
											"end": 24289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "819"
										},
										{
											"begin": 24175,
											"end": 24176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 24157,
											"end": 24177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "tag",
											"source": 10,
											"value": "819"
										},
										{
											"begin": 24157,
											"end": 24177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 24177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24152,
											"end": 24177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24191,
											"end": 24211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 24209,
											"end": 24210,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24191,
											"end": 24211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 24191,
											"end": 24211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24191,
											"end": 24211,
											"name": "tag",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 24191,
											"end": 24211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24186,
											"end": 24211,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24186,
											"end": 24211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24234,
											"end": 24235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24231,
											"end": 24232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24227,
											"end": 24236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24220,
											"end": 24236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24220,
											"end": 24236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24255,
											"end": 24258,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24252,
											"end": 24253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24249,
											"end": 24259,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 24246,
											"end": 24282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24246,
											"end": 24282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 24246,
											"end": 24282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24262,
											"end": 24280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "822"
										},
										{
											"begin": 24262,
											"end": 24280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 24262,
											"end": 24280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24262,
											"end": 24280,
											"name": "tag",
											"source": 10,
											"value": "822"
										},
										{
											"begin": 24262,
											"end": 24280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24246,
											"end": 24282,
											"name": "tag",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 24246,
											"end": 24282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24098,
											"end": 24289,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24098,
											"end": 24289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24098,
											"end": 24289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24098,
											"end": 24289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24098,
											"end": 24289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24509,
											"end": 24513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24547,
											"end": 24550,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 24536,
											"end": 24545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24532,
											"end": 24551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24524,
											"end": 24551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24524,
											"end": 24551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24561,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "824"
										},
										{
											"begin": 24638,
											"end": 24639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24627,
											"end": 24636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24623,
											"end": 24640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24614,
											"end": 24620,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 24561,
											"end": 24641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 24561,
											"end": 24641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24561,
											"end": 24641,
											"name": "tag",
											"source": 10,
											"value": "824"
										},
										{
											"begin": 24561,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24651,
											"end": 24723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "825"
										},
										{
											"begin": 24719,
											"end": 24721,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24708,
											"end": 24717,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24704,
											"end": 24722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24695,
											"end": 24701,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 24651,
											"end": 24723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 24651,
											"end": 24723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24651,
											"end": 24723,
											"name": "tag",
											"source": 10,
											"value": "825"
										},
										{
											"begin": 24651,
											"end": 24723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24733,
											"end": 24805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "826"
										},
										{
											"begin": 24801,
											"end": 24803,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24790,
											"end": 24799,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24786,
											"end": 24804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24777,
											"end": 24783,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 24733,
											"end": 24805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 24733,
											"end": 24805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24733,
											"end": 24805,
											"name": "tag",
											"source": 10,
											"value": "826"
										},
										{
											"begin": 24733,
											"end": 24805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24815,
											"end": 24887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 24883,
											"end": 24885,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 24872,
											"end": 24881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24868,
											"end": 24886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24859,
											"end": 24865,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24815,
											"end": 24887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 24815,
											"end": 24887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24815,
											"end": 24887,
											"name": "tag",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 24815,
											"end": 24887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "828"
										},
										{
											"begin": 24965,
											"end": 24968,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 24954,
											"end": 24963,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24950,
											"end": 24969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24941,
											"end": 24947,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 24897,
											"end": 24970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24970,
											"name": "tag",
											"source": 10,
											"value": "828"
										},
										{
											"begin": 24897,
											"end": 24970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24295,
											"end": 24977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24983,
											"end": 25315,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 24983,
											"end": 25315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25104,
											"end": 25108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25142,
											"end": 25144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25131,
											"end": 25140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25127,
											"end": 25145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25119,
											"end": 25145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25119,
											"end": 25145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25155,
											"end": 25226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "830"
										},
										{
											"begin": 25223,
											"end": 25224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25212,
											"end": 25221,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25208,
											"end": 25225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25199,
											"end": 25205,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25155,
											"end": 25226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 25155,
											"end": 25226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25155,
											"end": 25226,
											"name": "tag",
											"source": 10,
											"value": "830"
										},
										{
											"begin": 25155,
											"end": 25226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25236,
											"end": 25308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "831"
										},
										{
											"begin": 25304,
											"end": 25306,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25293,
											"end": 25302,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25289,
											"end": 25307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25280,
											"end": 25286,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25236,
											"end": 25308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 25236,
											"end": 25308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25236,
											"end": 25308,
											"name": "tag",
											"source": 10,
											"value": "831"
										},
										{
											"begin": 25236,
											"end": 25308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24983,
											"end": 25315,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24983,
											"end": 25315,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24983,
											"end": 25315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24983,
											"end": 25315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24983,
											"end": 25315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24983,
											"end": 25315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25321,
											"end": 25731,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 25321,
											"end": 25731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25361,
											"end": 25368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25384,
											"end": 25404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 25402,
											"end": 25403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25384,
											"end": 25404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 25384,
											"end": 25404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25384,
											"end": 25404,
											"name": "tag",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 25384,
											"end": 25404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25379,
											"end": 25404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25379,
											"end": 25404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25418,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "834"
										},
										{
											"begin": 25436,
											"end": 25437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25418,
											"end": 25438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 25418,
											"end": 25438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25418,
											"end": 25438,
											"name": "tag",
											"source": 10,
											"value": "834"
										},
										{
											"begin": 25418,
											"end": 25438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25438,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25473,
											"end": 25474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25470,
											"end": 25471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25466,
											"end": 25475,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 25495,
											"end": 25525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "835"
										},
										{
											"begin": 25513,
											"end": 25524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25495,
											"end": 25525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 25495,
											"end": 25525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25495,
											"end": 25525,
											"name": "tag",
											"source": 10,
											"value": "835"
										},
										{
											"begin": 25495,
											"end": 25525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25484,
											"end": 25525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25484,
											"end": 25525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25674,
											"end": 25675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25665,
											"end": 25672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25661,
											"end": 25676,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 25658,
											"end": 25659,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25655,
											"end": 25677,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 25635,
											"end": 25636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25628,
											"end": 25637,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 25608,
											"end": 25691,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 25585,
											"end": 25724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "836"
										},
										{
											"begin": 25585,
											"end": 25724,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 25704,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "837"
										},
										{
											"begin": 25704,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 25704,
											"end": 25722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25704,
											"end": 25722,
											"name": "tag",
											"source": 10,
											"value": "837"
										},
										{
											"begin": 25704,
											"end": 25722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25585,
											"end": 25724,
											"name": "tag",
											"source": 10,
											"value": "836"
										},
										{
											"begin": 25585,
											"end": 25724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25369,
											"end": 25731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25321,
											"end": 25731,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25321,
											"end": 25731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25321,
											"end": 25731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25321,
											"end": 25731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25321,
											"end": 25731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/EWasteToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"BASE_COLLECTION_REWARD()": "cb963a39",
							"BASE_DISMANTLE_REWARD()": "ed276caf",
							"BASE_DISPOSAL_REWARD()": "74e4d700",
							"BASE_RECYCLING_REWARD()": "c53b4b09",
							"BASE_REPAIR_REWARD()": "b8fe58e4",
							"COLLECTOR_ROLE()": "9ca39ae9",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISMANTLER_ROLE()": "579108f7",
							"PER_GRAM_REWARD()": "65258b66",
							"PER_ITEM_REWARD()": "0f555c54",
							"RECYCLER_ROLE()": "bf313778",
							"REPAIRER_ROLE()": "be651316",
							"addRole(address,bytes32)": "a73f7f8a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"collectItem(uint256)": "3609a1eb",
							"createItem(string,uint256,uint256,bool)": "352b6dc3",
							"decimals()": "313ce567",
							"dismantleItem(uint256)": "91810674",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"itemCounter()": "6d6d00ed",
							"markAsRepairable(uint256)": "990281b8",
							"mintTokens(address,uint256)": "f0dda65c",
							"name()": "06fdde03",
							"recycleItem(uint256)": "855c72fb",
							"renounceRole(bytes32,address)": "36568abe",
							"repairItem(uint256)": "8287662c",
							"resellItem(uint256)": "d8101dcd",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"wasteItems(uint256)": "091929c0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ItemCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"ItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dismantler\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ItemDismantled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"}],\"name\":\"ItemMarkedRepairable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recycler\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ItemRecycled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repairer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ItemRepaired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ItemResold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum EWasteToken.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityBonus\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weightBonus\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"}],\"name\":\"RewardCalculated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_COLLECTION_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_DISMANTLE_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_DISPOSAL_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_RECYCLING_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_REPAIR_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COLLECTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISMANTLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PER_GRAM_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PER_ITEM_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RECYCLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REPAIRER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"addRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"collectItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_itemType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isRepairable\",\"type\":\"bool\"}],\"name\":\"createItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"dismantleItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"itemCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"markAsRepairable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"recycleItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"repairItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"resellItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wasteItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"itemType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"enum EWasteToken.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"currentHandler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRepairable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EWasteToken.sol\":\"EWasteToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/EWasteToken.sol\":{\"keccak256\":\"0x2f8f32bbe2e3403df52856166a2ac165a539e926a5bb2d35a45141247581a648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://926eaa4ce1e4b8f30ee414224ce01d26a3c5feec7af325363e8fc1e324f6b041\",\"dweb:/ipfs/QmZsFhM1TYSCG2igY677VyJp22wqDRy8u6doFfgmyF7nAg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1285,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "wasteItems",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(WasteItem)1272_storage)"
							},
							{
								"astId": 1287,
								"contract": "contracts/EWasteToken.sol:EWasteToken",
								"label": "itemCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Status)1280": {
								"encoding": "inplace",
								"label": "enum EWasteToken.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_struct(WasteItem)1272_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct EWasteToken.WasteItem)",
								"numberOfBytes": "32",
								"value": "t_struct(WasteItem)1272_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WasteItem)1272_storage": {
								"encoding": "inplace",
								"label": "struct EWasteToken.WasteItem",
								"members": [
									{
										"astId": 1256,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1258,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "creator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1260,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "itemType",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 1262,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "weight",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1264,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "quantity",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1267,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "status",
										"offset": 0,
										"slot": "5",
										"type": "t_enum(Status)1280"
									},
									{
										"astId": 1269,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "currentHandler",
										"offset": 1,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 1271,
										"contract": "contracts/EWasteToken.sol:EWasteToken",
										"label": "isRepairable",
										"offset": 21,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1165,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1189,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1135,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1165,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1133:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1142:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "1150:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 1030,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 1030,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 1030,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 1030,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 1030,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 1030,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 1030,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 1030,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 1030,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 1030,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 1030,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 1030,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 1030,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 1030,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 1030,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 1030,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 1030,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1106:9787:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1108,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1108,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1108,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1108,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1108,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1108,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1109,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "306:6:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1134,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1134,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1130,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1134,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1144,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1164,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1164,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1164,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1188
						],
						"IERC165": [
							1200
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1201,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1200,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "IERC165",
										"nameLocations": [
											"688:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "688:7:7"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1200
							],
							"name": "ERC165",
							"nameLocation": "678:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "845:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "862:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "882:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1180,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1200",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1185,
												"nodeType": "Return",
												"src": "855:47:7"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "790:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "839:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:7"
									},
									"scope": 1188,
									"src": "763:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1189,
							"src": "660:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1200
						]
					},
					"id": 1201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 1200,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1201,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"contracts/EWasteToken.sol": {
				"ast": {
					"absolutePath": "contracts/EWasteToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"ERC20": [
							1030
						],
						"EWasteToken": [
							1946
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 1031,
							"src": "60:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 296,
							"src": "117:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1205,
										"name": "ERC20",
										"nameLocations": [
											"203:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "203:5:9"
									},
									"id": 1206,
									"nodeType": "InheritanceSpecifier",
									"src": "203:5:9"
								},
								{
									"baseName": {
										"id": 1207,
										"name": "AccessControl",
										"nameLocations": [
											"210:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "210:13:9"
									},
									"id": 1208,
									"nodeType": "InheritanceSpecifier",
									"src": "210:13:9"
								}
							],
							"canonicalName": "EWasteToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1946,
							"linearizedBaseContracts": [
								1946,
								295,
								1188,
								1200,
								378,
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "EWasteToken",
							"nameLocation": "188:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "9ca39ae9",
									"id": 1213,
									"mutability": "constant",
									"name": "COLLECTOR_ROLE",
									"nameLocation": "269:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "245:68:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1209,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "245:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "434f4c4c4543544f525f524f4c45",
												"id": 1211,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "296:16:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d2",
													"typeString": "literal_string \"COLLECTOR_ROLE\""
												},
												"value": "COLLECTOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_14cf45180c3fcf249a5a305e9657ea05c14fd4f4e1800ee0216a8213091711d2",
													"typeString": "literal_string \"COLLECTOR_ROLE\""
												}
											],
											"id": 1210,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "286:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1212,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "286:27:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bf313778",
									"id": 1218,
									"mutability": "constant",
									"name": "RECYCLER_ROLE",
									"nameLocation": "344:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "320:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1214,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "320:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "52454359434c45525f524f4c45",
												"id": 1216,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "370:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd154",
													"typeString": "literal_string \"RECYCLER_ROLE\""
												},
												"value": "RECYCLER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_11d2c681bc9c10ed61f9a422c0dbaaddc4054ce58ec726aca73e7e4d31bcd154",
													"typeString": "literal_string \"RECYCLER_ROLE\""
												}
											],
											"id": 1215,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "360:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "360:26:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "579108f7",
									"id": 1223,
									"mutability": "constant",
									"name": "DISMANTLER_ROLE",
									"nameLocation": "417:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "393:70:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1219,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "393:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4449534d414e544c45525f524f4c45",
												"id": 1221,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "445:17:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c755",
													"typeString": "literal_string \"DISMANTLER_ROLE\""
												},
												"value": "DISMANTLER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b636cac4a39cbee3063d40395f1623a30746f1c8bc201ced0489c50a6345c755",
													"typeString": "literal_string \"DISMANTLER_ROLE\""
												}
											],
											"id": 1220,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "435:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "435:28:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "be651316",
									"id": 1228,
									"mutability": "constant",
									"name": "REPAIRER_ROLE",
									"nameLocation": "494:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "470:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1224,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "52455041495245525f524f4c45",
												"id": 1226,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "520:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e7",
													"typeString": "literal_string \"REPAIRER_ROLE\""
												},
												"value": "REPAIRER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ab5c443dd93b1877c3b155b5e3ddb79cb901fd6f9d2e3bd366f3216a80b889e7",
													"typeString": "literal_string \"REPAIRER_ROLE\""
												}
											],
											"id": 1225,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "510:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "510:26:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1233,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "567:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "543:60:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1229,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "543:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1231,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "590:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1230,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "580:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "580:23:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "74e4d700",
									"id": 1236,
									"mutability": "constant",
									"name": "BASE_DISPOSAL_REWARD",
									"nameLocation": "661:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "637:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1234,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "637:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1235,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "684:8:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cb963a39",
									"id": 1239,
									"mutability": "constant",
									"name": "BASE_COLLECTION_REWARD",
									"nameLocation": "723:22:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "699:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1237,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "699:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1238,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "748:7:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000000_by_1",
											"typeString": "int_const 5000000000000000000"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c53b4b09",
									"id": 1242,
									"mutability": "constant",
									"name": "BASE_RECYCLING_REWARD",
									"nameLocation": "786:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "762:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "762:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 1241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "810:7:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7000000000000000000_by_1",
											"typeString": "int_const 7000000000000000000"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b8fe58e4",
									"id": 1245,
									"mutability": "constant",
									"name": "BASE_REPAIR_REWARD",
									"nameLocation": "848:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "824:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 1244,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "869:7:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8000000000000000000_by_1",
											"typeString": "int_const 8000000000000000000"
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ed276caf",
									"id": 1248,
									"mutability": "constant",
									"name": "BASE_DISMANTLE_REWARD",
									"nameLocation": "907:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "883:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1246,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "883:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1247,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "931:7:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6000000000000000000_by_1",
											"typeString": "int_const 6000000000000000000"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0f555c54",
									"id": 1251,
									"mutability": "constant",
									"name": "PER_ITEM_REWARD",
									"nameLocation": "969:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "945:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1249,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "945:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1250,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "987:7:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "65258b66",
									"id": 1254,
									"mutability": "constant",
									"name": "PER_GRAM_REWARD",
									"nameLocation": "1025:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "1001:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1252,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1001:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3031",
										"id": 1253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1043:10:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "0.01"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "EWasteToken.WasteItem",
									"id": 1272,
									"members": [
										{
											"constant": false,
											"id": 1256,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1098:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1090:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1255,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1090:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1258,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "1119:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1111:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1257,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1111:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1260,
											"mutability": "mutable",
											"name": "itemType",
											"nameLocation": "1144:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1137:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1259,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1137:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1262,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "1171:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1163:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1261,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1264,
											"mutability": "mutable",
											"name": "quantity",
											"nameLocation": "1196:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1188:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1263,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1188:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1267,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "1222:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1215:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Status_$1280",
												"typeString": "enum EWasteToken.Status"
											},
											"typeName": {
												"id": 1266,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1265,
													"name": "Status",
													"nameLocations": [
														"1215:6:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1280,
													"src": "1215:6:9"
												},
												"referencedDeclaration": 1280,
												"src": "1215:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$1280",
													"typeString": "enum EWasteToken.Status"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1269,
											"mutability": "mutable",
											"name": "currentHandler",
											"nameLocation": "1247:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1239:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1268,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1239:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1271,
											"mutability": "mutable",
											"name": "isRepairable",
											"nameLocation": "1277:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1272,
											"src": "1272:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1270,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1272:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WasteItem",
									"nameLocation": "1069:9:9",
									"nodeType": "StructDefinition",
									"scope": 1946,
									"src": "1062:235:9",
									"visibility": "public"
								},
								{
									"canonicalName": "EWasteToken.Status",
									"id": 1280,
									"members": [
										{
											"id": 1273,
											"name": "CREATED",
											"nameLocation": "1329:7:9",
											"nodeType": "EnumValue",
											"src": "1329:7:9"
										},
										{
											"id": 1274,
											"name": "COLLECTED",
											"nameLocation": "1348:9:9",
											"nodeType": "EnumValue",
											"src": "1348:9:9"
										},
										{
											"id": 1275,
											"name": "REPAIRABLE",
											"nameLocation": "1369:10:9",
											"nodeType": "EnumValue",
											"src": "1369:10:9"
										},
										{
											"id": 1276,
											"name": "REPAIRED",
											"nameLocation": "1390:8:9",
											"nodeType": "EnumValue",
											"src": "1390:8:9"
										},
										{
											"id": 1277,
											"name": "RECYCLED",
											"nameLocation": "1409:8:9",
											"nodeType": "EnumValue",
											"src": "1409:8:9"
										},
										{
											"id": 1278,
											"name": "DISMANTLED",
											"nameLocation": "1429:10:9",
											"nodeType": "EnumValue",
											"src": "1429:10:9"
										},
										{
											"id": 1279,
											"name": "RESOLD",
											"nameLocation": "1451:6:9",
											"nodeType": "EnumValue",
											"src": "1451:6:9"
										}
									],
									"name": "Status",
									"nameLocation": "1310:6:9",
									"nodeType": "EnumDefinition",
									"src": "1305:160:9"
								},
								{
									"constant": false,
									"functionSelector": "091929c0",
									"id": 1285,
									"mutability": "mutable",
									"name": "wasteItems",
									"nameLocation": "1510:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "1473:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
										"typeString": "mapping(uint256 => struct EWasteToken.WasteItem)"
									},
									"typeName": {
										"id": 1284,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1281,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1481:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1473:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
											"typeString": "mapping(uint256 => struct EWasteToken.WasteItem)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1283,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1282,
												"name": "WasteItem",
												"nameLocations": [
													"1492:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1272,
												"src": "1492:9:9"
											},
											"referencedDeclaration": 1272,
											"src": "1492:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WasteItem_$1272_storage_ptr",
												"typeString": "struct EWasteToken.WasteItem"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d6d00ed",
									"id": 1287,
									"mutability": "mutable",
									"name": "itemCounter",
									"nameLocation": "1542:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "1527:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1527:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "46d5e1fa50133f2ad2b0346ff4a3f42484fe3bb406c6c15fd7ae095d10b12581",
									"id": 1297,
									"name": "ItemCreated",
									"nameLocation": "1616:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1644:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1628:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "1664:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1648:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "1681:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1673:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "1699:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1691:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:79:9"
									},
									"src": "1610:97:9"
								},
								{
									"anonymous": false,
									"eventSelector": "2a18ae28442ec525b81831921d81b734ce7861d68a812e4546c7945075766f1d",
									"id": 1305,
									"name": "ItemCollected",
									"nameLocation": "1719:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1749:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1733:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"indexed": true,
												"mutability": "mutable",
												"name": "collector",
												"nameLocation": "1769:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1753:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1788:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1780:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:63:9"
									},
									"src": "1713:83:9"
								},
								{
									"anonymous": false,
									"eventSelector": "d0ff3b517d0c850b614729642e089a59aea81eb4ba36827eafe9b43b404da0d7",
									"id": 1311,
									"name": "ItemMarkedRepairable",
									"nameLocation": "1808:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1845:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1829:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"indexed": true,
												"mutability": "mutable",
												"name": "collector",
												"nameLocation": "1865:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1849:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:47:9"
									},
									"src": "1802:74:9"
								},
								{
									"anonymous": false,
									"eventSelector": "e5e46d59e99676fbf7547ce5cc7583dc849e2af037032e0f6611224b75bb8967",
									"id": 1319,
									"name": "ItemRepaired",
									"nameLocation": "1888:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1917:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1901:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"indexed": true,
												"mutability": "mutable",
												"name": "repairer",
												"nameLocation": "1937:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1921:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1955:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1947:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1947:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:62:9"
									},
									"src": "1882:81:9"
								},
								{
									"anonymous": false,
									"eventSelector": "3f0bdd39c575256b0686bbbc300a04a9c5828c01f9cc42a0179879b48b8eeddf",
									"id": 1327,
									"name": "ItemRecycled",
									"nameLocation": "1975:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2004:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1988:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "recycler",
												"nameLocation": "2024:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2008:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2042:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2034:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:62:9"
									},
									"src": "1969:81:9"
								},
								{
									"anonymous": false,
									"eventSelector": "77b29112f6bbaf1890ec3f52fb1f9ef0367e0babd3bcb3aa7d123b7a7734a54c",
									"id": 1335,
									"name": "ItemDismantled",
									"nameLocation": "2062:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2093:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2077:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"indexed": true,
												"mutability": "mutable",
												"name": "dismantler",
												"nameLocation": "2113:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2097:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2133:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "2125:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:64:9"
									},
									"src": "2056:85:9"
								},
								{
									"anonymous": false,
									"eventSelector": "278ab484a5db5fc05f3a869b94767b4a630943a85f774aa97a69aedb086c269c",
									"id": 1341,
									"name": "ItemResold",
									"nameLocation": "2153:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2180:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2164:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "2200:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2184:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:44:9"
									},
									"src": "2147:61:9"
								},
								{
									"anonymous": false,
									"eventSelector": "8841d639ba79954a7c240dde37b5d6e3990383dc2f87c13e288e408108efb457",
									"id": 1356,
									"name": "RewardCalculated",
									"nameLocation": "2255:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2298:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2282:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2318:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2311:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$1280",
													"typeString": "enum EWasteToken.Status"
												},
												"typeName": {
													"id": 1345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1344,
														"name": "Status",
														"nameLocations": [
															"2311:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "2311:6:9"
													},
													"referencedDeclaration": 1280,
													"src": "2311:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseReward",
												"nameLocation": "2343:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2335:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantityBonus",
												"nameLocation": "2372:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2364:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"indexed": false,
												"mutability": "mutable",
												"name": "weightBonus",
												"nameLocation": "2404:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2396:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "2434:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2426:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:181:9"
									},
									"src": "2249:204:9"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "2503:163:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1364,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2525:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1365,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2545:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2549:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2545:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1363,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2514:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "2514:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "2578:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2590:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2594:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2590:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1369,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2567:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2567:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "2567:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1376,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2618:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2622:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2618:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31305f3030305f303030",
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2630:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000_by_1",
																	"typeString": "int_const 10000000"
																},
																"value": "10_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2643:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1380,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "2647:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2647:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2643:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2630:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1375,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2612:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2612:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "2612:46:9"
											}
										]
									},
									"id": 1387,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "455761737465546f6b656e",
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2481:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cc8e23a8c1b774cd1947507df51f1b69c567c523780cbd7e07b19c6357a3c73f",
														"typeString": "literal_string \"EWasteToken\""
													},
													"value": "EWasteToken"
												},
												{
													"hexValue": "455754",
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2496:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6754fb9871dfeb44851fa9766e37080e224893b541532901f4d2bf45ec257902",
														"typeString": "literal_string \"EWT\""
													},
													"value": "EWT"
												}
											],
											"id": 1361,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1358,
												"name": "ERC20",
												"nameLocations": [
													"2475:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "2475:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2475:27:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2472:2:9"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2503:0:9"
									},
									"scope": 1946,
									"src": "2461:205:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "2827:597:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1399,
																	"name": "_quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "2846:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2858:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2846:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1402,
																	"name": "_weight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "2863:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2873:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2863:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2846:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e707574",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2876:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															},
															"value": "Invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															}
														],
														"id": 1398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2838:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2838:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2838:54:9"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "newId",
														"nameLocation": "2921:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1440,
														"src": "2913:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2929:13:9",
													"subExpression": {
														"id": 1411,
														"name": "itemCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "2929:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:29:9"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1414,
															"name": "wasteItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "2953:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
															}
														},
														"id": 1416,
														"indexExpression": {
															"id": 1415,
															"name": "newId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "2964:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2953:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
															"typeString": "struct EWasteToken.WasteItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1418,
																"name": "newId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3002:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1419,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3031:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3035:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3031:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1421,
																"name": "_itemType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3066:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1422,
																"name": "_weight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "3098:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1423,
																"name": "_quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "3130:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1424,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "3162:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3169:7:9",
																"memberName": "CREATED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1273,
																"src": "3162:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															{
																"expression": {
																	"id": 1426,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3207:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3211:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3207:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1428,
																"name": "_isRepairable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "3246:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1417,
															"name": "WasteItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "2973:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_WasteItem_$1272_storage_ptr_$",
																"typeString": "type(struct EWasteToken.WasteItem storage pointer)"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2998:2:9",
															"3022:7:9",
															"3056:8:9",
															"3090:6:9",
															"3120:8:9",
															"3154:6:9",
															"3191:14:9",
															"3232:12:9"
														],
														"names": [
															"id",
															"creator",
															"itemType",
															"weight",
															"quantity",
															"status",
															"currentHandler",
															"isRepairable"
														],
														"nodeType": "FunctionCall",
														"src": "2973:298:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WasteItem_$1272_memory_ptr",
															"typeString": "struct EWasteToken.WasteItem memory"
														}
													},
													"src": "2953:318:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
														"typeString": "struct EWasteToken.WasteItem storage ref"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2953:318:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1433,
															"name": "newId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "3378:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1434,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3385:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3389:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3385:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1436,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "3397:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1437,
															"name": "_weight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3408:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "ItemCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "3366:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3366:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "EmitStatement",
												"src": "3361:55:9"
											}
										]
									},
									"functionSelector": "352b6dc3",
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createItem",
									"nameLocation": "2683:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_itemType",
												"nameLocation": "2718:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2704:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2704:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_weight",
												"nameLocation": "2746:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2738:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "2772:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2764:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "_isRepairable",
												"nameLocation": "2797:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2792:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2792:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:124:9"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2827:0:9"
									},
									"scope": 1946,
									"src": "2674:750:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "3500:330:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1450,
																		"name": "wasteItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "3519:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																			"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																		}
																	},
																	"id": 1452,
																	"indexExpression": {
																		"id": 1451,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "3530:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3519:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																		"typeString": "struct EWasteToken.WasteItem storage ref"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3535:6:9",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1267,
																"src": "3519:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1454,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "3545:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3552:7:9",
																"memberName": "CREATED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1273,
																"src": "3545:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"src": "3519:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737461747573",
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3561:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															},
															"value": "Invalid status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															}
														],
														"id": 1449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3511:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3511:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "3511:67:9"
											},
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1460,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3589:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1462,
															"indexExpression": {
																"id": 1461,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "3600:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3589:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3605:6:9",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "3589:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1464,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "3614:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3621:9:9",
														"memberName": "COLLECTED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1274,
														"src": "3614:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "3589:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "3589:41:9"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1468,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3641:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1470,
															"indexExpression": {
																"id": 1469,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "3652:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3641:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3657:14:9",
														"memberName": "currentHandler",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1269,
														"src": "3641:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1472,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3674:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3678:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3674:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3641:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "3641:43:9"
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3713:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1491,
														"src": "3705:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3705:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1483,
												"initialValue": {
													"arguments": [
														{
															"id": 1479,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "3746:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1480,
																"name": "Status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "3751:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																	"typeString": "type(enum EWasteToken.Status)"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3758:9:9",
															"memberName": "COLLECTED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1274,
															"src": "3751:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														],
														"id": 1478,
														"name": "_calculateAndMintReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "3722:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Status_$1280_$returns$_t_uint256_$",
															"typeString": "function (uint256,enum EWasteToken.Status) returns (uint256)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3722:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3705:63:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1485,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "3798:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1486,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3803:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3807:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3803:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "3815:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1484,
														"name": "ItemCollected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "3784:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3784:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "EmitStatement",
												"src": "3779:43:9"
											}
										]
									},
									"functionSelector": "3609a1eb",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1446,
													"name": "COLLECTOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1213,
													"src": "3484:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1445,
												"name": "onlyRole",
												"nameLocations": [
													"3475:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3475:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3475:24:9"
										}
									],
									"name": "collectItem",
									"nameLocation": "3441:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3461:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "3453:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:13:9"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:9"
									},
									"scope": 1946,
									"src": "3432:398:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "3911:275:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1501,
																		"name": "wasteItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "3930:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																			"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																		}
																	},
																	"id": 1503,
																	"indexExpression": {
																		"id": 1502,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "3941:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3930:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																		"typeString": "struct EWasteToken.WasteItem storage ref"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3946:6:9",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1267,
																"src": "3930:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1505,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "3956:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3963:9:9",
																"memberName": "COLLECTED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1274,
																"src": "3956:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"src": "3930:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737461747573",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3974:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															},
															"value": "Invalid status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															}
														],
														"id": 1500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3922:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3922:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "3922:69:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1512,
																	"name": "wasteItems",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "4010:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																		"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																	}
																},
																"id": 1514,
																"indexExpression": {
																	"id": 1513,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1494,
																	"src": "4021:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4010:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																	"typeString": "struct EWasteToken.WasteItem storage ref"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4026:12:9",
															"memberName": "isRepairable",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1271,
															"src": "4010:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206e6f742072657061697261626c65",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4040:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c",
																"typeString": "literal_string \"Item not repairable\""
															},
															"value": "Item not repairable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84cb097d1942afa60c842b990ad40b21b8a6a1150ae254048fe3ea9fe0eba05c",
																"typeString": "literal_string \"Item not repairable\""
															}
														],
														"id": 1511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4002:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4002:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "4002:60:9"
											},
											{
												"expression": {
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1519,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "4083:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1521,
															"indexExpression": {
																"id": 1520,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "4094:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4083:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4099:6:9",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "4083:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1523,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "4108:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4115:10:9",
														"memberName": "REPAIRABLE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1275,
														"src": "4108:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "4083:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "4083:42:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1528,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4162:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4167:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4171:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4167:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1527,
														"name": "ItemMarkedRepairable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "4141:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4141:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "EmitStatement",
												"src": "4136:42:9"
											}
										]
									},
									"functionSelector": "990281b8",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1497,
													"name": "COLLECTOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1213,
													"src": "3895:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1498,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1496,
												"name": "onlyRole",
												"nameLocations": [
													"3886:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3886:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3886:24:9"
										}
									],
									"name": "markAsRepairable",
									"nameLocation": "3847:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3872:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3864:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:13:9"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3911:0:9"
									},
									"scope": 1946,
									"src": "3838:348:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "4260:340:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1543,
																		"name": "wasteItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "4279:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																			"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																		}
																	},
																	"id": 1545,
																	"indexExpression": {
																		"id": 1544,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "4290:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4279:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																		"typeString": "struct EWasteToken.WasteItem storage ref"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4295:6:9",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1267,
																"src": "4279:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1547,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "4305:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4312:10:9",
																"memberName": "REPAIRABLE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1275,
																"src": "4305:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"src": "4279:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737461747573",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4324:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															},
															"value": "Invalid status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															}
														],
														"id": 1542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4271:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4271:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "4271:70:9"
											},
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1553,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "4362:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1555,
															"indexExpression": {
																"id": 1554,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "4373:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4362:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4378:6:9",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "4362:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1557,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "4387:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4394:8:9",
														"memberName": "REPAIRED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "4387:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "4362:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "4362:40:9"
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1561,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "4413:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1563,
															"indexExpression": {
																"id": 1562,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "4424:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4413:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4429:14:9",
														"memberName": "currentHandler",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1269,
														"src": "4413:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1565,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4446:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4450:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4446:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4413:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "4413:43:9"
											},
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4485:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1584,
														"src": "4477:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4477:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1576,
												"initialValue": {
													"arguments": [
														{
															"id": 1572,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "4518:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1573,
																"name": "Status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "4523:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																	"typeString": "type(enum EWasteToken.Status)"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4530:8:9",
															"memberName": "REPAIRED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1276,
															"src": "4523:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														],
														"id": 1571,
														"name": "_calculateAndMintReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "4494:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Status_$1280_$returns$_t_uint256_$",
															"typeString": "function (uint256,enum EWasteToken.Status) returns (uint256)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4494:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4477:62:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1578,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "4568:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1579,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4573:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4577:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4573:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1581,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "4585:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1577,
														"name": "ItemRepaired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4555:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "4550:42:9"
											}
										]
									},
									"functionSelector": "8287662c",
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1539,
													"name": "REPAIRER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1228,
													"src": "4245:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1538,
												"name": "onlyRole",
												"nameLocations": [
													"4236:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4236:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4236:23:9"
										}
									],
									"name": "repairItem",
									"nameLocation": "4203:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4222:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "4214:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4213:13:9"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4260:0:9"
									},
									"scope": 1946,
									"src": "4194:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "4675:435:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1594,
																			"name": "wasteItems",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "4708:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																				"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																			}
																		},
																		"id": 1596,
																		"indexExpression": {
																			"id": 1595,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1587,
																			"src": "4719:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4708:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																			"typeString": "struct EWasteToken.WasteItem storage ref"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4724:6:9",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1267,
																	"src": "4708:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1280",
																		"typeString": "enum EWasteToken.Status"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1598,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "4734:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																			"typeString": "type(enum EWasteToken.Status)"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4741:9:9",
																	"memberName": "COLLECTED",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "4734:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1280",
																		"typeString": "enum EWasteToken.Status"
																	}
																},
																"src": "4708:42:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1601,
																			"name": "wasteItems",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "4768:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																				"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																			}
																		},
																		"id": 1603,
																		"indexExpression": {
																			"id": 1602,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1587,
																			"src": "4779:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4768:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																			"typeString": "struct EWasteToken.WasteItem storage ref"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4784:6:9",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1267,
																	"src": "4768:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1280",
																		"typeString": "enum EWasteToken.Status"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1605,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "4794:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																			"typeString": "type(enum EWasteToken.Status)"
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4801:8:9",
																	"memberName": "REPAIRED",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1276,
																	"src": "4794:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1280",
																		"typeString": "enum EWasteToken.Status"
																	}
																},
																"src": "4768:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4708:101:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737461747573",
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4824:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															},
															"value": "Invalid status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															}
														],
														"id": 1593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4686:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:165:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "4686:165:9"
											},
											{
												"expression": {
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1612,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "4872:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1614,
															"indexExpression": {
																"id": 1613,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "4883:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4872:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4888:6:9",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "4872:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1616,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "4897:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4904:8:9",
														"memberName": "RECYCLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1277,
														"src": "4897:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "4872:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "4872:40:9"
											},
											{
												"expression": {
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1620,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "4923:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1622,
															"indexExpression": {
																"id": 1621,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "4934:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4923:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4939:14:9",
														"memberName": "currentHandler",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1269,
														"src": "4923:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1624,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4956:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4960:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4956:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4923:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "4923:43:9"
											},
											{
												"assignments": [
													1629
												],
												"declarations": [
													{
														"constant": false,
														"id": 1629,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4995:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "4987:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4987:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": {
													"arguments": [
														{
															"id": 1631,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "5028:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1632,
																"name": "Status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "5033:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																	"typeString": "type(enum EWasteToken.Status)"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5040:8:9",
															"memberName": "RECYCLED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1277,
															"src": "5033:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														],
														"id": 1630,
														"name": "_calculateAndMintReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "5004:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Status_$1280_$returns$_t_uint256_$",
															"typeString": "function (uint256,enum EWasteToken.Status) returns (uint256)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5004:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4987:62:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1637,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "5078:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1638,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5083:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5087:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5083:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "5095:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1636,
														"name": "ItemRecycled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5065:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5065:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "EmitStatement",
												"src": "5060:42:9"
											}
										]
									},
									"functionSelector": "855c72fb",
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1590,
													"name": "RECYCLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1218,
													"src": "4660:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1591,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1589,
												"name": "onlyRole",
												"nameLocations": [
													"4651:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4651:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4651:23:9"
										}
									],
									"name": "recycleItem",
									"nameLocation": "4617:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4637:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "4629:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4629:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4628:13:9"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4675:0:9"
									},
									"scope": 1946,
									"src": "4608:502:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "5189:344:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1653,
																		"name": "wasteItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5208:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																			"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																		}
																	},
																	"id": 1655,
																	"indexExpression": {
																		"id": 1654,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "5219:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5208:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																		"typeString": "struct EWasteToken.WasteItem storage ref"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5224:6:9",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1267,
																"src": "5208:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1657,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "5234:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5241:8:9",
																"memberName": "RECYCLED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1277,
																"src": "5234:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"src": "5208:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737461747573",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5251:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															},
															"value": "Invalid status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															}
														],
														"id": 1652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5200:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5200:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "5200:68:9"
											},
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1663,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "5289:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1665,
															"indexExpression": {
																"id": 1664,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5300:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5289:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5305:6:9",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "5289:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1667,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "5314:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5321:10:9",
														"memberName": "DISMANTLED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1278,
														"src": "5314:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "5289:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "5289:42:9"
											},
											{
												"expression": {
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1671,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "5342:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1673,
															"indexExpression": {
																"id": 1672,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5353:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5342:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5358:14:9",
														"memberName": "currentHandler",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1269,
														"src": "5342:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1675,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5375:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5379:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5375:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5342:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "5342:43:9"
											},
											{
												"assignments": [
													1680
												],
												"declarations": [
													{
														"constant": false,
														"id": 1680,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5414:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1694,
														"src": "5406:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1679,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5406:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1686,
												"initialValue": {
													"arguments": [
														{
															"id": 1682,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "5447:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1683,
																"name": "Status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "5452:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																	"typeString": "type(enum EWasteToken.Status)"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5459:10:9",
															"memberName": "DISMANTLED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1278,
															"src": "5452:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														],
														"id": 1681,
														"name": "_calculateAndMintReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "5423:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Status_$1280_$returns$_t_uint256_$",
															"typeString": "function (uint256,enum EWasteToken.Status) returns (uint256)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5406:64:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1688,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "5501:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1689,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5506:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5510:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5506:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1691,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "5518:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1687,
														"name": "ItemDismantled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "5486:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5486:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "EmitStatement",
												"src": "5481:44:9"
											}
										]
									},
									"functionSelector": "91810674",
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1649,
													"name": "DISMANTLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1223,
													"src": "5172:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1650,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1648,
												"name": "onlyRole",
												"nameLocations": [
													"5163:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5163:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5163:25:9"
										}
									],
									"name": "dismantleItem",
									"nameLocation": "5127:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5149:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "5141:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5140:13:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5189:0:9"
									},
									"scope": 1946,
									"src": "5118:415:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "5583:268:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1701,
																		"name": "wasteItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5602:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																			"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																		}
																	},
																	"id": 1703,
																	"indexExpression": {
																		"id": 1702,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5613:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5602:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																		"typeString": "struct EWasteToken.WasteItem storage ref"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5618:6:9",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1267,
																"src": "5602:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1705,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "5628:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5635:10:9",
																"memberName": "DISMANTLED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1278,
																"src": "5628:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"src": "5602:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737461747573",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5647:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															},
															"value": "Invalid status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857",
																"typeString": "literal_string \"Invalid status\""
															}
														],
														"id": 1700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5594:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "5594:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1712,
																		"name": "wasteItems",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5683:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																			"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																		}
																	},
																	"id": 1714,
																	"indexExpression": {
																		"id": 1713,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5694:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5683:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																		"typeString": "struct EWasteToken.WasteItem storage ref"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5699:14:9",
																"memberName": "currentHandler",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1269,
																"src": "5683:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1716,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5717:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5721:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5717:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5683:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 1711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5675:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5675:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "5675:66:9"
											},
											{
												"expression": {
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1722,
																"name": "wasteItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "5762:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
																	"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
																}
															},
															"id": 1724,
															"indexExpression": {
																"id": 1723,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "5773:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5762:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
																"typeString": "struct EWasteToken.WasteItem storage ref"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5778:6:9",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "5762:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1726,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "5787:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5794:6:9",
														"memberName": "RESOLD",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1279,
														"src": "5787:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "5762:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "5762:38:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1731,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "5827:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1732,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5832:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5836:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5832:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1730,
														"name": "ItemResold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "5816:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5816:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "EmitStatement",
												"src": "5811:32:9"
											}
										]
									},
									"functionSelector": "d8101dcd",
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resellItem",
									"nameLocation": "5550:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5569:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "5561:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5561:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5560:13:9"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5583:0:9"
									},
									"scope": 1946,
									"src": "5541:310:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "5996:427:9",
										"statements": [
											{
												"assignments": [
													1748,
													1750,
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "6016:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1783,
														"src": "6008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6008:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1750,
														"mutability": "mutable",
														"name": "qBonus",
														"nameLocation": "6030:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1783,
														"src": "6022:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6022:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "wBonus",
														"nameLocation": "6046:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1783,
														"src": "6038:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6038:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"arguments": [
														{
															"id": 1754,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "6077:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1755,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "6082:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														],
														"id": 1753,
														"name": "_getRewardComponents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "6056:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_enum$_Status_$1280_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,enum EWasteToken.Status) view returns (uint256,uint256,uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6056:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6007:83:9"
											},
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "totalReward",
														"nameLocation": "6109:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1783,
														"src": "6101:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6101:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1760,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "6123:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1761,
															"name": "qBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "6130:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6123:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1763,
														"name": "wBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "6139:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6123:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6101:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6172:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6176:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6172:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1769,
															"name": "totalReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "6184:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1766,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "6166:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6166:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "6166:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1773,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "6253:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1774,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "6271:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														},
														{
															"id": 1775,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "6293:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1776,
															"name": "qBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "6312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1777,
															"name": "wBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "6333:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1778,
															"name": "totalReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "6354:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1772,
														"name": "RewardCalculated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "6222:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_Status_$1280_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,enum EWasteToken.Status,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6222:154:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "EmitStatement",
												"src": "6217:159:9"
											},
											{
												"expression": {
													"id": 1781,
													"name": "totalReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1759,
													"src": "6404:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1782,
												"nodeType": "Return",
												"src": "6397:18:9"
											}
										]
									},
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAndMintReward",
									"nameLocation": "5916:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5948:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "5940:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5940:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "5960:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "5953:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$1280",
													"typeString": "enum EWasteToken.Status"
												},
												"typeName": {
													"id": 1741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1740,
														"name": "Status",
														"nameLocations": [
															"5953:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "5953:6:9"
													},
													"referencedDeclaration": 1280,
													"src": "5953:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5939:29:9"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "5987:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5987:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5986:9:9"
									},
									"scope": 1946,
									"src": "5907:516:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "6611:1108:9",
										"statements": [
											{
												"assignments": [
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "6639:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1912,
														"src": "6622:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WasteItem_$1272_memory_ptr",
															"typeString": "struct EWasteToken.WasteItem"
														},
														"typeName": {
															"id": 1799,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1798,
																"name": "WasteItem",
																"nameLocations": [
																	"6622:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1272,
																"src": "6622:9:9"
															},
															"referencedDeclaration": 1272,
															"src": "6622:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WasteItem_$1272_storage_ptr",
																"typeString": "struct EWasteToken.WasteItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1804,
												"initialValue": {
													"baseExpression": {
														"id": 1801,
														"name": "wasteItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "6646:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WasteItem_$1272_storage_$",
															"typeString": "mapping(uint256 => struct EWasteToken.WasteItem storage ref)"
														}
													},
													"id": 1803,
													"indexExpression": {
														"id": 1802,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "6657:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6646:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WasteItem_$1272_storage",
														"typeString": "struct EWasteToken.WasteItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6622:39:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1805,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "6686:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1806,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "6697:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6704:7:9",
														"memberName": "CREATED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1273,
														"src": "6697:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "6686:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1814,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "6783:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1815,
																"name": "Status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "6794:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																	"typeString": "type(enum EWasteToken.Status)"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6801:9:9",
															"memberName": "COLLECTED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1274,
															"src": "6794:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														},
														"src": "6783:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1823,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "6884:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1824,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "6895:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6902:8:9",
																"memberName": "REPAIRED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1276,
																"src": "6895:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"src": "6884:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1832,
																	"name": "_status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "6980:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1280",
																		"typeString": "enum EWasteToken.Status"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1833,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "6991:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																			"typeString": "type(enum EWasteToken.Status)"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6998:8:9",
																	"memberName": "RECYCLED",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1277,
																	"src": "6991:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1280",
																		"typeString": "enum EWasteToken.Status"
																	}
																},
																"src": "6980:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Status_$1280",
																		"typeString": "enum EWasteToken.Status"
																	},
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1841,
																		"name": "_status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "7079:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Status_$1280",
																			"typeString": "enum EWasteToken.Status"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1842,
																			"name": "Status",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "7090:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																				"typeString": "type(enum EWasteToken.Status)"
																			}
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "7097:10:9",
																		"memberName": "DISMANTLED",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1278,
																		"src": "7090:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Status_$1280",
																			"typeString": "enum EWasteToken.Status"
																		}
																	},
																	"src": "7079:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1850,
																"nodeType": "IfStatement",
																"src": "7075:95:9",
																"trueBody": {
																	"id": 1849,
																	"nodeType": "Block",
																	"src": "7109:61:9",
																	"statements": [
																		{
																			"expression": {
																				"id": 1847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1845,
																					"name": "baseReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1792,
																					"src": "7124:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 1846,
																					"name": "BASE_DISMANTLE_REWARD",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1248,
																					"src": "7137:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7124:34:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1848,
																			"nodeType": "ExpressionStatement",
																			"src": "7124:34:9"
																		}
																	]
																}
															},
															"id": 1851,
															"nodeType": "IfStatement",
															"src": "6976:194:9",
															"trueBody": {
																"id": 1840,
																"nodeType": "Block",
																"src": "7008:61:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1836,
																				"name": "baseReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1792,
																				"src": "7023:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1837,
																				"name": "BASE_RECYCLING_REWARD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "7036:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7023:34:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1839,
																		"nodeType": "ExpressionStatement",
																		"src": "7023:34:9"
																	}
																]
															}
														},
														"id": 1852,
														"nodeType": "IfStatement",
														"src": "6880:290:9",
														"trueBody": {
															"id": 1831,
															"nodeType": "Block",
															"src": "6912:58:9",
															"statements": [
																{
																	"expression": {
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1827,
																			"name": "baseReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1792,
																			"src": "6927:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1828,
																			"name": "BASE_REPAIR_REWARD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "6940:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6927:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1830,
																	"nodeType": "ExpressionStatement",
																	"src": "6927:31:9"
																}
															]
														}
													},
													"id": 1853,
													"nodeType": "IfStatement",
													"src": "6779:391:9",
													"trueBody": {
														"id": 1822,
														"nodeType": "Block",
														"src": "6812:62:9",
														"statements": [
															{
																"expression": {
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1818,
																		"name": "baseReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1792,
																		"src": "6827:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1819,
																		"name": "BASE_COLLECTION_REWARD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "6840:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6827:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1821,
																"nodeType": "ExpressionStatement",
																"src": "6827:35:9"
															}
														]
													}
												},
												"id": 1854,
												"nodeType": "IfStatement",
												"src": "6682:488:9",
												"trueBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "6713:60:9",
													"statements": [
														{
															"expression": {
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1809,
																	"name": "baseReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "6728:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1810,
																	"name": "BASE_DISPOSAL_REWARD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "6741:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6728:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1812,
															"nodeType": "ExpressionStatement",
															"src": "6728:33:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1855,
														"name": "quantityBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "7182:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1856,
															"name": "PER_ITEM_REWARD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "7198:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 1857,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1800,
																"src": "7216:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WasteItem_$1272_memory_ptr",
																	"typeString": "struct EWasteToken.WasteItem memory"
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7221:8:9",
															"memberName": "quantity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1264,
															"src": "7216:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7198:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7182:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "7182:47:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1862,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "7305:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1863,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "7316:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																"typeString": "type(enum EWasteToken.Status)"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7323:8:9",
														"memberName": "REPAIRED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "7316:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														}
													},
													"src": "7305:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Status_$1280",
															"typeString": "enum EWasteToken.Status"
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1871,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "7416:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1872,
																"name": "Status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7427:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																	"typeString": "type(enum EWasteToken.Status)"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7434:8:9",
															"memberName": "RECYCLED",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1277,
															"src": "7427:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															}
														},
														"src": "7416:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$1280",
																"typeString": "enum EWasteToken.Status"
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1886,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "7530:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1887,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "7541:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1280_$",
																		"typeString": "type(enum EWasteToken.Status)"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7548:10:9",
																"memberName": "DISMANTLED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1278,
																"src": "7541:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1280",
																	"typeString": "enum EWasteToken.Status"
																}
															},
															"src": "7530:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1908,
															"nodeType": "Block",
															"src": "7642:70:9",
															"statements": [
																{
																	"expression": {
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1901,
																			"name": "weightBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "7657:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1902,
																				"name": "PER_GRAM_REWARD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1254,
																				"src": "7671:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 1903,
																					"name": "item",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1800,
																					"src": "7689:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WasteItem_$1272_memory_ptr",
																						"typeString": "struct EWasteToken.WasteItem memory"
																					}
																				},
																				"id": 1904,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7694:6:9",
																				"memberName": "weight",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1262,
																				"src": "7689:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7671:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7657:43:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1907,
																	"nodeType": "ExpressionStatement",
																	"src": "7657:43:9"
																}
															]
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "7526:186:9",
														"trueBody": {
															"id": 1900,
															"nodeType": "Block",
															"src": "7560:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1890,
																			"name": "weightBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "7575:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1894,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1891,
																							"name": "PER_GRAM_REWARD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1254,
																							"src": "7590:15:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 1892,
																								"name": "item",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1800,
																								"src": "7608:4:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_WasteItem_$1272_memory_ptr",
																									"typeString": "struct EWasteToken.WasteItem memory"
																								}
																							},
																							"id": 1893,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7613:6:9",
																							"memberName": "weight",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1262,
																							"src": "7608:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7590:29:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1895,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7589:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "33",
																				"id": 1896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7623:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"src": "7589:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7575:49:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1899,
																	"nodeType": "ExpressionStatement",
																	"src": "7575:49:9"
																}
															]
														}
													},
													"id": 1910,
													"nodeType": "IfStatement",
													"src": "7412:300:9",
													"trueBody": {
														"id": 1885,
														"nodeType": "Block",
														"src": "7444:76:9",
														"statements": [
															{
																"expression": {
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1875,
																		"name": "weightBonus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "7459:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1879,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1876,
																						"name": "PER_GRAM_REWARD",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1254,
																						"src": "7474:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"expression": {
																							"id": 1877,
																							"name": "item",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1800,
																							"src": "7492:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_WasteItem_$1272_memory_ptr",
																								"typeString": "struct EWasteToken.WasteItem memory"
																							}
																						},
																						"id": 1878,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7497:6:9",
																						"memberName": "weight",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1262,
																						"src": "7492:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7474:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1880,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7473:31:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7507:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "7473:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7459:49:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1884,
																"nodeType": "ExpressionStatement",
																"src": "7459:49:9"
															}
														]
													}
												},
												"id": 1911,
												"nodeType": "IfStatement",
												"src": "7301:411:9",
												"trueBody": {
													"id": 1870,
													"nodeType": "Block",
													"src": "7333:73:9",
													"statements": [
														{
															"expression": {
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1866,
																	"name": "quantityBonus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "7348:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7348:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1869,
															"nodeType": "ExpressionStatement",
															"src": "7348:18:9"
														}
													]
												}
											}
										]
									},
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardComponents",
									"nameLocation": "6440:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "6469:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "6461:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6461:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "6481:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "6474:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$1280",
													"typeString": "enum EWasteToken.Status"
												},
												"typeName": {
													"id": 1788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1787,
														"name": "Status",
														"nameLocations": [
															"6474:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "6474:6:9"
													},
													"referencedDeclaration": 1280,
													"src": "6474:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1280",
														"typeString": "enum EWasteToken.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6460:29:9"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "baseReward",
												"nameLocation": "6531:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "6523:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6523:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "quantityBonus",
												"nameLocation": "6560:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "6552:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6552:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "weightBonus",
												"nameLocation": "6592:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "6584:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6584:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6512:98:9"
									},
									"scope": 1946,
									"src": "6431:1288:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "7831:45:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1924,
															"name": "_role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "7852:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1925,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "7859:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1923,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "7842:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "7842:26:9"
											}
										]
									},
									"functionSelector": "a73f7f8a",
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1920,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1233,
													"src": "7819:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1921,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1919,
												"name": "onlyRole",
												"nameLocations": [
													"7810:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7810:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7810:20:9"
										}
									],
									"name": "addRole",
									"nameLocation": "7760:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "7776:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "7768:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7768:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "_role",
												"nameLocation": "7794:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "7786:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1916,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7786:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7767:33:9"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7831:0:9"
									},
									"scope": 1946,
									"src": "7751:125:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "7964:38:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1940,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "7981:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1941,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "7986:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1939,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "7975:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7975:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "7975:19:9"
											}
										]
									},
									"functionSelector": "f0dda65c",
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1936,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1233,
													"src": "7952:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1937,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1935,
												"name": "onlyRole",
												"nameLocations": [
													"7943:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7943:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7943:20:9"
										}
									],
									"name": "mintTokens",
									"nameLocation": "7893:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7912:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "7904:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7904:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7925:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "7917:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7917:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7903:30:9"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7964:0:9"
									},
									"scope": 1946,
									"src": "7884:118:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1947,
							"src": "179:7826:9",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051,
								1297,
								1305,
								1311,
								1319,
								1327,
								1335,
								1341,
								1356
							]
						}
					],
					"src": "33:7972:9"
				},
				"id": 9
			}
		}
	}
}