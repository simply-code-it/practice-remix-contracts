{
	"id": "0f09c0fcd96e70e177abd4d9250661f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EdTechToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract EdTechToken is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {\r\n    uint256 public immutable maxSupply;\r\n    uint256 public halvingPeriod = 365 days;\r\n    uint256 public lastHalving;\r\n    uint256 public rewardPerTask = 100 * 10**decimals();\r\n    uint256 public stakingAPY = 10; // 10% APY\r\n    \r\n    struct Staker {\r\n        uint256 stakedAmount;\r\n        uint256 stakingStartTime;\r\n        bool isStaking;\r\n    }\r\n    \r\n    mapping(address => Staker) public stakers;\r\n    mapping(address => uint256) public referralRewards;\r\n    \r\n    event TokensStaked(address indexed user, uint256 amount);\r\n    event TokensUnstaked(address indexed user, uint256 amount);\r\n    event TokensClaimed(address indexed user, uint256 amount);\r\n    event TokensBurned(uint256 amount);\r\n    event TaskCompleted(address indexed user, uint256 reward);\r\n    \r\n    // Updated constructor with proper initialization\r\n    constructor() \r\n        ERC20(\"EdTechToken\", \"EDT\") \r\n        Ownable(msg.sender) \r\n    {\r\n        maxSupply = 100000000 * 10**decimals(); // 100 million tokens\r\n        _mint(msg.sender, maxSupply / 10); // Mint 10% supply to owner\r\n        lastHalving = block.timestamp;\r\n    }\r\n    \r\n    function rewardForTaskCompletion(address student) external onlyOwner {\r\n        require(totalSupply() + rewardPerTask <= maxSupply, \"Max supply reached\");\r\n        _mint(student, rewardPerTask);\r\n        emit TaskCompleted(student, rewardPerTask);\r\n    }\r\n    \r\n    function halveReward() external onlyOwner {\r\n        require(block.timestamp >= lastHalving + halvingPeriod, \"Too early for halving\");\r\n        rewardPerTask /= 2;\r\n        lastHalving = block.timestamp;\r\n    }\r\n    \r\n    function stakeTokens(uint256 amount) external nonReentrant {\r\n        require(balanceOf(msg.sender) >= amount, \"Not enough balance\");\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        \r\n        _transfer(msg.sender, address(this), amount);\r\n        stakers[msg.sender] = Staker(amount, block.timestamp, true);\r\n        \r\n        emit TokensStaked(msg.sender, amount);\r\n    }\r\n    \r\n    function unstakeTokens() external nonReentrant {\r\n        Staker storage staker = stakers[msg.sender];\r\n        require(staker.isStaking, \"No tokens staked\");\r\n        \r\n        uint256 duration = block.timestamp - staker.stakingStartTime;\r\n        uint256 reward = (staker.stakedAmount * stakingAPY * duration) / (365 days * 100);\r\n        uint256 totalAmount = staker.stakedAmount + reward;\r\n        \r\n        _mint(msg.sender, reward);\r\n        _transfer(address(this), msg.sender, staker.stakedAmount);\r\n        \r\n        delete stakers[msg.sender];\r\n        \r\n        emit TokensUnstaked(msg.sender, totalAmount);\r\n    }\r\n    \r\n    function rewardReferral(address referrer, address referee, uint256 amount) external onlyOwner {\r\n        uint256 reward = amount / 10;\r\n        require(totalSupply() + reward <= maxSupply, \"Max supply reached\");\r\n        \r\n        _mint(referrer, reward);\r\n        referralRewards[referrer] += reward;\r\n    }\r\n    \r\n    function burnTokens(uint256 amount) external onlyOwner {\r\n        _burn(owner(), amount);\r\n        emit TokensBurned(amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/EdTechToken.sol": {
				"EdTechToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TaskCompleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halveReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halvingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHalving",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "student",
									"type": "address"
								}
							],
							"name": "rewardForTaskCompletion",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTask",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "referee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rewardReferral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingStartTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStaking",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EdTechToken.sol\":314:3499  contract EdTechToken is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/EdTechToken.sol\":464:472  365 days */\n  0x01e13380\n    /* \"contracts/EdTechToken.sol\":433:472  uint256 public halvingPeriod = 365 days */\n  0x07\n  sstore\n    /* \"contracts/EdTechToken.sol\":553:563  decimals() */\n  tag_1\n    /* \"contracts/EdTechToken.sol\":553:561  decimals */\n  shl(0x20, tag_2)\n    /* \"contracts/EdTechToken.sol\":553:563  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"contracts/EdTechToken.sol\":549:551  10 */\n  0x0a\n    /* \"contracts/EdTechToken.sol\":549:563  10**decimals() */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"contracts/EdTechToken.sol\":543:546  100 */\n  0x64\n    /* \"contracts/EdTechToken.sol\":543:563  100 * 10**decimals() */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/EdTechToken.sol\":512:563  uint256 public rewardPerTask = 100 * 10**decimals() */\n  0x09\n  sstore\n    /* \"contracts/EdTechToken.sol\":598:600  10 */\n  0x0a\n    /* \"contracts/EdTechToken.sol\":570:600  uint256 public stakingAPY = 10 */\n  dup1\n  sstore\n    /* \"contracts/EdTechToken.sol\":1218:1497  constructor() ... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n    /* \"contracts/EdTechToken.sol\":1288:1298  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x456454656368546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4544540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_15\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_17\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/EdTechToken.sol\":1345:1355  decimals() */\n  tag_24\n    /* \"contracts/EdTechToken.sol\":1345:1353  decimals */\n  shl(0x20, tag_2)\n    /* \"contracts/EdTechToken.sol\":1345:1355  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/EdTechToken.sol\":1341:1343  10 */\n  0x0a\n    /* \"contracts/EdTechToken.sol\":1341:1355  10**decimals() */\n  tag_25\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_25:\n    /* \"contracts/EdTechToken.sol\":1329:1338  100000000 */\n  0x05f5e100\n    /* \"contracts/EdTechToken.sol\":1329:1355  100000000 * 10**decimals() */\n  tag_26\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_26:\n    /* \"contracts/EdTechToken.sol\":1317:1355  maxSupply = 100000000 * 10**decimals() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/EdTechToken.sol\":1388:1421  _mint(msg.sender, maxSupply / 10) */\n  tag_27\n    /* \"contracts/EdTechToken.sol\":1394:1404  msg.sender */\n  caller\n    /* \"contracts/EdTechToken.sol\":1418:1420  10 */\n  0x0a\n    /* \"contracts/EdTechToken.sol\":1406:1415  maxSupply */\n  mload(0x80)\n    /* \"contracts/EdTechToken.sol\":1406:1420  maxSupply / 10 */\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"contracts/EdTechToken.sol\":1388:1393  _mint */\n  shl(0x20, tag_30)\n    /* \"contracts/EdTechToken.sol\":1388:1421  _mint(msg.sender, maxSupply / 10) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/EdTechToken.sol\":1474:1489  block.timestamp */\n  timestamp\n    /* \"contracts/EdTechToken.sol\":1460:1471  lastHalving */\n  0x08\n    /* \"contracts/EdTechToken.sol\":1460:1489  lastHalving = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/EdTechToken.sol\":314:3499  contract EdTechToken is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_43)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_48)\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_49\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_51:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_52:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_53:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  dup1\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_85:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_89\n  tag_51\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":526:576   */\ntag_88:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_90:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_91\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_52\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_54:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_92)\n    /* \"#utility.yul\":1390:1430   */\ntag_93:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_92)\n    /* \"#utility.yul\":1439:1475   */\ntag_94:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_95)\n    /* \"#utility.yul\":1578:1605   */\ntag_96:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_92)\n    /* \"#utility.yul\":1614:1805   */\ntag_97:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_99\n  tag_51\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1643:1686   */\ntag_98:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_101\n  tag_51\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1737:1777   */\ntag_100:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_92)\n    /* \"#utility.yul\":1528:1805   */\ntag_95:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_104\n  tag_51\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1992:2032   */\ntag_103:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_92)\n    /* \"#utility.yul\":1814:2060   */\ntag_102:\n    /* \"#utility.yul\":2085:2127   */\n  tag_105\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_53\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_107\n  tag_51\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2137:2188   */\ntag_106:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_92:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_55:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2403   */\ntag_56:\n    /* \"#utility.yul\":2352:2359   */\n  0x00\n    /* \"#utility.yul\":2392:2396   */\n  0xff\n    /* \"#utility.yul\":2385:2390   */\n  dup3\n    /* \"#utility.yul\":2381:2397   */\n  and\n    /* \"#utility.yul\":2370:2397   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2403   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2409:2690   */\ntag_4:\n    /* \"#utility.yul\":2467:2472   */\n  0x00\n    /* \"#utility.yul\":2491:2514   */\n  tag_111\n    /* \"#utility.yul\":2509:2513   */\n  dup3\n    /* \"#utility.yul\":2491:2514   */\n  tag_55\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2483:2514   */\n  swap2\n  pop\n    /* \"#utility.yul\":2535:2560   */\n  tag_112\n    /* \"#utility.yul\":2551:2559   */\n  dup4\n    /* \"#utility.yul\":2535:2560   */\n  tag_56\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2523:2560   */\n  swap3\n  pop\n    /* \"#utility.yul\":2579:2683   */\n  tag_113\n    /* \"#utility.yul\":2616:2682   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2606:2614   */\n  dup5\n    /* \"#utility.yul\":2600:2604   */\n  dup5\n    /* \"#utility.yul\":2579:2683   */\n  tag_54\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2570:2683   */\n  swap1\n  pop\n    /* \"#utility.yul\":2409:2690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2696:3106   */\ntag_6:\n    /* \"#utility.yul\":2736:2743   */\n  0x00\n    /* \"#utility.yul\":2759:2779   */\n  tag_115\n    /* \"#utility.yul\":2777:2778   */\n  dup3\n    /* \"#utility.yul\":2759:2779   */\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2754:2779   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:2813   */\n  tag_116\n    /* \"#utility.yul\":2811:2812   */\n  dup4\n    /* \"#utility.yul\":2793:2813   */\n  tag_55\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2788:2813   */\n  swap3\n  pop\n    /* \"#utility.yul\":2848:2849   */\n  dup3\n    /* \"#utility.yul\":2845:2846   */\n  dup3\n    /* \"#utility.yul\":2841:2850   */\n  mul\n    /* \"#utility.yul\":2870:2900   */\n  tag_117\n    /* \"#utility.yul\":2888:2899   */\n  dup2\n    /* \"#utility.yul\":2870:2900   */\n  tag_55\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2859:2900   */\n  swap2\n  pop\n    /* \"#utility.yul\":3049:3050   */\n  dup3\n    /* \"#utility.yul\":3040:3047   */\n  dup3\n    /* \"#utility.yul\":3036:3051   */\n  div\n    /* \"#utility.yul\":3033:3034   */\n  dup5\n    /* \"#utility.yul\":3030:3052   */\n  eq\n    /* \"#utility.yul\":3010:3011   */\n  dup4\n    /* \"#utility.yul\":3003:3012   */\n  iszero\n    /* \"#utility.yul\":2983:3066   */\n  or\n    /* \"#utility.yul\":2960:3099   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3079:3097   */\n  tag_119\n  tag_51\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2960:3099   */\ntag_118:\n    /* \"#utility.yul\":2744:3106   */\n  pop\n    /* \"#utility.yul\":2696:3106   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3112:3211   */\ntag_57:\n    /* \"#utility.yul\":3164:3170   */\n  0x00\n    /* \"#utility.yul\":3198:3203   */\n  dup2\n    /* \"#utility.yul\":3192:3204   */\n  mload\n    /* \"#utility.yul\":3182:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3112:3211   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3217:3397   */\ntag_58:\n    /* \"#utility.yul\":3265:3342   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3262:3263   */\n  0x00\n    /* \"#utility.yul\":3255:3343   */\n  mstore\n    /* \"#utility.yul\":3362:3366   */\n  0x41\n    /* \"#utility.yul\":3359:3360   */\n  0x04\n    /* \"#utility.yul\":3352:3367   */\n  mstore\n    /* \"#utility.yul\":3386:3390   */\n  0x24\n    /* \"#utility.yul\":3383:3384   */\n  0x00\n    /* \"#utility.yul\":3376:3391   */\n  revert\n    /* \"#utility.yul\":3403:3583   */\ntag_59:\n    /* \"#utility.yul\":3451:3528   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3448:3449   */\n  0x00\n    /* \"#utility.yul\":3441:3529   */\n  mstore\n    /* \"#utility.yul\":3548:3552   */\n  0x22\n    /* \"#utility.yul\":3545:3546   */\n  0x04\n    /* \"#utility.yul\":3538:3553   */\n  mstore\n    /* \"#utility.yul\":3572:3576   */\n  0x24\n    /* \"#utility.yul\":3569:3570   */\n  0x00\n    /* \"#utility.yul\":3562:3577   */\n  revert\n    /* \"#utility.yul\":3589:3909   */\ntag_60:\n    /* \"#utility.yul\":3633:3639   */\n  0x00\n    /* \"#utility.yul\":3670:3671   */\n  0x02\n    /* \"#utility.yul\":3664:3668   */\n  dup3\n    /* \"#utility.yul\":3660:3672   */\n  div\n    /* \"#utility.yul\":3650:3672   */\n  swap1\n  pop\n    /* \"#utility.yul\":3717:3718   */\n  0x01\n    /* \"#utility.yul\":3711:3715   */\n  dup3\n    /* \"#utility.yul\":3707:3719   */\n  and\n    /* \"#utility.yul\":3738:3756   */\n  dup1\n    /* \"#utility.yul\":3728:3809   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3794:3798   */\n  0x7f\n    /* \"#utility.yul\":3786:3792   */\n  dup3\n    /* \"#utility.yul\":3782:3799   */\n  and\n    /* \"#utility.yul\":3772:3799   */\n  swap2\n  pop\n    /* \"#utility.yul\":3728:3809   */\ntag_124:\n    /* \"#utility.yul\":3856:3858   */\n  0x20\n    /* \"#utility.yul\":3848:3854   */\n  dup3\n    /* \"#utility.yul\":3845:3859   */\n  lt\n    /* \"#utility.yul\":3825:3843   */\n  dup2\n    /* \"#utility.yul\":3822:3860   */\n  sub\n    /* \"#utility.yul\":3819:3903   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":3875:3893   */\n  tag_126\n  tag_59\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3819:3903   */\ntag_125:\n    /* \"#utility.yul\":3640:3909   */\n  pop\n    /* \"#utility.yul\":3589:3909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3915:4056   */\ntag_61:\n    /* \"#utility.yul\":3964:3968   */\n  0x00\n    /* \"#utility.yul\":3987:3990   */\n  dup2\n    /* \"#utility.yul\":3979:3990   */\n  swap1\n  pop\n    /* \"#utility.yul\":4010:4013   */\n  dup2\n    /* \"#utility.yul\":4007:4008   */\n  0x00\n    /* \"#utility.yul\":4000:4014   */\n  mstore\n    /* \"#utility.yul\":4044:4048   */\n  0x20\n    /* \"#utility.yul\":4041:4042   */\n  0x00\n    /* \"#utility.yul\":4031:4049   */\n  keccak256\n    /* \"#utility.yul\":4023:4049   */\n  swap1\n  pop\n    /* \"#utility.yul\":3915:4056   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4062:4155   */\ntag_62:\n    /* \"#utility.yul\":4099:4105   */\n  0x00\n    /* \"#utility.yul\":4146:4148   */\n  0x20\n    /* \"#utility.yul\":4141:4143   */\n  0x1f\n    /* \"#utility.yul\":4134:4139   */\n  dup4\n    /* \"#utility.yul\":4130:4144   */\n  add\n    /* \"#utility.yul\":4126:4149   */\n  div\n    /* \"#utility.yul\":4116:4149   */\n  swap1\n  pop\n    /* \"#utility.yul\":4062:4155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4161:4268   */\ntag_63:\n    /* \"#utility.yul\":4205:4213   */\n  0x00\n    /* \"#utility.yul\":4255:4260   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup3\n    /* \"#utility.yul\":4245:4261   */\n  shl\n    /* \"#utility.yul\":4224:4261   */\n  swap1\n  pop\n    /* \"#utility.yul\":4161:4268   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4274:4667   */\ntag_64:\n    /* \"#utility.yul\":4343:4349   */\n  0x00\n    /* \"#utility.yul\":4393:4394   */\n  0x08\n    /* \"#utility.yul\":4381:4391   */\n  dup4\n    /* \"#utility.yul\":4377:4395   */\n  mul\n    /* \"#utility.yul\":4416:4513   */\n  tag_131\n    /* \"#utility.yul\":4446:4512   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4435:4444   */\n  dup3\n    /* \"#utility.yul\":4416:4513   */\n  tag_63\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4534:4573   */\n  tag_132\n    /* \"#utility.yul\":4564:4572   */\n  dup7\n    /* \"#utility.yul\":4553:4562   */\n  dup4\n    /* \"#utility.yul\":4534:4573   */\n  tag_63\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4522:4573   */\n  swap6\n  pop\n    /* \"#utility.yul\":4606:4610   */\n  dup1\n    /* \"#utility.yul\":4602:4611   */\n  not\n    /* \"#utility.yul\":4595:4600   */\n  dup5\n    /* \"#utility.yul\":4591:4612   */\n  and\n    /* \"#utility.yul\":4582:4612   */\n  swap4\n  pop\n    /* \"#utility.yul\":4655:4659   */\n  dup1\n    /* \"#utility.yul\":4645:4653   */\n  dup7\n    /* \"#utility.yul\":4641:4660   */\n  and\n    /* \"#utility.yul\":4634:4639   */\n  dup5\n    /* \"#utility.yul\":4631:4661   */\n  or\n    /* \"#utility.yul\":4621:4661   */\n  swap3\n  pop\n    /* \"#utility.yul\":4350:4667   */\n  pop\n  pop\n    /* \"#utility.yul\":4274:4667   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4673:4733   */\ntag_65:\n    /* \"#utility.yul\":4701:4704   */\n  0x00\n    /* \"#utility.yul\":4722:4727   */\n  dup2\n    /* \"#utility.yul\":4715:4727   */\n  swap1\n  pop\n    /* \"#utility.yul\":4673:4733   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4739:4881   */\ntag_66:\n    /* \"#utility.yul\":4789:4798   */\n  0x00\n    /* \"#utility.yul\":4822:4875   */\n  tag_135\n    /* \"#utility.yul\":4840:4874   */\n  tag_136\n    /* \"#utility.yul\":4849:4873   */\n  tag_137\n    /* \"#utility.yul\":4867:4872   */\n  dup5\n    /* \"#utility.yul\":4849:4873   */\n  tag_55\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4840:4874   */\n  tag_65\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4822:4875   */\n  tag_55\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4809:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4739:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4962   */\ntag_67:\n    /* \"#utility.yul\":4930:4933   */\n  0x00\n    /* \"#utility.yul\":4951:4956   */\n  dup2\n    /* \"#utility.yul\":4944:4956   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4962   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4968:5237   */\ntag_68:\n    /* \"#utility.yul\":5078:5117   */\n  tag_140\n    /* \"#utility.yul\":5109:5116   */\n  dup4\n    /* \"#utility.yul\":5078:5117   */\n  tag_66\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5139:5230   */\n  tag_141\n    /* \"#utility.yul\":5188:5229   */\n  tag_142\n    /* \"#utility.yul\":5212:5228   */\n  dup3\n    /* \"#utility.yul\":5188:5229   */\n  tag_67\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5180:5186   */\n  dup5\n    /* \"#utility.yul\":5173:5177   */\n  dup5\n    /* \"#utility.yul\":5167:5178   */\n  sload\n    /* \"#utility.yul\":5139:5230   */\n  tag_64\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5133:5137   */\n  dup3\n    /* \"#utility.yul\":5126:5231   */\n  sstore\n    /* \"#utility.yul\":5044:5237   */\n  pop\n    /* \"#utility.yul\":4968:5237   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5243:5316   */\ntag_69:\n    /* \"#utility.yul\":5288:5291   */\n  0x00\n    /* \"#utility.yul\":5243:5316   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5322:5511   */\ntag_70:\n    /* \"#utility.yul\":5399:5431   */\n  tag_145\n  tag_69\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5440:5505   */\n  tag_146\n    /* \"#utility.yul\":5498:5504   */\n  dup2\n    /* \"#utility.yul\":5490:5496   */\n  dup5\n    /* \"#utility.yul\":5484:5488   */\n  dup5\n    /* \"#utility.yul\":5440:5505   */\n  tag_68\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5375:5511   */\n  pop\n    /* \"#utility.yul\":5322:5511   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5517:5703   */\ntag_71:\n    /* \"#utility.yul\":5577:5697   */\ntag_148:\n    /* \"#utility.yul\":5594:5597   */\n  dup2\n    /* \"#utility.yul\":5587:5592   */\n  dup2\n    /* \"#utility.yul\":5584:5598   */\n  lt\n    /* \"#utility.yul\":5577:5697   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":5648:5687   */\n  tag_151\n    /* \"#utility.yul\":5685:5686   */\n  0x00\n    /* \"#utility.yul\":5678:5683   */\n  dup3\n    /* \"#utility.yul\":5648:5687   */\n  tag_70\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5621:5622   */\n  0x01\n    /* \"#utility.yul\":5614:5619   */\n  dup2\n    /* \"#utility.yul\":5610:5623   */\n  add\n    /* \"#utility.yul\":5601:5623   */\n  swap1\n  pop\n    /* \"#utility.yul\":5577:5697   */\n  jump(tag_148)\ntag_150:\n    /* \"#utility.yul\":5517:5703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5709:6252   */\ntag_72:\n    /* \"#utility.yul\":5810:5812   */\n  0x1f\n    /* \"#utility.yul\":5805:5808   */\n  dup3\n    /* \"#utility.yul\":5802:5813   */\n  gt\n    /* \"#utility.yul\":5799:6245   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":5844:5882   */\n  tag_154\n    /* \"#utility.yul\":5876:5881   */\n  dup2\n    /* \"#utility.yul\":5844:5882   */\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5928:5957   */\n  tag_155\n    /* \"#utility.yul\":5946:5956   */\n  dup5\n    /* \"#utility.yul\":5928:5957   */\n  tag_62\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5918:5926   */\n  dup2\n    /* \"#utility.yul\":5914:5958   */\n  add\n    /* \"#utility.yul\":6111:6113   */\n  0x20\n    /* \"#utility.yul\":6099:6109   */\n  dup6\n    /* \"#utility.yul\":6096:6114   */\n  lt\n    /* \"#utility.yul\":6093:6142   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6117:6140   */\n  swap1\n  pop\n    /* \"#utility.yul\":6093:6142   */\ntag_156:\n    /* \"#utility.yul\":6155:6235   */\n  tag_157\n    /* \"#utility.yul\":6211:6233   */\n  tag_158\n    /* \"#utility.yul\":6229:6232   */\n  dup6\n    /* \"#utility.yul\":6211:6233   */\n  tag_62\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6201:6209   */\n  dup4\n    /* \"#utility.yul\":6197:6234   */\n  add\n    /* \"#utility.yul\":6184:6195   */\n  dup3\n    /* \"#utility.yul\":6155:6235   */\n  tag_71\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5814:6245   */\n  pop\n  pop\n    /* \"#utility.yul\":5799:6245   */\ntag_153:\n    /* \"#utility.yul\":5709:6252   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6258:6375   */\ntag_73:\n    /* \"#utility.yul\":6312:6320   */\n  0x00\n    /* \"#utility.yul\":6362:6367   */\n  dup3\n    /* \"#utility.yul\":6356:6360   */\n  dup3\n    /* \"#utility.yul\":6352:6368   */\n  shr\n    /* \"#utility.yul\":6331:6368   */\n  swap1\n  pop\n    /* \"#utility.yul\":6258:6375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6381:6550   */\ntag_74:\n    /* \"#utility.yul\":6425:6431   */\n  0x00\n    /* \"#utility.yul\":6458:6509   */\n  tag_161\n    /* \"#utility.yul\":6506:6507   */\n  0x00\n    /* \"#utility.yul\":6502:6508   */\n  not\n    /* \"#utility.yul\":6494:6499   */\n  dup5\n    /* \"#utility.yul\":6491:6492   */\n  0x08\n    /* \"#utility.yul\":6487:6500   */\n  mul\n    /* \"#utility.yul\":6458:6509   */\n  tag_73\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6454:6510   */\n  not\n    /* \"#utility.yul\":6539:6543   */\n  dup1\n    /* \"#utility.yul\":6533:6537   */\n  dup4\n    /* \"#utility.yul\":6529:6544   */\n  and\n    /* \"#utility.yul\":6519:6544   */\n  swap2\n  pop\n    /* \"#utility.yul\":6432:6550   */\n  pop\n    /* \"#utility.yul\":6381:6550   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6555:6850   */\ntag_75:\n    /* \"#utility.yul\":6631:6635   */\n  0x00\n    /* \"#utility.yul\":6777:6806   */\n  tag_163\n    /* \"#utility.yul\":6802:6805   */\n  dup4\n    /* \"#utility.yul\":6796:6800   */\n  dup4\n    /* \"#utility.yul\":6777:6806   */\n  tag_74\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6769:6806   */\n  swap2\n  pop\n    /* \"#utility.yul\":6839:6842   */\n  dup3\n    /* \"#utility.yul\":6836:6837   */\n  0x02\n    /* \"#utility.yul\":6832:6843   */\n  mul\n    /* \"#utility.yul\":6826:6830   */\n  dup3\n    /* \"#utility.yul\":6823:6844   */\n  or\n    /* \"#utility.yul\":6815:6844   */\n  swap1\n  pop\n    /* \"#utility.yul\":6555:6850   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6855:8250   */\ntag_14:\n    /* \"#utility.yul\":6972:7009   */\n  tag_165\n    /* \"#utility.yul\":7005:7008   */\n  dup3\n    /* \"#utility.yul\":6972:7009   */\n  tag_57\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7074:7092   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7066:7072   */\n  dup2\n    /* \"#utility.yul\":7063:7093   */\n  gt\n    /* \"#utility.yul\":7060:7116   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7096:7114   */\n  tag_167\n  tag_58\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7060:7116   */\ntag_166:\n    /* \"#utility.yul\":7140:7178   */\n  tag_168\n    /* \"#utility.yul\":7172:7176   */\n  dup3\n    /* \"#utility.yul\":7166:7177   */\n  sload\n    /* \"#utility.yul\":7140:7178   */\n  tag_60\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7225:7292   */\n  tag_169\n    /* \"#utility.yul\":7285:7291   */\n  dup3\n    /* \"#utility.yul\":7277:7283   */\n  dup3\n    /* \"#utility.yul\":7271:7275   */\n  dup6\n    /* \"#utility.yul\":7225:7292   */\n  tag_72\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7319:7320   */\n  0x00\n    /* \"#utility.yul\":7343:7347   */\n  0x20\n    /* \"#utility.yul\":7330:7347   */\n  swap1\n  pop\n    /* \"#utility.yul\":7375:7377   */\n  0x1f\n    /* \"#utility.yul\":7367:7373   */\n  dup4\n    /* \"#utility.yul\":7364:7378   */\n  gt\n    /* \"#utility.yul\":7392:7393   */\n  0x01\n    /* \"#utility.yul\":7387:8005   */\n  dup2\n  eq\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8049:8050   */\n  0x00\n    /* \"#utility.yul\":8066:8072   */\n  dup5\n    /* \"#utility.yul\":8063:8140   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8115:8124   */\n  dup3\n    /* \"#utility.yul\":8110:8113   */\n  dup8\n    /* \"#utility.yul\":8106:8125   */\n  add\n    /* \"#utility.yul\":8100:8126   */\n  mload\n    /* \"#utility.yul\":8091:8126   */\n  swap1\n  pop\n    /* \"#utility.yul\":8063:8140   */\ntag_172:\n    /* \"#utility.yul\":8166:8233   */\n  tag_173\n    /* \"#utility.yul\":8226:8232   */\n  dup6\n    /* \"#utility.yul\":8219:8224   */\n  dup3\n    /* \"#utility.yul\":8166:8233   */\n  tag_75\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8160:8164   */\n  dup7\n    /* \"#utility.yul\":8153:8234   */\n  sstore\n    /* \"#utility.yul\":8022:8244   */\n  pop\n    /* \"#utility.yul\":7357:8244   */\n  jump(tag_170)\n    /* \"#utility.yul\":7387:8005   */\ntag_171:\n    /* \"#utility.yul\":7439:7443   */\n  0x1f\n    /* \"#utility.yul\":7435:7444   */\n  not\n    /* \"#utility.yul\":7427:7433   */\n  dup5\n    /* \"#utility.yul\":7423:7445   */\n  and\n    /* \"#utility.yul\":7473:7510   */\n  tag_174\n    /* \"#utility.yul\":7505:7509   */\n  dup7\n    /* \"#utility.yul\":7473:7510   */\n  tag_61\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7532:7533   */\n  0x00\n    /* \"#utility.yul\":7546:7754   */\ntag_175:\n    /* \"#utility.yul\":7560:7567   */\n  dup3\n    /* \"#utility.yul\":7557:7558   */\n  dup2\n    /* \"#utility.yul\":7554:7568   */\n  lt\n    /* \"#utility.yul\":7546:7754   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":7639:7648   */\n  dup5\n    /* \"#utility.yul\":7634:7637   */\n  dup10\n    /* \"#utility.yul\":7630:7649   */\n  add\n    /* \"#utility.yul\":7624:7650   */\n  mload\n    /* \"#utility.yul\":7616:7622   */\n  dup3\n    /* \"#utility.yul\":7609:7651   */\n  sstore\n    /* \"#utility.yul\":7690:7691   */\n  0x01\n    /* \"#utility.yul\":7682:7688   */\n  dup3\n    /* \"#utility.yul\":7678:7692   */\n  add\n    /* \"#utility.yul\":7668:7692   */\n  swap2\n  pop\n    /* \"#utility.yul\":7737:7739   */\n  0x20\n    /* \"#utility.yul\":7726:7735   */\n  dup6\n    /* \"#utility.yul\":7722:7740   */\n  add\n    /* \"#utility.yul\":7709:7740   */\n  swap5\n  pop\n    /* \"#utility.yul\":7583:7587   */\n  0x20\n    /* \"#utility.yul\":7580:7581   */\n  dup2\n    /* \"#utility.yul\":7576:7588   */\n  add\n    /* \"#utility.yul\":7571:7588   */\n  swap1\n  pop\n    /* \"#utility.yul\":7546:7754   */\n  jump(tag_175)\ntag_177:\n    /* \"#utility.yul\":7782:7788   */\n  dup7\n    /* \"#utility.yul\":7773:7780   */\n  dup4\n    /* \"#utility.yul\":7770:7789   */\n  lt\n    /* \"#utility.yul\":7767:7946   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":7840:7849   */\n  dup5\n    /* \"#utility.yul\":7835:7838   */\n  dup10\n    /* \"#utility.yul\":7831:7850   */\n  add\n    /* \"#utility.yul\":7825:7851   */\n  mload\n    /* \"#utility.yul\":7883:7931   */\n  tag_179\n    /* \"#utility.yul\":7925:7929   */\n  0x1f\n    /* \"#utility.yul\":7917:7923   */\n  dup10\n    /* \"#utility.yul\":7913:7930   */\n  and\n    /* \"#utility.yul\":7902:7911   */\n  dup3\n    /* \"#utility.yul\":7883:7931   */\n  tag_74\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7875:7881   */\n  dup4\n    /* \"#utility.yul\":7868:7932   */\n  sstore\n    /* \"#utility.yul\":7790:7946   */\n  pop\n    /* \"#utility.yul\":7767:7946   */\ntag_178:\n    /* \"#utility.yul\":7992:7993   */\n  0x01\n    /* \"#utility.yul\":7988:7989   */\n  0x02\n    /* \"#utility.yul\":7980:7986   */\n  dup9\n    /* \"#utility.yul\":7976:7990   */\n  mul\n    /* \"#utility.yul\":7972:7994   */\n  add\n    /* \"#utility.yul\":7966:7970   */\n  dup9\n    /* \"#utility.yul\":7959:7995   */\n  sstore\n    /* \"#utility.yul\":7394:8005   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7357:8244   */\ntag_170:\n  pop\n    /* \"#utility.yul\":6947:8250   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6855:8250   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8382   */\ntag_76:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8333:8375   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8326:8331   */\n  dup3\n    /* \"#utility.yul\":8322:8376   */\n  and\n    /* \"#utility.yul\":8311:8376   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8382   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8388:8484   */\ntag_77:\n    /* \"#utility.yul\":8425:8432   */\n  0x00\n    /* \"#utility.yul\":8454:8478   */\n  tag_182\n    /* \"#utility.yul\":8472:8477   */\n  dup3\n    /* \"#utility.yul\":8454:8478   */\n  tag_76\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8443:8478   */\n  swap1\n  pop\n    /* \"#utility.yul\":8388:8484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8490:8608   */\ntag_78:\n    /* \"#utility.yul\":8577:8601   */\n  tag_184\n    /* \"#utility.yul\":8595:8600   */\n  dup2\n    /* \"#utility.yul\":8577:8601   */\n  tag_77\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8572:8575   */\n  dup3\n    /* \"#utility.yul\":8565:8602   */\n  mstore\n    /* \"#utility.yul\":8490:8608   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8614:8836   */\ntag_19:\n    /* \"#utility.yul\":8707:8711   */\n  0x00\n    /* \"#utility.yul\":8745:8747   */\n  0x20\n    /* \"#utility.yul\":8734:8743   */\n  dup3\n    /* \"#utility.yul\":8730:8748   */\n  add\n    /* \"#utility.yul\":8722:8748   */\n  swap1\n  pop\n    /* \"#utility.yul\":8758:8829   */\n  tag_186\n    /* \"#utility.yul\":8826:8827   */\n  0x00\n    /* \"#utility.yul\":8815:8824   */\n  dup4\n    /* \"#utility.yul\":8811:8828   */\n  add\n    /* \"#utility.yul\":8802:8808   */\n  dup5\n    /* \"#utility.yul\":8758:8829   */\n  tag_78\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8614:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9022   */\ntag_79:\n    /* \"#utility.yul\":8890:8967   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8887:8888   */\n  0x00\n    /* \"#utility.yul\":8880:8968   */\n  mstore\n    /* \"#utility.yul\":8987:8991   */\n  0x12\n    /* \"#utility.yul\":8984:8985   */\n  0x04\n    /* \"#utility.yul\":8977:8992   */\n  mstore\n    /* \"#utility.yul\":9011:9015   */\n  0x24\n    /* \"#utility.yul\":9008:9009   */\n  0x00\n    /* \"#utility.yul\":9001:9016   */\n  revert\n    /* \"#utility.yul\":9028:9213   */\ntag_29:\n    /* \"#utility.yul\":9068:9069   */\n  0x00\n    /* \"#utility.yul\":9085:9105   */\n  tag_189\n    /* \"#utility.yul\":9103:9104   */\n  dup3\n    /* \"#utility.yul\":9085:9105   */\n  tag_55\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9080:9105   */\n  swap2\n  pop\n    /* \"#utility.yul\":9119:9139   */\n  tag_190\n    /* \"#utility.yul\":9137:9138   */\n  dup4\n    /* \"#utility.yul\":9119:9139   */\n  tag_55\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9114:9139   */\n  swap3\n  pop\n    /* \"#utility.yul\":9158:9159   */\n  dup3\n    /* \"#utility.yul\":9148:9183   */\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9163:9181   */\n  tag_192\n  tag_79\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9148:9183   */\ntag_191:\n    /* \"#utility.yul\":9205:9206   */\n  dup3\n    /* \"#utility.yul\":9202:9203   */\n  dup3\n    /* \"#utility.yul\":9198:9207   */\n  div\n    /* \"#utility.yul\":9193:9207   */\n  swap1\n  pop\n    /* \"#utility.yul\":9028:9213   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9219:9410   */\ntag_42:\n    /* \"#utility.yul\":9259:9262   */\n  0x00\n    /* \"#utility.yul\":9278:9298   */\n  tag_194\n    /* \"#utility.yul\":9296:9297   */\n  dup3\n    /* \"#utility.yul\":9278:9298   */\n  tag_55\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9273:9298   */\n  swap2\n  pop\n    /* \"#utility.yul\":9312:9332   */\n  tag_195\n    /* \"#utility.yul\":9330:9331   */\n  dup4\n    /* \"#utility.yul\":9312:9332   */\n  tag_55\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9307:9332   */\n  swap3\n  pop\n    /* \"#utility.yul\":9355:9356   */\n  dup3\n    /* \"#utility.yul\":9352:9353   */\n  dup3\n    /* \"#utility.yul\":9348:9357   */\n  add\n    /* \"#utility.yul\":9341:9357   */\n  swap1\n  pop\n    /* \"#utility.yul\":9376:9379   */\n  dup1\n    /* \"#utility.yul\":9373:9374   */\n  dup3\n    /* \"#utility.yul\":9370:9380   */\n  gt\n    /* \"#utility.yul\":9367:9403   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9383:9401   */\n  tag_197\n  tag_51\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9367:9403   */\ntag_196:\n    /* \"#utility.yul\":9219:9410   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9416:9534   */\ntag_80:\n    /* \"#utility.yul\":9503:9527   */\n  tag_199\n    /* \"#utility.yul\":9521:9526   */\n  dup2\n    /* \"#utility.yul\":9503:9527   */\n  tag_55\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9498:9501   */\n  dup3\n    /* \"#utility.yul\":9491:9528   */\n  mstore\n    /* \"#utility.yul\":9416:9534   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9540:9982   */\ntag_46:\n    /* \"#utility.yul\":9689:9693   */\n  0x00\n    /* \"#utility.yul\":9727:9729   */\n  0x60\n    /* \"#utility.yul\":9716:9725   */\n  dup3\n    /* \"#utility.yul\":9712:9730   */\n  add\n    /* \"#utility.yul\":9704:9730   */\n  swap1\n  pop\n    /* \"#utility.yul\":9740:9811   */\n  tag_201\n    /* \"#utility.yul\":9808:9809   */\n  0x00\n    /* \"#utility.yul\":9797:9806   */\n  dup4\n    /* \"#utility.yul\":9793:9810   */\n  add\n    /* \"#utility.yul\":9784:9790   */\n  dup7\n    /* \"#utility.yul\":9740:9811   */\n  tag_78\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9821:9893   */\n  tag_202\n    /* \"#utility.yul\":9889:9891   */\n  0x20\n    /* \"#utility.yul\":9878:9887   */\n  dup4\n    /* \"#utility.yul\":9874:9892   */\n  add\n    /* \"#utility.yul\":9865:9871   */\n  dup6\n    /* \"#utility.yul\":9821:9893   */\n  tag_80\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9903:9975   */\n  tag_203\n    /* \"#utility.yul\":9971:9973   */\n  0x40\n    /* \"#utility.yul\":9960:9969   */\n  dup4\n    /* \"#utility.yul\":9956:9974   */\n  add\n    /* \"#utility.yul\":9947:9953   */\n  dup5\n    /* \"#utility.yul\":9903:9975   */\n  tag_80\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9540:9982   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9988:10210   */\ntag_50:\n    /* \"#utility.yul\":10081:10085   */\n  0x00\n    /* \"#utility.yul\":10119:10121   */\n  0x20\n    /* \"#utility.yul\":10108:10117   */\n  dup3\n    /* \"#utility.yul\":10104:10122   */\n  add\n    /* \"#utility.yul\":10096:10122   */\n  swap1\n  pop\n    /* \"#utility.yul\":10132:10203   */\n  tag_205\n    /* \"#utility.yul\":10200:10201   */\n  0x00\n    /* \"#utility.yul\":10189:10198   */\n  dup4\n    /* \"#utility.yul\":10185:10202   */\n  add\n    /* \"#utility.yul\":10176:10182   */\n  dup5\n    /* \"#utility.yul\":10132:10203   */\n  tag_80\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9988:10210   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/EdTechToken.sol\":314:3499  contract EdTechToken is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\ntag_31:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x29c0b879db10ec07344c06c1c2858043ca65327670e82844139a1e183eece6a8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/EdTechToken.sol\":314:3499  contract EdTechToken is ERC20, ERC20Burnable, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7547c7a3\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa5ce413b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdb6e62cd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdb6e62cd\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf651ed5e\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xa5ce413b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x9168ae72\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x99caf010\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9a1e1915\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x7547c7a3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x42966c68\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x5a3e251f\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x5a3e251f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6d1b229d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f3ad328\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x53aaa63b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1531b62a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":570:600  uint256 public stakingAPY = 10 */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_9:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/EdTechToken.sol\":1775:1985  function halveReward() external onlyOwner {... */\n    tag_10:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/EdTechToken.sol\":797:847  mapping(address => uint256) public referralRewards */\n    tag_11:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":433:472  uint256 public halvingPeriod = 365 days */\n    tag_12:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":3364:3496  function burnTokens(uint256 amount) external onlyOwner {... */\n    tag_13:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/EdTechToken.sol\":1997:2395  function stakeTokens(uint256 amount) external nonReentrant {... */\n    tag_16:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_17:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":749:790  mapping(address => Staker) public stakers */\n    tag_19:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":1509:1763  function rewardForTaskCompletion(address student) external onlyOwner {... */\n    tag_21:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/EdTechToken.sol\":479:505  uint256 public lastHalving */\n    tag_22:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":2407:3032  function unstakeTokens() external nonReentrant {... */\n    tag_23:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":392:426  uint256 public immutable maxSupply */\n    tag_25:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EdTechToken.sol\":3044:3352  function rewardReferral(address referrer, address referee, uint256 amount) external onlyOwner {... */\n    tag_26:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/EdTechToken.sol\":512:563  uint256 public rewardPerTask = 100 * 10**decimals() */\n    tag_29:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_134\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":570:600  uint256 public stakingAPY = 10 */\n    tag_47:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":1775:1985  function halveReward() external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/EdTechToken.sol\":1869:1882  halvingPeriod */\n      sload(0x07)\n        /* \"contracts/EdTechToken.sol\":1855:1866  lastHalving */\n      sload(0x08)\n        /* \"contracts/EdTechToken.sol\":1855:1882  lastHalving + halvingPeriod */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/EdTechToken.sol\":1836:1851  block.timestamp */\n      timestamp\n        /* \"contracts/EdTechToken.sol\":1836:1882  block.timestamp >= lastHalving + halvingPeriod */\n      lt\n      iszero\n        /* \"contracts/EdTechToken.sol\":1828:1908  require(block.timestamp >= lastHalving + halvingPeriod, \"Too early for halving\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/EdTechToken.sol\":1936:1937  2 */\n      0x02\n        /* \"contracts/EdTechToken.sol\":1919:1932  rewardPerTask */\n      0x09\n      0x00\n        /* \"contracts/EdTechToken.sol\":1919:1937  rewardPerTask /= 2 */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EdTechToken.sol\":1962:1977  block.timestamp */\n      timestamp\n        /* \"contracts/EdTechToken.sol\":1948:1959  lastHalving */\n      0x08\n        /* \"contracts/EdTechToken.sol\":1948:1977  lastHalving = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EdTechToken.sol\":1775:1985  function halveReward() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":797:847  mapping(address => uint256) public referralRewards */\n    tag_71:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":433:472  uint256 public halvingPeriod = 365 days */\n    tag_74:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":3364:3496  function burnTokens(uint256 amount) external onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/EdTechToken.sol\":3430:3452  _burn(owner(), amount) */\n      tag_170\n        /* \"contracts/EdTechToken.sol\":3436:3443  owner() */\n      tag_171\n        /* \"contracts/EdTechToken.sol\":3436:3441  owner */\n      tag_92\n        /* \"contracts/EdTechToken.sol\":3436:3443  owner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/EdTechToken.sol\":3445:3451  amount */\n      dup3\n        /* \"contracts/EdTechToken.sol\":3430:3435  _burn */\n      tag_155\n        /* \"contracts/EdTechToken.sol\":3430:3452  _burn(owner(), amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/EdTechToken.sol\":3468:3488  TokensBurned(amount) */\n      0x6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7\n        /* \"contracts/EdTechToken.sol\":3481:3487  amount */\n      dup2\n        /* \"contracts/EdTechToken.sol\":3468:3488  TokensBurned(amount) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/EdTechToken.sol\":3364:3496  function burnTokens(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":1997:2395  function stakeTokens(uint256 amount) external nonReentrant {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_180\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/EdTechToken.sol\":2100:2106  amount */\n      dup1\n        /* \"contracts/EdTechToken.sol\":2075:2096  balanceOf(msg.sender) */\n      tag_183\n        /* \"contracts/EdTechToken.sol\":2085:2095  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2075:2084  balanceOf */\n      tag_81\n        /* \"contracts/EdTechToken.sol\":2075:2096  balanceOf(msg.sender) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/EdTechToken.sol\":2075:2106  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/EdTechToken.sol\":2067:2129  require(balanceOf(msg.sender) >= amount, \"Not enough balance\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/EdTechToken.sol\":2157:2158  0 */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2148:2154  amount */\n      dup2\n        /* \"contracts/EdTechToken.sol\":2148:2158  amount > 0 */\n      gt\n        /* \"contracts/EdTechToken.sol\":2140:2194  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/EdTechToken.sol\":2215:2259  _transfer(msg.sender, address(this), amount) */\n      tag_190\n        /* \"contracts/EdTechToken.sol\":2225:2235  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2245:2249  this */\n      address\n        /* \"contracts/EdTechToken.sol\":2252:2258  amount */\n      dup4\n        /* \"contracts/EdTechToken.sol\":2215:2224  _transfer */\n      tag_150\n        /* \"contracts/EdTechToken.sol\":2215:2259  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/EdTechToken.sol\":2292:2329  Staker(amount, block.timestamp, true) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/EdTechToken.sol\":2299:2305  amount */\n      dup3\n        /* \"contracts/EdTechToken.sol\":2292:2329  Staker(amount, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EdTechToken.sol\":2307:2322  block.timestamp */\n      timestamp\n        /* \"contracts/EdTechToken.sol\":2292:2329  Staker(amount, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/EdTechToken.sol\":2324:2328  true */\n      0x01\n        /* \"contracts/EdTechToken.sol\":2292:2329  Staker(amount, block.timestamp, true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/EdTechToken.sol\":2270:2277  stakers */\n      0x0b\n        /* \"contracts/EdTechToken.sol\":2270:2289  stakers[msg.sender] */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2278:2288  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2270:2289  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EdTechToken.sol\":2270:2329  stakers[msg.sender] = Staker(amount, block.timestamp, true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/EdTechToken.sol\":2368:2378  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2355:2387  TokensStaked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef\n        /* \"contracts/EdTechToken.sol\":2380:2386  amount */\n      dup3\n        /* \"contracts/EdTechToken.sol\":2355:2387  TokensStaked(msg.sender, amount) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_192\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/EdTechToken.sol\":1997:2395  function stakeTokens(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":749:790  mapping(address => Staker) public stakers */\n    tag_97:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_134\n      jump\t// in\n    tag_200:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_134\n      jump\t// in\n    tag_201:\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_203\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_202)\n    tag_203:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_204:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_204\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":1509:1763  function rewardForTaskCompletion(address student) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/EdTechToken.sol\":1630:1639  maxSupply */\n      immutable(\"0x29c0b879db10ec07344c06c1c2858043ca65327670e82844139a1e183eece6a8\")\n        /* \"contracts/EdTechToken.sol\":1613:1626  rewardPerTask */\n      sload(0x09)\n        /* \"contracts/EdTechToken.sol\":1597:1610  totalSupply() */\n      tag_208\n        /* \"contracts/EdTechToken.sol\":1597:1608  totalSupply */\n      tag_51\n        /* \"contracts/EdTechToken.sol\":1597:1610  totalSupply() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/EdTechToken.sol\":1597:1626  totalSupply() + rewardPerTask */\n      tag_209\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_209:\n        /* \"contracts/EdTechToken.sol\":1597:1639  totalSupply() + rewardPerTask <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/EdTechToken.sol\":1589:1662  require(totalSupply() + rewardPerTask <= maxSupply, \"Max supply reached\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/EdTechToken.sol\":1673:1702  _mint(student, rewardPerTask) */\n      tag_213\n        /* \"contracts/EdTechToken.sol\":1679:1686  student */\n      dup2\n        /* \"contracts/EdTechToken.sol\":1688:1701  rewardPerTask */\n      sload(0x09)\n        /* \"contracts/EdTechToken.sol\":1673:1678  _mint */\n      tag_214\n        /* \"contracts/EdTechToken.sol\":1673:1702  _mint(student, rewardPerTask) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/EdTechToken.sol\":1732:1739  student */\n      dup1\n        /* \"contracts/EdTechToken.sol\":1718:1755  TaskCompleted(student, rewardPerTask) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf684d89bb0f42287bf32838774e4b7f8a60c11804b3c6d1791fa55f306792643\n        /* \"contracts/EdTechToken.sol\":1741:1754  rewardPerTask */\n      sload(0x09)\n        /* \"contracts/EdTechToken.sol\":1718:1755  TaskCompleted(student, rewardPerTask) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/EdTechToken.sol\":1509:1763  function rewardForTaskCompletion(address student) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":479:505  uint256 public lastHalving */\n    tag_107:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":2407:3032  function unstakeTokens() external nonReentrant {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_217\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/EdTechToken.sol\":2465:2486  Staker storage staker */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2489:2496  stakers */\n      0x0b\n        /* \"contracts/EdTechToken.sol\":2489:2508  stakers[msg.sender] */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2497:2507  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2489:2508  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EdTechToken.sol\":2465:2508  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/EdTechToken.sol\":2527:2533  staker */\n      dup1\n        /* \"contracts/EdTechToken.sol\":2527:2543  staker.isStaking */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EdTechToken.sol\":2519:2564  require(staker.isStaking, \"No tokens staked\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/EdTechToken.sol\":2585:2601  uint256 duration */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2622:2628  staker */\n      dup2\n        /* \"contracts/EdTechToken.sol\":2622:2645  staker.stakingStartTime */\n      0x01\n      add\n      sload\n        /* \"contracts/EdTechToken.sol\":2604:2619  block.timestamp */\n      timestamp\n        /* \"contracts/EdTechToken.sol\":2604:2645  block.timestamp - staker.stakingStartTime */\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"contracts/EdTechToken.sol\":2585:2645  uint256 duration = block.timestamp - staker.stakingStartTime */\n      swap1\n      pop\n        /* \"contracts/EdTechToken.sol\":2656:2670  uint256 reward */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2722:2736  365 days * 100 */\n      0xbbf81e00\n        /* \"contracts/EdTechToken.sol\":2709:2717  duration */\n      dup3\n        /* \"contracts/EdTechToken.sol\":2696:2706  stakingAPY */\n      sload(0x0a)\n        /* \"contracts/EdTechToken.sol\":2674:2680  staker */\n      dup6\n        /* \"contracts/EdTechToken.sol\":2674:2693  staker.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"contracts/EdTechToken.sol\":2674:2706  staker.stakedAmount * stakingAPY */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"contracts/EdTechToken.sol\":2674:2717  staker.stakedAmount * stakingAPY * duration */\n      tag_226\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_226:\n        /* \"contracts/EdTechToken.sol\":2673:2737  (staker.stakedAmount * stakingAPY * duration) / (365 days * 100) */\n      tag_227\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_227:\n        /* \"contracts/EdTechToken.sol\":2656:2737  uint256 reward = (staker.stakedAmount * stakingAPY * duration) / (365 days * 100) */\n      swap1\n      pop\n        /* \"contracts/EdTechToken.sol\":2748:2767  uint256 totalAmount */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2792:2798  reward */\n      dup2\n        /* \"contracts/EdTechToken.sol\":2770:2776  staker */\n      dup5\n        /* \"contracts/EdTechToken.sol\":2770:2789  staker.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"contracts/EdTechToken.sol\":2770:2798  staker.stakedAmount + reward */\n      tag_228\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_228:\n        /* \"contracts/EdTechToken.sol\":2748:2798  uint256 totalAmount = staker.stakedAmount + reward */\n      swap1\n      pop\n        /* \"contracts/EdTechToken.sol\":2819:2844  _mint(msg.sender, reward) */\n      tag_229\n        /* \"contracts/EdTechToken.sol\":2825:2835  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2837:2843  reward */\n      dup4\n        /* \"contracts/EdTechToken.sol\":2819:2824  _mint */\n      tag_214\n        /* \"contracts/EdTechToken.sol\":2819:2844  _mint(msg.sender, reward) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/EdTechToken.sol\":2855:2912  _transfer(address(this), msg.sender, staker.stakedAmount) */\n      tag_230\n        /* \"contracts/EdTechToken.sol\":2873:2877  this */\n      address\n        /* \"contracts/EdTechToken.sol\":2880:2890  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2892:2898  staker */\n      dup7\n        /* \"contracts/EdTechToken.sol\":2892:2911  staker.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"contracts/EdTechToken.sol\":2855:2864  _transfer */\n      tag_150\n        /* \"contracts/EdTechToken.sol\":2855:2912  _transfer(address(this), msg.sender, staker.stakedAmount) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/EdTechToken.sol\":2940:2947  stakers */\n      0x0b\n        /* \"contracts/EdTechToken.sol\":2940:2959  stakers[msg.sender] */\n      0x00\n        /* \"contracts/EdTechToken.sol\":2948:2958  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2940:2959  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/EdTechToken.sol\":2933:2959  delete stakers[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/EdTechToken.sol\":3000:3010  msg.sender */\n      caller\n        /* \"contracts/EdTechToken.sol\":2985:3024  TokensUnstaked(msg.sender, totalAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679\n        /* \"contracts/EdTechToken.sol\":3012:3023  totalAmount */\n      dup3\n        /* \"contracts/EdTechToken.sol\":2985:3024  TokensUnstaked(msg.sender, totalAmount) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/EdTechToken.sol\":2454:3032  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_232\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/EdTechToken.sol\":2407:3032  function unstakeTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":392:426  uint256 public immutable maxSupply */\n    tag_116:\n      immutable(\"0x29c0b879db10ec07344c06c1c2858043ca65327670e82844139a1e183eece6a8\")\n      dup2\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":3044:3352  function rewardReferral(address referrer, address referee, uint256 amount) external onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/EdTechToken.sol\":3149:3163  uint256 reward */\n      0x00\n        /* \"contracts/EdTechToken.sol\":3175:3177  10 */\n      0x0a\n        /* \"contracts/EdTechToken.sol\":3166:3172  amount */\n      dup3\n        /* \"contracts/EdTechToken.sol\":3166:3177  amount / 10 */\n      tag_239\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_239:\n        /* \"contracts/EdTechToken.sol\":3149:3177  uint256 reward = amount / 10 */\n      swap1\n      pop\n        /* \"contracts/EdTechToken.sol\":3222:3231  maxSupply */\n      immutable(\"0x29c0b879db10ec07344c06c1c2858043ca65327670e82844139a1e183eece6a8\")\n        /* \"contracts/EdTechToken.sol\":3212:3218  reward */\n      dup2\n        /* \"contracts/EdTechToken.sol\":3196:3209  totalSupply() */\n      tag_240\n        /* \"contracts/EdTechToken.sol\":3196:3207  totalSupply */\n      tag_51\n        /* \"contracts/EdTechToken.sol\":3196:3209  totalSupply() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/EdTechToken.sol\":3196:3218  totalSupply() + reward */\n      tag_241\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_241:\n        /* \"contracts/EdTechToken.sol\":3196:3231  totalSupply() + reward <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/EdTechToken.sol\":3188:3254  require(totalSupply() + reward <= maxSupply, \"Max supply reached\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_212\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/EdTechToken.sol\":3275:3298  _mint(referrer, reward) */\n      tag_244\n        /* \"contracts/EdTechToken.sol\":3281:3289  referrer */\n      dup5\n        /* \"contracts/EdTechToken.sol\":3291:3297  reward */\n      dup3\n        /* \"contracts/EdTechToken.sol\":3275:3280  _mint */\n      tag_214\n        /* \"contracts/EdTechToken.sol\":3275:3298  _mint(referrer, reward) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/EdTechToken.sol\":3338:3344  reward */\n      dup1\n        /* \"contracts/EdTechToken.sol\":3309:3324  referralRewards */\n      0x0c\n        /* \"contracts/EdTechToken.sol\":3309:3334  referralRewards[referrer] */\n      0x00\n        /* \"contracts/EdTechToken.sol\":3325:3333  referrer */\n      dup7\n        /* \"contracts/EdTechToken.sol\":3309:3334  referralRewards[referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/EdTechToken.sol\":3309:3344  referralRewards[referrer] += reward */\n      dup3\n      dup3\n      sload\n      tag_245\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_245:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EdTechToken.sol\":3138:3352  {... */\n      pop\n        /* \"contracts/EdTechToken.sol\":3044:3352  function rewardReferral(address referrer, address referee, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EdTechToken.sol\":512:563  uint256 public rewardPerTask = 100 * 10**decimals() */\n    tag_130:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_276\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_279\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_297\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_300\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_300:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_301)\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_305)\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_306\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_307:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_308:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_309:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_310:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_311:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_349\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_307\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":711:782   */\n      tag_350\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_308\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_351\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_309\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":881:910   */\n      tag_352\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_310\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_354\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_311\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_313:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_315:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_316:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_360\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_315\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_317:\n        /* \"#utility.yul\":1876:1900   */\n      tag_362\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_316\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_363:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_318:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_365\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_317\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_319:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_320:\n        /* \"#utility.yul\":2232:2256   */\n      tag_368\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_319\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_369:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_321:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_371\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_320\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_42:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_374\n      tag_313\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2525:2644   */\n    tag_373:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_375\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_318\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_376\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_321\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_322:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_323:\n        /* \"#utility.yul\":3089:3110   */\n      tag_379\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_322\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_45:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_381\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_323\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_324:\n        /* \"#utility.yul\":3426:3450   */\n      tag_383\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_319\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_49:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_385\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_324\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_55:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_388\n      tag_313\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3801:3920   */\n    tag_387:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_389\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_318\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_390\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_318\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_391\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_321\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_325:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_326:\n        /* \"#utility.yul\":4491:4513   */\n      tag_394\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_325\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_61:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_396\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_326\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_64:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_399\n      tag_313\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4822:4941   */\n    tag_398:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_400\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_321\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_70:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_403\n      tag_313\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5157:5276   */\n    tag_402:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_404\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_318\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_327:\n        /* \"#utility.yul\":5503:5527   */\n      tag_406\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_316\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_94:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_408\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_327\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6198   */\n    tag_99:\n        /* \"#utility.yul\":5911:5915   */\n      0x00\n        /* \"#utility.yul\":5949:5951   */\n      0x60\n        /* \"#utility.yul\":5938:5947   */\n      dup3\n        /* \"#utility.yul\":5934:5952   */\n      add\n        /* \"#utility.yul\":5926:5952   */\n      swap1\n      pop\n        /* \"#utility.yul\":5962:6033   */\n      tag_410\n        /* \"#utility.yul\":6030:6031   */\n      0x00\n        /* \"#utility.yul\":6019:6028   */\n      dup4\n        /* \"#utility.yul\":6015:6032   */\n      add\n        /* \"#utility.yul\":6006:6012   */\n      dup7\n        /* \"#utility.yul\":5962:6033   */\n      tag_324\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6043:6115   */\n      tag_411\n        /* \"#utility.yul\":6111:6113   */\n      0x20\n        /* \"#utility.yul\":6100:6109   */\n      dup4\n        /* \"#utility.yul\":6096:6114   */\n      add\n        /* \"#utility.yul\":6087:6093   */\n      dup6\n        /* \"#utility.yul\":6043:6115   */\n      tag_324\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6125:6191   */\n      tag_412\n        /* \"#utility.yul\":6187:6189   */\n      0x40\n        /* \"#utility.yul\":6176:6185   */\n      dup4\n        /* \"#utility.yul\":6172:6190   */\n      add\n        /* \"#utility.yul\":6163:6169   */\n      dup5\n        /* \"#utility.yul\":6125:6191   */\n      tag_323\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5768:6198   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6204:6678   */\n    tag_123:\n        /* \"#utility.yul\":6272:6278   */\n      0x00\n        /* \"#utility.yul\":6280:6286   */\n      dup1\n        /* \"#utility.yul\":6329:6331   */\n      0x40\n        /* \"#utility.yul\":6317:6326   */\n      dup4\n        /* \"#utility.yul\":6308:6315   */\n      dup6\n        /* \"#utility.yul\":6304:6327   */\n      sub\n        /* \"#utility.yul\":6300:6332   */\n      slt\n        /* \"#utility.yul\":6297:6416   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6335:6414   */\n      tag_415\n      tag_313\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6297:6416   */\n    tag_414:\n        /* \"#utility.yul\":6455:6456   */\n      0x00\n        /* \"#utility.yul\":6480:6533   */\n      tag_416\n        /* \"#utility.yul\":6525:6532   */\n      dup6\n        /* \"#utility.yul\":6516:6522   */\n      dup3\n        /* \"#utility.yul\":6505:6514   */\n      dup7\n        /* \"#utility.yul\":6501:6523   */\n      add\n        /* \"#utility.yul\":6480:6533   */\n      tag_318\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6470:6533   */\n      swap3\n      pop\n        /* \"#utility.yul\":6426:6543   */\n      pop\n        /* \"#utility.yul\":6582:6584   */\n      0x20\n        /* \"#utility.yul\":6608:6661   */\n      tag_417\n        /* \"#utility.yul\":6653:6660   */\n      dup6\n        /* \"#utility.yul\":6644:6650   */\n      dup3\n        /* \"#utility.yul\":6633:6642   */\n      dup7\n        /* \"#utility.yul\":6629:6651   */\n      add\n        /* \"#utility.yul\":6608:6661   */\n      tag_318\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6598:6661   */\n      swap2\n      pop\n        /* \"#utility.yul\":6553:6671   */\n      pop\n        /* \"#utility.yul\":6204:6678   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6684:6864   */\n    tag_328:\n        /* \"#utility.yul\":6732:6809   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6729:6730   */\n      0x00\n        /* \"#utility.yul\":6722:6810   */\n      mstore\n        /* \"#utility.yul\":6829:6833   */\n      0x22\n        /* \"#utility.yul\":6826:6827   */\n      0x04\n        /* \"#utility.yul\":6819:6834   */\n      mstore\n        /* \"#utility.yul\":6853:6857   */\n      0x24\n        /* \"#utility.yul\":6850:6851   */\n      0x00\n        /* \"#utility.yul\":6843:6858   */\n      revert\n        /* \"#utility.yul\":6870:7190   */\n    tag_134:\n        /* \"#utility.yul\":6914:6920   */\n      0x00\n        /* \"#utility.yul\":6951:6952   */\n      0x02\n        /* \"#utility.yul\":6945:6949   */\n      dup3\n        /* \"#utility.yul\":6941:6953   */\n      div\n        /* \"#utility.yul\":6931:6953   */\n      swap1\n      pop\n        /* \"#utility.yul\":6998:6999   */\n      0x01\n        /* \"#utility.yul\":6992:6996   */\n      dup3\n        /* \"#utility.yul\":6988:7000   */\n      and\n        /* \"#utility.yul\":7019:7037   */\n      dup1\n        /* \"#utility.yul\":7009:7090   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7075:7079   */\n      0x7f\n        /* \"#utility.yul\":7067:7073   */\n      dup3\n        /* \"#utility.yul\":7063:7080   */\n      and\n        /* \"#utility.yul\":7053:7080   */\n      swap2\n      pop\n        /* \"#utility.yul\":7009:7090   */\n    tag_420:\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7129:7135   */\n      dup3\n        /* \"#utility.yul\":7126:7140   */\n      lt\n        /* \"#utility.yul\":7106:7124   */\n      dup2\n        /* \"#utility.yul\":7103:7141   */\n      sub\n        /* \"#utility.yul\":7100:7184   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":7156:7174   */\n      tag_422\n      tag_328\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7100:7184   */\n    tag_421:\n        /* \"#utility.yul\":6921:7190   */\n      pop\n        /* \"#utility.yul\":6870:7190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7196:7376   */\n    tag_329:\n        /* \"#utility.yul\":7244:7321   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7241:7242   */\n      0x00\n        /* \"#utility.yul\":7234:7322   */\n      mstore\n        /* \"#utility.yul\":7341:7345   */\n      0x11\n        /* \"#utility.yul\":7338:7339   */\n      0x04\n        /* \"#utility.yul\":7331:7346   */\n      mstore\n        /* \"#utility.yul\":7365:7369   */\n      0x24\n        /* \"#utility.yul\":7362:7363   */\n      0x00\n        /* \"#utility.yul\":7355:7370   */\n      revert\n        /* \"#utility.yul\":7382:7573   */\n    tag_161:\n        /* \"#utility.yul\":7422:7425   */\n      0x00\n        /* \"#utility.yul\":7441:7461   */\n      tag_425\n        /* \"#utility.yul\":7459:7460   */\n      dup3\n        /* \"#utility.yul\":7441:7461   */\n      tag_319\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7436:7461   */\n      swap2\n      pop\n        /* \"#utility.yul\":7475:7495   */\n      tag_426\n        /* \"#utility.yul\":7493:7494   */\n      dup4\n        /* \"#utility.yul\":7475:7495   */\n      tag_319\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7470:7495   */\n      swap3\n      pop\n        /* \"#utility.yul\":7518:7519   */\n      dup3\n        /* \"#utility.yul\":7515:7516   */\n      dup3\n        /* \"#utility.yul\":7511:7520   */\n      add\n        /* \"#utility.yul\":7504:7520   */\n      swap1\n      pop\n        /* \"#utility.yul\":7539:7542   */\n      dup1\n        /* \"#utility.yul\":7536:7537   */\n      dup3\n        /* \"#utility.yul\":7533:7543   */\n      gt\n        /* \"#utility.yul\":7530:7566   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":7546:7564   */\n      tag_428\n      tag_329\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7530:7566   */\n    tag_427:\n        /* \"#utility.yul\":7382:7573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7579:7750   */\n    tag_330:\n        /* \"#utility.yul\":7719:7742   */\n      0x546f6f206561726c7920666f722068616c76696e670000000000000000000000\n        /* \"#utility.yul\":7715:7716   */\n      0x00\n        /* \"#utility.yul\":7707:7713   */\n      dup3\n        /* \"#utility.yul\":7703:7717   */\n      add\n        /* \"#utility.yul\":7696:7743   */\n      mstore\n        /* \"#utility.yul\":7579:7750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7756:8122   */\n    tag_331:\n        /* \"#utility.yul\":7898:7901   */\n      0x00\n        /* \"#utility.yul\":7919:7986   */\n      tag_431\n        /* \"#utility.yul\":7983:7985   */\n      0x15\n        /* \"#utility.yul\":7978:7981   */\n      dup4\n        /* \"#utility.yul\":7919:7986   */\n      tag_308\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7912:7986   */\n      swap2\n      pop\n        /* \"#utility.yul\":7995:8088   */\n      tag_432\n        /* \"#utility.yul\":8084:8087   */\n      dup3\n        /* \"#utility.yul\":7995:8088   */\n      tag_330\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8113:8115   */\n      0x20\n        /* \"#utility.yul\":8108:8111   */\n      dup3\n        /* \"#utility.yul\":8104:8116   */\n      add\n        /* \"#utility.yul\":8097:8116   */\n      swap1\n      pop\n        /* \"#utility.yul\":7756:8122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8128:8547   */\n    tag_164:\n        /* \"#utility.yul\":8294:8298   */\n      0x00\n        /* \"#utility.yul\":8332:8334   */\n      0x20\n        /* \"#utility.yul\":8321:8330   */\n      dup3\n        /* \"#utility.yul\":8317:8335   */\n      add\n        /* \"#utility.yul\":8309:8335   */\n      swap1\n      pop\n        /* \"#utility.yul\":8381:8390   */\n      dup2\n        /* \"#utility.yul\":8375:8379   */\n      dup2\n        /* \"#utility.yul\":8371:8391   */\n      sub\n        /* \"#utility.yul\":8367:8368   */\n      0x00\n        /* \"#utility.yul\":8356:8365   */\n      dup4\n        /* \"#utility.yul\":8352:8369   */\n      add\n        /* \"#utility.yul\":8345:8392   */\n      mstore\n        /* \"#utility.yul\":8409:8540   */\n      tag_434\n        /* \"#utility.yul\":8535:8539   */\n      dup2\n        /* \"#utility.yul\":8409:8540   */\n      tag_331\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8401:8540   */\n      swap1\n      pop\n        /* \"#utility.yul\":8128:8547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8553:8733   */\n    tag_332:\n        /* \"#utility.yul\":8601:8678   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8598:8599   */\n      0x00\n        /* \"#utility.yul\":8591:8679   */\n      mstore\n        /* \"#utility.yul\":8698:8702   */\n      0x12\n        /* \"#utility.yul\":8695:8696   */\n      0x04\n        /* \"#utility.yul\":8688:8703   */\n      mstore\n        /* \"#utility.yul\":8722:8726   */\n      0x24\n        /* \"#utility.yul\":8719:8720   */\n      0x00\n        /* \"#utility.yul\":8712:8727   */\n      revert\n        /* \"#utility.yul\":8739:8924   */\n    tag_166:\n        /* \"#utility.yul\":8779:8780   */\n      0x00\n        /* \"#utility.yul\":8796:8816   */\n      tag_437\n        /* \"#utility.yul\":8814:8815   */\n      dup3\n        /* \"#utility.yul\":8796:8816   */\n      tag_319\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8791:8816   */\n      swap2\n      pop\n        /* \"#utility.yul\":8830:8850   */\n      tag_438\n        /* \"#utility.yul\":8848:8849   */\n      dup4\n        /* \"#utility.yul\":8830:8850   */\n      tag_319\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8825:8850   */\n      swap3\n      pop\n        /* \"#utility.yul\":8869:8870   */\n      dup3\n        /* \"#utility.yul\":8859:8894   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":8874:8892   */\n      tag_440\n      tag_332\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8859:8894   */\n    tag_439:\n        /* \"#utility.yul\":8916:8917   */\n      dup3\n        /* \"#utility.yul\":8913:8914   */\n      dup3\n        /* \"#utility.yul\":8909:8918   */\n      div\n        /* \"#utility.yul\":8904:8918   */\n      swap1\n      pop\n        /* \"#utility.yul\":8739:8924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8930:9098   */\n    tag_333:\n        /* \"#utility.yul\":9070:9090   */\n      0x4e6f7420656e6f7567682062616c616e63650000000000000000000000000000\n        /* \"#utility.yul\":9066:9067   */\n      0x00\n        /* \"#utility.yul\":9058:9064   */\n      dup3\n        /* \"#utility.yul\":9054:9068   */\n      add\n        /* \"#utility.yul\":9047:9091   */\n      mstore\n        /* \"#utility.yul\":8930:9098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9104:9470   */\n    tag_334:\n        /* \"#utility.yul\":9246:9249   */\n      0x00\n        /* \"#utility.yul\":9267:9334   */\n      tag_443\n        /* \"#utility.yul\":9331:9333   */\n      0x12\n        /* \"#utility.yul\":9326:9329   */\n      dup4\n        /* \"#utility.yul\":9267:9334   */\n      tag_308\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":9260:9334   */\n      swap2\n      pop\n        /* \"#utility.yul\":9343:9436   */\n      tag_444\n        /* \"#utility.yul\":9432:9435   */\n      dup3\n        /* \"#utility.yul\":9343:9436   */\n      tag_333\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9461:9463   */\n      0x20\n        /* \"#utility.yul\":9456:9459   */\n      dup3\n        /* \"#utility.yul\":9452:9464   */\n      add\n        /* \"#utility.yul\":9445:9464   */\n      swap1\n      pop\n        /* \"#utility.yul\":9104:9470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9476:9895   */\n    tag_186:\n        /* \"#utility.yul\":9642:9646   */\n      0x00\n        /* \"#utility.yul\":9680:9682   */\n      0x20\n        /* \"#utility.yul\":9669:9678   */\n      dup3\n        /* \"#utility.yul\":9665:9683   */\n      add\n        /* \"#utility.yul\":9657:9683   */\n      swap1\n      pop\n        /* \"#utility.yul\":9729:9738   */\n      dup2\n        /* \"#utility.yul\":9723:9727   */\n      dup2\n        /* \"#utility.yul\":9719:9739   */\n      sub\n        /* \"#utility.yul\":9715:9716   */\n      0x00\n        /* \"#utility.yul\":9704:9713   */\n      dup4\n        /* \"#utility.yul\":9700:9717   */\n      add\n        /* \"#utility.yul\":9693:9740   */\n      mstore\n        /* \"#utility.yul\":9757:9888   */\n      tag_446\n        /* \"#utility.yul\":9883:9887   */\n      dup2\n        /* \"#utility.yul\":9757:9888   */\n      tag_334\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9749:9888   */\n      swap1\n      pop\n        /* \"#utility.yul\":9476:9895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9901:10082   */\n    tag_335:\n        /* \"#utility.yul\":10041:10074   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":10037:10038   */\n      0x00\n        /* \"#utility.yul\":10029:10035   */\n      dup3\n        /* \"#utility.yul\":10025:10039   */\n      add\n        /* \"#utility.yul\":10018:10075   */\n      mstore\n        /* \"#utility.yul\":9901:10082   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10088:10454   */\n    tag_336:\n        /* \"#utility.yul\":10230:10233   */\n      0x00\n        /* \"#utility.yul\":10251:10318   */\n      tag_449\n        /* \"#utility.yul\":10315:10317   */\n      0x1f\n        /* \"#utility.yul\":10310:10313   */\n      dup4\n        /* \"#utility.yul\":10251:10318   */\n      tag_308\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10244:10318   */\n      swap2\n      pop\n        /* \"#utility.yul\":10327:10420   */\n      tag_450\n        /* \"#utility.yul\":10416:10419   */\n      dup3\n        /* \"#utility.yul\":10327:10420   */\n      tag_335\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":10445:10447   */\n      0x20\n        /* \"#utility.yul\":10440:10443   */\n      dup3\n        /* \"#utility.yul\":10436:10448   */\n      add\n        /* \"#utility.yul\":10429:10448   */\n      swap1\n      pop\n        /* \"#utility.yul\":10088:10454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10460:10879   */\n    tag_189:\n        /* \"#utility.yul\":10626:10630   */\n      0x00\n        /* \"#utility.yul\":10664:10666   */\n      0x20\n        /* \"#utility.yul\":10653:10662   */\n      dup3\n        /* \"#utility.yul\":10649:10667   */\n      add\n        /* \"#utility.yul\":10641:10667   */\n      swap1\n      pop\n        /* \"#utility.yul\":10713:10722   */\n      dup2\n        /* \"#utility.yul\":10707:10711   */\n      dup2\n        /* \"#utility.yul\":10703:10723   */\n      sub\n        /* \"#utility.yul\":10699:10700   */\n      0x00\n        /* \"#utility.yul\":10688:10697   */\n      dup4\n        /* \"#utility.yul\":10684:10701   */\n      add\n        /* \"#utility.yul\":10677:10724   */\n      mstore\n        /* \"#utility.yul\":10741:10872   */\n      tag_452\n        /* \"#utility.yul\":10867:10871   */\n      dup2\n        /* \"#utility.yul\":10741:10872   */\n      tag_336\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10733:10872   */\n      swap1\n      pop\n        /* \"#utility.yul\":10460:10879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10885:11053   */\n    tag_337:\n        /* \"#utility.yul\":11025:11045   */\n      0x4d617820737570706c7920726561636865640000000000000000000000000000\n        /* \"#utility.yul\":11021:11022   */\n      0x00\n        /* \"#utility.yul\":11013:11019   */\n      dup3\n        /* \"#utility.yul\":11009:11023   */\n      add\n        /* \"#utility.yul\":11002:11046   */\n      mstore\n        /* \"#utility.yul\":10885:11053   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11059:11425   */\n    tag_338:\n        /* \"#utility.yul\":11201:11204   */\n      0x00\n        /* \"#utility.yul\":11222:11289   */\n      tag_455\n        /* \"#utility.yul\":11286:11288   */\n      0x12\n        /* \"#utility.yul\":11281:11284   */\n      dup4\n        /* \"#utility.yul\":11222:11289   */\n      tag_308\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11215:11289   */\n      swap2\n      pop\n        /* \"#utility.yul\":11298:11391   */\n      tag_456\n        /* \"#utility.yul\":11387:11390   */\n      dup3\n        /* \"#utility.yul\":11298:11391   */\n      tag_337\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":11416:11418   */\n      0x20\n        /* \"#utility.yul\":11411:11414   */\n      dup3\n        /* \"#utility.yul\":11407:11419   */\n      add\n        /* \"#utility.yul\":11400:11419   */\n      swap1\n      pop\n        /* \"#utility.yul\":11059:11425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11431:11850   */\n    tag_212:\n        /* \"#utility.yul\":11597:11601   */\n      0x00\n        /* \"#utility.yul\":11635:11637   */\n      0x20\n        /* \"#utility.yul\":11624:11633   */\n      dup3\n        /* \"#utility.yul\":11620:11638   */\n      add\n        /* \"#utility.yul\":11612:11638   */\n      swap1\n      pop\n        /* \"#utility.yul\":11684:11693   */\n      dup2\n        /* \"#utility.yul\":11678:11682   */\n      dup2\n        /* \"#utility.yul\":11674:11694   */\n      sub\n        /* \"#utility.yul\":11670:11671   */\n      0x00\n        /* \"#utility.yul\":11659:11668   */\n      dup4\n        /* \"#utility.yul\":11655:11672   */\n      add\n        /* \"#utility.yul\":11648:11695   */\n      mstore\n        /* \"#utility.yul\":11712:11843   */\n      tag_458\n        /* \"#utility.yul\":11838:11842   */\n      dup2\n        /* \"#utility.yul\":11712:11843   */\n      tag_338\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":11704:11843   */\n      swap1\n      pop\n        /* \"#utility.yul\":11431:11850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11856:12022   */\n    tag_339:\n        /* \"#utility.yul\":11996:12014   */\n      0x4e6f20746f6b656e73207374616b656400000000000000000000000000000000\n        /* \"#utility.yul\":11992:11993   */\n      0x00\n        /* \"#utility.yul\":11984:11990   */\n      dup3\n        /* \"#utility.yul\":11980:11994   */\n      add\n        /* \"#utility.yul\":11973:12015   */\n      mstore\n        /* \"#utility.yul\":11856:12022   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12028:12394   */\n    tag_340:\n        /* \"#utility.yul\":12170:12173   */\n      0x00\n        /* \"#utility.yul\":12191:12258   */\n      tag_461\n        /* \"#utility.yul\":12255:12257   */\n      0x10\n        /* \"#utility.yul\":12250:12253   */\n      dup4\n        /* \"#utility.yul\":12191:12258   */\n      tag_308\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12184:12258   */\n      swap2\n      pop\n        /* \"#utility.yul\":12267:12360   */\n      tag_462\n        /* \"#utility.yul\":12356:12359   */\n      dup3\n        /* \"#utility.yul\":12267:12360   */\n      tag_339\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12385:12387   */\n      0x20\n        /* \"#utility.yul\":12380:12383   */\n      dup3\n        /* \"#utility.yul\":12376:12388   */\n      add\n        /* \"#utility.yul\":12369:12388   */\n      swap1\n      pop\n        /* \"#utility.yul\":12028:12394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12400:12819   */\n    tag_221:\n        /* \"#utility.yul\":12566:12570   */\n      0x00\n        /* \"#utility.yul\":12604:12606   */\n      0x20\n        /* \"#utility.yul\":12593:12602   */\n      dup3\n        /* \"#utility.yul\":12589:12607   */\n      add\n        /* \"#utility.yul\":12581:12607   */\n      swap1\n      pop\n        /* \"#utility.yul\":12653:12662   */\n      dup2\n        /* \"#utility.yul\":12647:12651   */\n      dup2\n        /* \"#utility.yul\":12643:12663   */\n      sub\n        /* \"#utility.yul\":12639:12640   */\n      0x00\n        /* \"#utility.yul\":12628:12637   */\n      dup4\n        /* \"#utility.yul\":12624:12641   */\n      add\n        /* \"#utility.yul\":12617:12664   */\n      mstore\n        /* \"#utility.yul\":12681:12812   */\n      tag_464\n        /* \"#utility.yul\":12807:12811   */\n      dup2\n        /* \"#utility.yul\":12681:12812   */\n      tag_340\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12673:12812   */\n      swap1\n      pop\n        /* \"#utility.yul\":12400:12819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12825:13019   */\n    tag_223:\n        /* \"#utility.yul\":12865:12869   */\n      0x00\n        /* \"#utility.yul\":12885:12905   */\n      tag_466\n        /* \"#utility.yul\":12903:12904   */\n      dup3\n        /* \"#utility.yul\":12885:12905   */\n      tag_319\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12880:12905   */\n      swap2\n      pop\n        /* \"#utility.yul\":12919:12939   */\n      tag_467\n        /* \"#utility.yul\":12937:12938   */\n      dup4\n        /* \"#utility.yul\":12919:12939   */\n      tag_319\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12914:12939   */\n      swap3\n      pop\n        /* \"#utility.yul\":12963:12964   */\n      dup3\n        /* \"#utility.yul\":12960:12961   */\n      dup3\n        /* \"#utility.yul\":12956:12965   */\n      sub\n        /* \"#utility.yul\":12948:12965   */\n      swap1\n      pop\n        /* \"#utility.yul\":12987:12988   */\n      dup2\n        /* \"#utility.yul\":12981:12985   */\n      dup2\n        /* \"#utility.yul\":12978:12989   */\n      gt\n        /* \"#utility.yul\":12975:13012   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":12992:13010   */\n      tag_469\n      tag_329\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12975:13012   */\n    tag_468:\n        /* \"#utility.yul\":12825:13019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13025:13435   */\n    tag_225:\n        /* \"#utility.yul\":13065:13072   */\n      0x00\n        /* \"#utility.yul\":13088:13108   */\n      tag_471\n        /* \"#utility.yul\":13106:13107   */\n      dup3\n        /* \"#utility.yul\":13088:13108   */\n      tag_319\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13083:13108   */\n      swap2\n      pop\n        /* \"#utility.yul\":13122:13142   */\n      tag_472\n        /* \"#utility.yul\":13140:13141   */\n      dup4\n        /* \"#utility.yul\":13122:13142   */\n      tag_319\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":13117:13142   */\n      swap3\n      pop\n        /* \"#utility.yul\":13177:13178   */\n      dup3\n        /* \"#utility.yul\":13174:13175   */\n      dup3\n        /* \"#utility.yul\":13170:13179   */\n      mul\n        /* \"#utility.yul\":13199:13229   */\n      tag_473\n        /* \"#utility.yul\":13217:13228   */\n      dup2\n        /* \"#utility.yul\":13199:13229   */\n      tag_319\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13188:13229   */\n      swap2\n      pop\n        /* \"#utility.yul\":13378:13379   */\n      dup3\n        /* \"#utility.yul\":13369:13376   */\n      dup3\n        /* \"#utility.yul\":13365:13380   */\n      div\n        /* \"#utility.yul\":13362:13363   */\n      dup5\n        /* \"#utility.yul\":13359:13381   */\n      eq\n        /* \"#utility.yul\":13339:13340   */\n      dup4\n        /* \"#utility.yul\":13332:13341   */\n      iszero\n        /* \"#utility.yul\":13312:13395   */\n      or\n        /* \"#utility.yul\":13289:13428   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":13408:13426   */\n      tag_475\n      tag_329\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13289:13428   */\n    tag_474:\n        /* \"#utility.yul\":13073:13435   */\n      pop\n        /* \"#utility.yul\":13025:13435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13441:13883   */\n    tag_262:\n        /* \"#utility.yul\":13590:13594   */\n      0x00\n        /* \"#utility.yul\":13628:13630   */\n      0x60\n        /* \"#utility.yul\":13617:13626   */\n      dup3\n        /* \"#utility.yul\":13613:13631   */\n      add\n        /* \"#utility.yul\":13605:13631   */\n      swap1\n      pop\n        /* \"#utility.yul\":13641:13712   */\n      tag_477\n        /* \"#utility.yul\":13709:13710   */\n      0x00\n        /* \"#utility.yul\":13698:13707   */\n      dup4\n        /* \"#utility.yul\":13694:13711   */\n      add\n        /* \"#utility.yul\":13685:13691   */\n      dup7\n        /* \"#utility.yul\":13641:13712   */\n      tag_327\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":13722:13794   */\n      tag_478\n        /* \"#utility.yul\":13790:13792   */\n      0x20\n        /* \"#utility.yul\":13779:13788   */\n      dup4\n        /* \"#utility.yul\":13775:13793   */\n      add\n        /* \"#utility.yul\":13766:13772   */\n      dup6\n        /* \"#utility.yul\":13722:13794   */\n      tag_324\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13804:13876   */\n      tag_479\n        /* \"#utility.yul\":13872:13874   */\n      0x40\n        /* \"#utility.yul\":13861:13870   */\n      dup4\n        /* \"#utility.yul\":13857:13875   */\n      add\n        /* \"#utility.yul\":13848:13854   */\n      dup5\n        /* \"#utility.yul\":13804:13876   */\n      tag_324\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":13441:13883   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13889:14070   */\n    tag_341:\n        /* \"#utility.yul\":14029:14062   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14025:14026   */\n      0x00\n        /* \"#utility.yul\":14017:14023   */\n      dup3\n        /* \"#utility.yul\":14013:14027   */\n      add\n        /* \"#utility.yul\":14006:14063   */\n      mstore\n        /* \"#utility.yul\":13889:14070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14076:14442   */\n    tag_342:\n        /* \"#utility.yul\":14218:14221   */\n      0x00\n        /* \"#utility.yul\":14239:14306   */\n      tag_482\n        /* \"#utility.yul\":14303:14305   */\n      0x1f\n        /* \"#utility.yul\":14298:14301   */\n      dup4\n        /* \"#utility.yul\":14239:14306   */\n      tag_308\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14232:14306   */\n      swap2\n      pop\n        /* \"#utility.yul\":14315:14408   */\n      tag_483\n        /* \"#utility.yul\":14404:14407   */\n      dup3\n        /* \"#utility.yul\":14315:14408   */\n      tag_341\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14433:14435   */\n      0x20\n        /* \"#utility.yul\":14428:14431   */\n      dup3\n        /* \"#utility.yul\":14424:14436   */\n      add\n        /* \"#utility.yul\":14417:14436   */\n      swap1\n      pop\n        /* \"#utility.yul\":14076:14442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14448:14867   */\n    tag_285:\n        /* \"#utility.yul\":14614:14618   */\n      0x00\n        /* \"#utility.yul\":14652:14654   */\n      0x20\n        /* \"#utility.yul\":14641:14650   */\n      dup3\n        /* \"#utility.yul\":14637:14655   */\n      add\n        /* \"#utility.yul\":14629:14655   */\n      swap1\n      pop\n        /* \"#utility.yul\":14701:14710   */\n      dup2\n        /* \"#utility.yul\":14695:14699   */\n      dup2\n        /* \"#utility.yul\":14691:14711   */\n      sub\n        /* \"#utility.yul\":14687:14688   */\n      0x00\n        /* \"#utility.yul\":14676:14685   */\n      dup4\n        /* \"#utility.yul\":14672:14689   */\n      add\n        /* \"#utility.yul\":14665:14712   */\n      mstore\n        /* \"#utility.yul\":14729:14860   */\n      tag_485\n        /* \"#utility.yul\":14855:14859   */\n      dup2\n        /* \"#utility.yul\":14729:14860   */\n      tag_342\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":14721:14860   */\n      swap1\n      pop\n        /* \"#utility.yul\":14448:14867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e1c688412a4cd72c845d04e62f0158c451a0a69a7f55a56afb5a6dae1517f00e64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1154": {
									"entryPoint": null,
									"id": 1154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 641,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 446,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 774,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 438,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2834,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10213:9",
										"nodeType": "YulBlock",
										"src": "0:10213:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:9",
													"nodeType": "YulBlock",
													"src": "35:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:9",
																		"nodeType": "YulLiteral",
																		"src": "52:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:9",
																		"nodeType": "YulLiteral",
																		"src": "55:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:9"
																},
																"nativeSrc": "45:88:9",
																"nodeType": "YulFunctionCall",
																"src": "45:88:9"
															},
															"nativeSrc": "45:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:9",
																		"nodeType": "YulLiteral",
																		"src": "149:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:9",
																		"nodeType": "YulLiteral",
																		"src": "152:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:9"
																},
																"nativeSrc": "142:15:9",
																"nodeType": "YulFunctionCall",
																"src": "142:15:9"
															},
															"nativeSrc": "142:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:9",
																		"nodeType": "YulLiteral",
																		"src": "173:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:9",
																		"nodeType": "YulLiteral",
																		"src": "176:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nativeSrc": "166:15:9",
																"nodeType": "YulFunctionCall",
																"src": "166:15:9"
															},
															"nativeSrc": "166:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:9"
											},
											{
												"body": {
													"nativeSrc": "244:51:9",
													"nodeType": "YulBlock",
													"src": "244:51:9",
													"statements": [
														{
															"nativeSrc": "254:34:9",
															"nodeType": "YulAssignment",
															"src": "254:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "279:1:9",
																		"nodeType": "YulLiteral",
																		"src": "279:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "282:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:9"
																},
																"nativeSrc": "275:13:9",
																"nodeType": "YulFunctionCall",
																"src": "275:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "254:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "193:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "225:5:9",
														"nodeType": "YulTypedName",
														"src": "225:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "235:8:9",
														"nodeType": "YulTypedName",
														"src": "235:8:9",
														"type": ""
													}
												],
												"src": "193:102:9"
											},
											{
												"body": {
													"nativeSrc": "374:775:9",
													"nodeType": "YulBlock",
													"src": "374:775:9",
													"statements": [
														{
															"nativeSrc": "384:15:9",
															"nodeType": "YulAssignment",
															"src": "384:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "393:6:9",
																"nodeType": "YulIdentifier",
																"src": "393:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "384:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:9"
																}
															]
														},
														{
															"nativeSrc": "408:14:9",
															"nodeType": "YulAssignment",
															"src": "408:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "417:5:9",
																"nodeType": "YulIdentifier",
																"src": "417:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "408:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "466:677:9",
																"nodeType": "YulBlock",
																"src": "466:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "554:22:9",
																			"nodeType": "YulBlock",
																			"src": "554:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "556:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:9"
																						},
																						"nativeSrc": "556:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:9"
																					},
																					"nativeSrc": "556:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "532:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "542:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "547:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "538:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:9"
																					},
																					"nativeSrc": "538:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "529:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:9"
																			},
																			"nativeSrc": "529:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:9"
																		},
																		"nativeSrc": "526:50:9",
																		"nodeType": "YulIf",
																		"src": "526:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "621:419:9",
																			"nodeType": "YulBlock",
																			"src": "621:419:9",
																			"statements": [
																				{
																					"nativeSrc": "1001:25:9",
																					"nodeType": "YulAssignment",
																					"src": "1001:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1014:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1021:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1010:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:9"
																						},
																						"nativeSrc": "1010:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1001:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "596:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "606:1:9",
																					"nodeType": "YulLiteral",
																					"src": "606:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "592:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:9"
																			},
																			"nativeSrc": "592:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:9"
																		},
																		"nativeSrc": "589:451:9",
																		"nodeType": "YulIf",
																		"src": "589:451:9"
																	},
																	{
																		"nativeSrc": "1053:23:9",
																		"nodeType": "YulAssignment",
																		"src": "1053:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1065:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1071:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1061:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:9"
																			},
																			"nativeSrc": "1061:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1053:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1089:44:9",
																		"nodeType": "YulAssignment",
																		"src": "1089:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1124:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "1101:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:9"
																			},
																			"nativeSrc": "1101:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1089:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "442:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:9",
																		"nodeType": "YulLiteral",
																		"src": "452:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "439:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:9"
																},
																"nativeSrc": "439:15:9",
																"nodeType": "YulFunctionCall",
																"src": "439:15:9"
															},
															"nativeSrc": "431:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "455:2:9",
																"nodeType": "YulBlock",
																"src": "455:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "435:3:9",
																"nodeType": "YulBlock",
																"src": "435:3:9",
																"statements": []
															},
															"src": "431:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "301:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "329:6:9",
														"nodeType": "YulTypedName",
														"src": "329:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "337:5:9",
														"nodeType": "YulTypedName",
														"src": "337:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "344:8:9",
														"nodeType": "YulTypedName",
														"src": "344:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "354:3:9",
														"nodeType": "YulTypedName",
														"src": "354:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "362:5:9",
														"nodeType": "YulTypedName",
														"src": "362:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "369:4:9",
														"nodeType": "YulTypedName",
														"src": "369:4:9",
														"type": ""
													}
												],
												"src": "301:848:9"
											},
											{
												"body": {
													"nativeSrc": "1215:1013:9",
													"nodeType": "YulBlock",
													"src": "1215:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:20:9",
																"nodeType": "YulBlock",
																"src": "1410:20:9",
																"statements": [
																	{
																		"nativeSrc": "1412:10:9",
																		"nodeType": "YulAssignment",
																		"src": "1412:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1421:1:9",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1412:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1423:5:9",
																		"nodeType": "YulLeave",
																		"src": "1423:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1400:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1393:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:9"
																},
																"nativeSrc": "1393:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1393:16:9"
															},
															"nativeSrc": "1390:40:9",
															"nodeType": "YulIf",
															"src": "1390:40:9"
														},
														{
															"body": {
																"nativeSrc": "1455:20:9",
																"nodeType": "YulBlock",
																"src": "1455:20:9",
																"statements": [
																	{
																		"nativeSrc": "1457:10:9",
																		"nodeType": "YulAssignment",
																		"src": "1457:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1466:1:9",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1457:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1468:5:9",
																		"nodeType": "YulLeave",
																		"src": "1468:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1449:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:9"
																},
																"nativeSrc": "1442:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1442:12:9"
															},
															"nativeSrc": "1439:36:9",
															"nodeType": "YulIf",
															"src": "1439:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1585:20:9",
																		"nodeType": "YulBlock",
																		"src": "1585:20:9",
																		"statements": [
																			{
																				"nativeSrc": "1587:10:9",
																				"nodeType": "YulAssignment",
																				"src": "1587:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1596:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1587:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1598:5:9",
																				"nodeType": "YulLeave",
																				"src": "1598:5:9"
																			}
																		]
																	},
																	"nativeSrc": "1578:27:9",
																	"nodeType": "YulCase",
																	"src": "1578:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1583:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1629:176:9",
																		"nodeType": "YulBlock",
																		"src": "1629:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1664:22:9",
																					"nodeType": "YulBlock",
																					"src": "1664:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1666:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:9"
																								},
																								"nativeSrc": "1666:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:9"
																							},
																							"nativeSrc": "1666:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1649:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1659:3:9",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1646:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:9"
																					},
																					"nativeSrc": "1646:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:9"
																				},
																				"nativeSrc": "1643:43:9",
																				"nodeType": "YulIf",
																				"src": "1643:43:9"
																			},
																			{
																				"nativeSrc": "1699:25:9",
																				"nodeType": "YulAssignment",
																				"src": "1699:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1712:1:9",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "1715:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "1708:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:9"
																					},
																					"nativeSrc": "1708:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1699:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1755:22:9",
																					"nodeType": "YulBlock",
																					"src": "1755:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1757:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:9"
																								},
																								"nativeSrc": "1757:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:9"
																							},
																							"nativeSrc": "1757:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "1743:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "1750:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1740:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:9"
																					},
																					"nativeSrc": "1740:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:9"
																				},
																				"nativeSrc": "1737:40:9",
																				"nodeType": "YulIf",
																				"src": "1737:40:9"
																			},
																			{
																				"nativeSrc": "1790:5:9",
																				"nodeType": "YulLeave",
																				"src": "1790:5:9"
																			}
																		]
																	},
																	"nativeSrc": "1614:191:9",
																	"nodeType": "YulCase",
																	"src": "1614:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1619:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1535:4:9",
																"nodeType": "YulIdentifier",
																"src": "1535:4:9"
															},
															"nativeSrc": "1528:277:9",
															"nodeType": "YulSwitch",
															"src": "1528:277:9"
														},
														{
															"body": {
																"nativeSrc": "1937:123:9",
																"nodeType": "YulBlock",
																"src": "1937:123:9",
																"statements": [
																	{
																		"nativeSrc": "1951:28:9",
																		"nodeType": "YulAssignment",
																		"src": "1951:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1964:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1970:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1960:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:9"
																			},
																			"nativeSrc": "1960:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1951:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2010:22:9",
																			"nodeType": "YulBlock",
																			"src": "2010:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2012:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:9"
																						},
																						"nativeSrc": "2012:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:9"
																					},
																					"nativeSrc": "2012:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "1998:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "2005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1995:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:9"
																			},
																			"nativeSrc": "1995:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:9"
																		},
																		"nativeSrc": "1992:40:9",
																		"nodeType": "YulIf",
																		"src": "1992:40:9"
																	},
																	{
																		"nativeSrc": "2045:5:9",
																		"nodeType": "YulLeave",
																		"src": "2045:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1840:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1846:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1837:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:9"
																				},
																				"nativeSrc": "1837:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1854:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1864:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1851:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:9"
																				},
																				"nativeSrc": "1851:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:9"
																		},
																		"nativeSrc": "1833:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1889:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1895:3:9",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1886:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:9"
																				},
																				"nativeSrc": "1886:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1904:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1914:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1901:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:9"
																				},
																				"nativeSrc": "1901:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1882:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:9"
																		},
																		"nativeSrc": "1882:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1817:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:9"
																},
																"nativeSrc": "1817:111:9",
																"nodeType": "YulFunctionCall",
																"src": "1817:111:9"
															},
															"nativeSrc": "1814:246:9",
															"nodeType": "YulIf",
															"src": "1814:246:9"
														},
														{
															"nativeSrc": "2070:57:9",
															"nodeType": "YulAssignment",
															"src": "2070:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2107:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2113:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "2123:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2085:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:9"
																},
																"nativeSrc": "2085:42:9",
																"nodeType": "YulFunctionCall",
																"src": "2085:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2070:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "2077:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:22:9",
																"nodeType": "YulBlock",
																"src": "2166:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2168:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:9"
																			},
																			"nativeSrc": "2168:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:9"
																		},
																		"nativeSrc": "2168:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2143:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "2154:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "2159:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2150:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:9"
																		},
																		"nativeSrc": "2150:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2140:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:9"
																},
																"nativeSrc": "2140:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2140:25:9"
															},
															"nativeSrc": "2137:51:9",
															"nodeType": "YulIf",
															"src": "2137:51:9"
														},
														{
															"nativeSrc": "2197:25:9",
															"nodeType": "YulAssignment",
															"src": "2197:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2210:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2217:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2206:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:9"
																},
																"nativeSrc": "2206:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2206:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2197:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1155:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1185:4:9",
														"nodeType": "YulTypedName",
														"src": "1185:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1191:8:9",
														"nodeType": "YulTypedName",
														"src": "1191:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1201:3:9",
														"nodeType": "YulTypedName",
														"src": "1201:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1209:5:9",
														"nodeType": "YulTypedName",
														"src": "1209:5:9",
														"type": ""
													}
												],
												"src": "1155:1073:9"
											},
											{
												"body": {
													"nativeSrc": "2279:32:9",
													"nodeType": "YulBlock",
													"src": "2279:32:9",
													"statements": [
														{
															"nativeSrc": "2289:16:9",
															"nodeType": "YulAssignment",
															"src": "2289:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2300:5:9",
																"nodeType": "YulIdentifier",
																"src": "2300:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2289:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2234:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2261:5:9",
														"nodeType": "YulTypedName",
														"src": "2261:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2271:7:9",
														"nodeType": "YulTypedName",
														"src": "2271:7:9",
														"type": ""
													}
												],
												"src": "2234:77:9"
											},
											{
												"body": {
													"nativeSrc": "2360:43:9",
													"nodeType": "YulBlock",
													"src": "2360:43:9",
													"statements": [
														{
															"nativeSrc": "2370:27:9",
															"nodeType": "YulAssignment",
															"src": "2370:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2385:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2385:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2381:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2381:3:9"
																},
																"nativeSrc": "2381:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2381:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2370:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2370:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2317:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2342:5:9",
														"nodeType": "YulTypedName",
														"src": "2342:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2352:7:9",
														"nodeType": "YulTypedName",
														"src": "2352:7:9",
														"type": ""
													}
												],
												"src": "2317:86:9"
											},
											{
												"body": {
													"nativeSrc": "2473:217:9",
													"nodeType": "YulBlock",
													"src": "2473:217:9",
													"statements": [
														{
															"nativeSrc": "2483:31:9",
															"nodeType": "YulAssignment",
															"src": "2483:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2509:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2509:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2491:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2491:17:9"
																},
																"nativeSrc": "2491:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2491:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2483:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2483:4:9"
																}
															]
														},
														{
															"nativeSrc": "2523:37:9",
															"nodeType": "YulAssignment",
															"src": "2523:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2551:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2551:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2535:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "2535:15:9"
																},
																"nativeSrc": "2535:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2535:25:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "2523:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2523:8:9"
																}
															]
														},
														{
															"nativeSrc": "2570:113:9",
															"nodeType": "YulAssignment",
															"src": "2570:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2600:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2600:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2606:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2606:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:66:9",
																		"nodeType": "YulLiteral",
																		"src": "2616:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2579:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "2579:20:9"
																},
																"nativeSrc": "2579:104:9",
																"nodeType": "YulFunctionCall",
																"src": "2579:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2570:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2570:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "2409:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2448:4:9",
														"nodeType": "YulTypedName",
														"src": "2448:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2454:8:9",
														"nodeType": "YulTypedName",
														"src": "2454:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2467:5:9",
														"nodeType": "YulTypedName",
														"src": "2467:5:9",
														"type": ""
													}
												],
												"src": "2409:281:9"
											},
											{
												"body": {
													"nativeSrc": "2744:362:9",
													"nodeType": "YulBlock",
													"src": "2744:362:9",
													"statements": [
														{
															"nativeSrc": "2754:25:9",
															"nodeType": "YulAssignment",
															"src": "2754:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2777:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2777:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2759:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:9"
																},
																"nativeSrc": "2759:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2759:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2754:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2754:1:9"
																}
															]
														},
														{
															"nativeSrc": "2788:25:9",
															"nodeType": "YulAssignment",
															"src": "2788:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2811:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2811:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2793:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2793:17:9"
																},
																"nativeSrc": "2793:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2793:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2788:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2788:1:9"
																}
															]
														},
														{
															"nativeSrc": "2822:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2822:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2845:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2848:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2848:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2841:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:9"
																},
																"nativeSrc": "2841:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2841:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2826:11:9",
																	"nodeType": "YulTypedName",
																	"src": "2826:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2859:41:9",
															"nodeType": "YulAssignment",
															"src": "2859:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2888:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "2888:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2870:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2870:17:9"
																},
																"nativeSrc": "2870:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2870:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2859:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2859:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3077:22:9",
																"nodeType": "YulBlock",
																"src": "3077:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3079:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3079:16:9"
																			},
																			"nativeSrc": "3079:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3079:18:9"
																		},
																		"nativeSrc": "3079:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3010:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "3010:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3003:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3003:6:9"
																				},
																				"nativeSrc": "3003:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3003:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3033:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "3033:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3040:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "3040:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3049:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "3049:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3036:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3036:3:9"
																						},
																						"nativeSrc": "3036:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3036:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3030:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3030:2:9"
																				},
																				"nativeSrc": "3030:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2983:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2983:2:9"
																		},
																		"nativeSrc": "2983:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2963:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:9"
																},
																"nativeSrc": "2963:113:9",
																"nodeType": "YulFunctionCall",
																"src": "2963:113:9"
															},
															"nativeSrc": "2960:139:9",
															"nodeType": "YulIf",
															"src": "2960:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2696:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2727:1:9",
														"nodeType": "YulTypedName",
														"src": "2727:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2730:1:9",
														"nodeType": "YulTypedName",
														"src": "2730:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2736:7:9",
														"nodeType": "YulTypedName",
														"src": "2736:7:9",
														"type": ""
													}
												],
												"src": "2696:410:9"
											},
											{
												"body": {
													"nativeSrc": "3171:40:9",
													"nodeType": "YulBlock",
													"src": "3171:40:9",
													"statements": [
														{
															"nativeSrc": "3182:22:9",
															"nodeType": "YulAssignment",
															"src": "3182:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3192:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3192:5:9"
																},
																"nativeSrc": "3192:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3192:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3182:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3112:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3154:5:9",
														"nodeType": "YulTypedName",
														"src": "3154:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3164:6:9",
														"nodeType": "YulTypedName",
														"src": "3164:6:9",
														"type": ""
													}
												],
												"src": "3112:99:9"
											},
											{
												"body": {
													"nativeSrc": "3245:152:9",
													"nodeType": "YulBlock",
													"src": "3245:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3262:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3262:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3265:77:9",
																		"nodeType": "YulLiteral",
																		"src": "3265:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3255:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:9"
																},
																"nativeSrc": "3255:88:9",
																"nodeType": "YulFunctionCall",
																"src": "3255:88:9"
															},
															"nativeSrc": "3255:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "3255:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3359:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3359:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3362:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3362:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:9"
																},
																"nativeSrc": "3352:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3352:15:9"
															},
															"nativeSrc": "3352:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3352:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3383:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3386:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3386:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3376:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3376:6:9"
																},
																"nativeSrc": "3376:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3376:15:9"
															},
															"nativeSrc": "3376:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3376:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3217:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3217:180:9"
											},
											{
												"body": {
													"nativeSrc": "3431:152:9",
													"nodeType": "YulBlock",
													"src": "3431:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3448:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3448:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3451:77:9",
																		"nodeType": "YulLiteral",
																		"src": "3451:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3441:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:9"
																},
																"nativeSrc": "3441:88:9",
																"nodeType": "YulFunctionCall",
																"src": "3441:88:9"
															},
															"nativeSrc": "3441:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "3441:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3545:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3545:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3548:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3548:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3538:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:9"
																},
																"nativeSrc": "3538:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3538:15:9"
															},
															"nativeSrc": "3538:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3538:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3569:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3569:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3572:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3572:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3562:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:9"
																},
																"nativeSrc": "3562:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3562:15:9"
															},
															"nativeSrc": "3562:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3562:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3403:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3403:180:9"
											},
											{
												"body": {
													"nativeSrc": "3640:269:9",
													"nodeType": "YulBlock",
													"src": "3640:269:9",
													"statements": [
														{
															"nativeSrc": "3650:22:9",
															"nodeType": "YulAssignment",
															"src": "3650:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3664:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3664:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3670:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3670:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3660:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3660:3:9"
																},
																"nativeSrc": "3660:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3660:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3650:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3650:6:9"
																}
															]
														},
														{
															"nativeSrc": "3681:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3681:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3711:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3711:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3717:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3717:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3707:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:9"
																},
																"nativeSrc": "3707:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3707:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3685:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3685:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3758:51:9",
																"nodeType": "YulBlock",
																"src": "3758:51:9",
																"statements": [
																	{
																		"nativeSrc": "3772:27:9",
																		"nodeType": "YulAssignment",
																		"src": "3772:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3786:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3786:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3794:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3782:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3782:3:9"
																			},
																			"nativeSrc": "3782:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3782:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3772:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3738:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3738:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3731:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:9"
																},
																"nativeSrc": "3731:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3731:26:9"
															},
															"nativeSrc": "3728:81:9",
															"nodeType": "YulIf",
															"src": "3728:81:9"
														},
														{
															"body": {
																"nativeSrc": "3861:42:9",
																"nodeType": "YulBlock",
																"src": "3861:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3875:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3875:16:9"
																			},
																			"nativeSrc": "3875:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3875:18:9"
																		},
																		"nativeSrc": "3875:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3875:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3825:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3825:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3848:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3848:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3856:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3845:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3845:2:9"
																		},
																		"nativeSrc": "3845:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3845:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3822:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3822:2:9"
																},
																"nativeSrc": "3822:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3822:38:9"
															},
															"nativeSrc": "3819:84:9",
															"nodeType": "YulIf",
															"src": "3819:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3589:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3624:4:9",
														"nodeType": "YulTypedName",
														"src": "3624:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3633:6:9",
														"nodeType": "YulTypedName",
														"src": "3633:6:9",
														"type": ""
													}
												],
												"src": "3589:320:9"
											},
											{
												"body": {
													"nativeSrc": "3969:87:9",
													"nodeType": "YulBlock",
													"src": "3969:87:9",
													"statements": [
														{
															"nativeSrc": "3979:11:9",
															"nodeType": "YulAssignment",
															"src": "3979:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "3987:3:9",
																"nodeType": "YulIdentifier",
																"src": "3987:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3979:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3979:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4007:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4007:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4010:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4010:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4000:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4000:6:9"
																},
																"nativeSrc": "4000:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4000:14:9"
															},
															"nativeSrc": "4000:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "4000:14:9"
														},
														{
															"nativeSrc": "4023:26:9",
															"nodeType": "YulAssignment",
															"src": "4023:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4041:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4041:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4044:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4044:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4031:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4031:9:9"
																},
																"nativeSrc": "4031:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4031:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4023:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4023:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3915:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3956:3:9",
														"nodeType": "YulTypedName",
														"src": "3956:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3964:4:9",
														"nodeType": "YulTypedName",
														"src": "3964:4:9",
														"type": ""
													}
												],
												"src": "3915:141:9"
											},
											{
												"body": {
													"nativeSrc": "4106:49:9",
													"nodeType": "YulBlock",
													"src": "4106:49:9",
													"statements": [
														{
															"nativeSrc": "4116:33:9",
															"nodeType": "YulAssignment",
															"src": "4116:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4134:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4134:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4141:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4141:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4130:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:9"
																		},
																		"nativeSrc": "4130:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4130:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4146:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4126:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:9"
																},
																"nativeSrc": "4126:23:9",
																"nodeType": "YulFunctionCall",
																"src": "4126:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4116:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4062:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4089:5:9",
														"nodeType": "YulTypedName",
														"src": "4089:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4099:6:9",
														"nodeType": "YulTypedName",
														"src": "4099:6:9",
														"type": ""
													}
												],
												"src": "4062:93:9"
											},
											{
												"body": {
													"nativeSrc": "4214:54:9",
													"nodeType": "YulBlock",
													"src": "4214:54:9",
													"statements": [
														{
															"nativeSrc": "4224:37:9",
															"nodeType": "YulAssignment",
															"src": "4224:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4249:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4255:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4255:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4245:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:9"
																},
																"nativeSrc": "4245:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4245:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4224:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4224:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4161:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4189:4:9",
														"nodeType": "YulTypedName",
														"src": "4189:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4195:5:9",
														"nodeType": "YulTypedName",
														"src": "4195:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4205:8:9",
														"nodeType": "YulTypedName",
														"src": "4205:8:9",
														"type": ""
													}
												],
												"src": "4161:107:9"
											},
											{
												"body": {
													"nativeSrc": "4350:317:9",
													"nodeType": "YulBlock",
													"src": "4350:317:9",
													"statements": [
														{
															"nativeSrc": "4360:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4360:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4381:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "4381:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4393:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4393:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4377:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4377:3:9"
																},
																"nativeSrc": "4377:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4377:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4364:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4364:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4404:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4404:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4435:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4446:66:9",
																		"nodeType": "YulLiteral",
																		"src": "4446:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4416:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4416:18:9"
																},
																"nativeSrc": "4416:97:9",
																"nodeType": "YulFunctionCall",
																"src": "4416:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4408:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4408:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4522:51:9",
															"nodeType": "YulAssignment",
															"src": "4522:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4553:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4553:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4564:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "4564:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4534:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4534:18:9"
																},
																"nativeSrc": "4534:39:9",
																"nodeType": "YulFunctionCall",
																"src": "4534:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4522:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4522:8:9"
																}
															]
														},
														{
															"nativeSrc": "4582:30:9",
															"nodeType": "YulAssignment",
															"src": "4582:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4595:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4595:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4606:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4606:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4602:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4602:3:9"
																		},
																		"nativeSrc": "4602:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4602:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4591:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4591:3:9"
																},
																"nativeSrc": "4591:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4591:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4582:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4582:5:9"
																}
															]
														},
														{
															"nativeSrc": "4621:40:9",
															"nodeType": "YulAssignment",
															"src": "4621:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4634:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4634:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4645:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "4645:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4655:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4655:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4641:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:9"
																		},
																		"nativeSrc": "4641:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4641:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4631:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4631:2:9"
																},
																"nativeSrc": "4631:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4631:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4621:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4274:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4311:5:9",
														"nodeType": "YulTypedName",
														"src": "4311:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4318:10:9",
														"nodeType": "YulTypedName",
														"src": "4318:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4330:8:9",
														"nodeType": "YulTypedName",
														"src": "4330:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4343:6:9",
														"nodeType": "YulTypedName",
														"src": "4343:6:9",
														"type": ""
													}
												],
												"src": "4274:393:9"
											},
											{
												"body": {
													"nativeSrc": "4705:28:9",
													"nodeType": "YulBlock",
													"src": "4705:28:9",
													"statements": [
														{
															"nativeSrc": "4715:12:9",
															"nodeType": "YulAssignment",
															"src": "4715:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "4722:5:9",
																"nodeType": "YulIdentifier",
																"src": "4722:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4673:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4691:5:9",
														"nodeType": "YulTypedName",
														"src": "4691:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4701:3:9",
														"nodeType": "YulTypedName",
														"src": "4701:3:9",
														"type": ""
													}
												],
												"src": "4673:60:9"
											},
											{
												"body": {
													"nativeSrc": "4799:82:9",
													"nodeType": "YulBlock",
													"src": "4799:82:9",
													"statements": [
														{
															"nativeSrc": "4809:66:9",
															"nodeType": "YulAssignment",
															"src": "4809:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4867:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4867:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4849:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "4849:17:9"
																				},
																				"nativeSrc": "4849:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4849:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4840:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "4840:8:9"
																		},
																		"nativeSrc": "4840:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4822:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4822:17:9"
																},
																"nativeSrc": "4822:53:9",
																"nodeType": "YulFunctionCall",
																"src": "4822:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4809:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4809:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4739:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4779:5:9",
														"nodeType": "YulTypedName",
														"src": "4779:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4789:9:9",
														"nodeType": "YulTypedName",
														"src": "4789:9:9",
														"type": ""
													}
												],
												"src": "4739:142:9"
											},
											{
												"body": {
													"nativeSrc": "4934:28:9",
													"nodeType": "YulBlock",
													"src": "4934:28:9",
													"statements": [
														{
															"nativeSrc": "4944:12:9",
															"nodeType": "YulAssignment",
															"src": "4944:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "4951:5:9",
																"nodeType": "YulIdentifier",
																"src": "4951:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4944:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4887:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4920:5:9",
														"nodeType": "YulTypedName",
														"src": "4920:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4930:3:9",
														"nodeType": "YulTypedName",
														"src": "4930:3:9",
														"type": ""
													}
												],
												"src": "4887:75:9"
											},
											{
												"body": {
													"nativeSrc": "5044:193:9",
													"nodeType": "YulBlock",
													"src": "5044:193:9",
													"statements": [
														{
															"nativeSrc": "5054:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5054:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5109:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "5109:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5078:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5078:30:9"
																},
																"nativeSrc": "5078:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5078:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5058:16:9",
																	"nodeType": "YulTypedName",
																	"src": "5058:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5133:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5133:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5173:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "5173:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5167:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5167:5:9"
																				},
																				"nativeSrc": "5167:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5167:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5180:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5180:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5212:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "5212:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5188:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "5188:23:9"
																				},
																				"nativeSrc": "5188:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5188:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5139:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "5139:27:9"
																		},
																		"nativeSrc": "5139:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5139:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5126:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:9"
																},
																"nativeSrc": "5126:105:9",
																"nodeType": "YulFunctionCall",
																"src": "5126:105:9"
															},
															"nativeSrc": "5126:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "5126:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4968:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5021:4:9",
														"nodeType": "YulTypedName",
														"src": "5021:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5027:6:9",
														"nodeType": "YulTypedName",
														"src": "5027:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5035:7:9",
														"nodeType": "YulTypedName",
														"src": "5035:7:9",
														"type": ""
													}
												],
												"src": "4968:269:9"
											},
											{
												"body": {
													"nativeSrc": "5292:24:9",
													"nodeType": "YulBlock",
													"src": "5292:24:9",
													"statements": [
														{
															"nativeSrc": "5302:8:9",
															"nodeType": "YulAssignment",
															"src": "5302:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5309:1:9",
																"nodeType": "YulLiteral",
																"src": "5309:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5302:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5243:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5288:3:9",
														"nodeType": "YulTypedName",
														"src": "5288:3:9",
														"type": ""
													}
												],
												"src": "5243:73:9"
											},
											{
												"body": {
													"nativeSrc": "5375:136:9",
													"nodeType": "YulBlock",
													"src": "5375:136:9",
													"statements": [
														{
															"nativeSrc": "5385:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5385:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5399:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:9"
																},
																"nativeSrc": "5399:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5399:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5389:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5389:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5484:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5484:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5490:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5498:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5440:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5440:43:9"
																},
																"nativeSrc": "5440:65:9",
																"nodeType": "YulFunctionCall",
																"src": "5440:65:9"
															},
															"nativeSrc": "5440:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "5440:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5322:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5361:4:9",
														"nodeType": "YulTypedName",
														"src": "5361:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5367:6:9",
														"nodeType": "YulTypedName",
														"src": "5367:6:9",
														"type": ""
													}
												],
												"src": "5322:189:9"
											},
											{
												"body": {
													"nativeSrc": "5567:136:9",
													"nodeType": "YulBlock",
													"src": "5567:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5634:63:9",
																"nodeType": "YulBlock",
																"src": "5634:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5678:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5678:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5685:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5685:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5648:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "5648:29:9"
																			},
																			"nativeSrc": "5648:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5648:39:9"
																		},
																		"nativeSrc": "5648:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5648:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5587:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5587:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5594:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5594:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5584:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5584:2:9"
																},
																"nativeSrc": "5584:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5584:14:9"
															},
															"nativeSrc": "5577:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5599:26:9",
																"nodeType": "YulBlock",
																"src": "5599:26:9",
																"statements": [
																	{
																		"nativeSrc": "5601:22:9",
																		"nodeType": "YulAssignment",
																		"src": "5601:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5614:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5614:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5621:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5621:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5610:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5610:3:9"
																			},
																			"nativeSrc": "5610:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5610:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5601:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5601:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5581:2:9",
																"nodeType": "YulBlock",
																"src": "5581:2:9",
																"statements": []
															},
															"src": "5577:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5517:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5555:5:9",
														"nodeType": "YulTypedName",
														"src": "5555:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5562:3:9",
														"nodeType": "YulTypedName",
														"src": "5562:3:9",
														"type": ""
													}
												],
												"src": "5517:186:9"
											},
											{
												"body": {
													"nativeSrc": "5788:464:9",
													"nodeType": "YulBlock",
													"src": "5788:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5814:431:9",
																"nodeType": "YulBlock",
																"src": "5814:431:9",
																"statements": [
																	{
																		"nativeSrc": "5828:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5828:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5876:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5876:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5844:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "5844:31:9"
																			},
																			"nativeSrc": "5844:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5844:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5832:8:9",
																				"nodeType": "YulTypedName",
																				"src": "5832:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5895:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5895:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5918:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "5918:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5946:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5946:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5928:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "5928:17:9"
																					},
																					"nativeSrc": "5928:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5928:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5914:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5914:3:9"
																			},
																			"nativeSrc": "5914:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5914:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5899:11:9",
																				"nodeType": "YulTypedName",
																				"src": "5899:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6115:27:9",
																			"nodeType": "YulBlock",
																			"src": "6115:27:9",
																			"statements": [
																				{
																					"nativeSrc": "6117:23:9",
																					"nodeType": "YulAssignment",
																					"src": "6117:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6132:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "6132:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6117:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "6117:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6099:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "6099:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6111:2:9",
																					"nodeType": "YulLiteral",
																					"src": "6111:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6096:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "6096:2:9"
																			},
																			"nativeSrc": "6096:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:18:9"
																		},
																		"nativeSrc": "6093:49:9",
																		"nodeType": "YulIf",
																		"src": "6093:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6184:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "6184:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6201:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "6201:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6229:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6229:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6211:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "6211:17:9"
																							},
																							"nativeSrc": "6211:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6211:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6197:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6197:3:9"
																					},
																					"nativeSrc": "6197:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6197:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6155:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "6155:28:9"
																			},
																			"nativeSrc": "6155:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6155:80:9"
																		},
																		"nativeSrc": "6155:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6155:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5805:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5805:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5802:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5802:2:9"
																},
																"nativeSrc": "5802:11:9",
																"nodeType": "YulFunctionCall",
																"src": "5802:11:9"
															},
															"nativeSrc": "5799:446:9",
															"nodeType": "YulIf",
															"src": "5799:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5709:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5764:5:9",
														"nodeType": "YulTypedName",
														"src": "5764:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5771:3:9",
														"nodeType": "YulTypedName",
														"src": "5771:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5776:10:9",
														"nodeType": "YulTypedName",
														"src": "5776:10:9",
														"type": ""
													}
												],
												"src": "5709:543:9"
											},
											{
												"body": {
													"nativeSrc": "6321:54:9",
													"nodeType": "YulBlock",
													"src": "6321:54:9",
													"statements": [
														{
															"nativeSrc": "6331:37:9",
															"nodeType": "YulAssignment",
															"src": "6331:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6356:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6356:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6362:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6362:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6352:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:9"
																},
																"nativeSrc": "6352:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6352:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6331:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "6331:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6258:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6296:4:9",
														"nodeType": "YulTypedName",
														"src": "6296:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6302:5:9",
														"nodeType": "YulTypedName",
														"src": "6302:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6312:8:9",
														"nodeType": "YulTypedName",
														"src": "6312:8:9",
														"type": ""
													}
												],
												"src": "6258:117:9"
											},
											{
												"body": {
													"nativeSrc": "6432:118:9",
													"nodeType": "YulBlock",
													"src": "6432:118:9",
													"statements": [
														{
															"nativeSrc": "6442:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6442:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6491:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6491:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6494:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6494:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6487:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6487:3:9"
																				},
																				"nativeSrc": "6487:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6487:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6506:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6506:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6502:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6502:3:9"
																				},
																				"nativeSrc": "6502:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6502:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6458:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "6458:28:9"
																		},
																		"nativeSrc": "6458:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6458:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6454:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6454:3:9"
																},
																"nativeSrc": "6454:56:9",
																"nodeType": "YulFunctionCall",
																"src": "6454:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6446:4:9",
																	"nodeType": "YulTypedName",
																	"src": "6446:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6519:25:9",
															"nodeType": "YulAssignment",
															"src": "6519:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6533:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6533:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6539:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6539:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6529:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:9"
																},
																"nativeSrc": "6529:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6529:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6519:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6381:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6409:4:9",
														"nodeType": "YulTypedName",
														"src": "6409:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6415:5:9",
														"nodeType": "YulTypedName",
														"src": "6415:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6425:6:9",
														"nodeType": "YulTypedName",
														"src": "6425:6:9",
														"type": ""
													}
												],
												"src": "6381:169:9"
											},
											{
												"body": {
													"nativeSrc": "6636:214:9",
													"nodeType": "YulBlock",
													"src": "6636:214:9",
													"statements": [
														{
															"nativeSrc": "6769:37:9",
															"nodeType": "YulAssignment",
															"src": "6769:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6796:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6796:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6802:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6802:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6777:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "6777:18:9"
																},
																"nativeSrc": "6777:29:9",
																"nodeType": "YulFunctionCall",
																"src": "6777:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6769:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6769:4:9"
																}
															]
														},
														{
															"nativeSrc": "6815:29:9",
															"nodeType": "YulAssignment",
															"src": "6815:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6826:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6826:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6836:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6836:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6839:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6839:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6832:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:9"
																		},
																		"nativeSrc": "6832:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6832:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6823:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6823:2:9"
																},
																"nativeSrc": "6823:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6823:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6815:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6815:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6555:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6617:4:9",
														"nodeType": "YulTypedName",
														"src": "6617:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6623:3:9",
														"nodeType": "YulTypedName",
														"src": "6623:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6631:4:9",
														"nodeType": "YulTypedName",
														"src": "6631:4:9",
														"type": ""
													}
												],
												"src": "6555:295:9"
											},
											{
												"body": {
													"nativeSrc": "6947:1303:9",
													"nodeType": "YulBlock",
													"src": "6947:1303:9",
													"statements": [
														{
															"nativeSrc": "6958:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6958:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7005:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7005:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6972:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "6972:32:9"
																},
																"nativeSrc": "6972:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6972:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6962:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6962:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7094:22:9",
																"nodeType": "YulBlock",
																"src": "7094:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7096:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7096:16:9"
																			},
																			"nativeSrc": "7096:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7096:18:9"
																		},
																		"nativeSrc": "7096:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7096:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7066:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7066:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7074:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7063:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7063:2:9"
																},
																"nativeSrc": "7063:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7063:30:9"
															},
															"nativeSrc": "7060:56:9",
															"nodeType": "YulIf",
															"src": "7060:56:9"
														},
														{
															"nativeSrc": "7126:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7126:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7172:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7172:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7166:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7166:5:9"
																		},
																		"nativeSrc": "7166:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7166:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7140:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "7140:25:9"
																},
																"nativeSrc": "7140:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7140:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7130:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7130:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7271:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7271:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7277:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7285:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7285:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7225:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "7225:45:9"
																},
																"nativeSrc": "7225:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7225:67:9"
															},
															"nativeSrc": "7225:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "7225:67:9"
														},
														{
															"nativeSrc": "7302:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7302:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7319:1:9",
																"nodeType": "YulLiteral",
																"src": "7319:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7306:9:9",
																	"nodeType": "YulTypedName",
																	"src": "7306:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7330:17:9",
															"nodeType": "YulAssignment",
															"src": "7330:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7343:4:9",
																"nodeType": "YulLiteral",
																"src": "7343:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7330:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7330:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7394:611:9",
																		"nodeType": "YulBlock",
																		"src": "7394:611:9",
																		"statements": [
																			{
																				"nativeSrc": "7408:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7408:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7427:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7427:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7439:4:9",
																									"nodeType": "YulLiteral",
																									"src": "7439:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7435:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "7435:3:9"
																							},
																							"nativeSrc": "7435:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7435:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7423:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7423:3:9"
																					},
																					"nativeSrc": "7423:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7423:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7412:7:9",
																						"nodeType": "YulTypedName",
																						"src": "7412:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7459:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7459:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7505:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7505:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7473:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "7473:31:9"
																					},
																					"nativeSrc": "7473:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7473:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7463:6:9",
																						"nodeType": "YulTypedName",
																						"src": "7463:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7523:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7523:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7532:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7532:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7527:1:9",
																						"nodeType": "YulTypedName",
																						"src": "7527:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7591:163:9",
																					"nodeType": "YulBlock",
																					"src": "7591:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7616:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7616:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7634:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "7634:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7639:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "7639:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7630:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "7630:3:9"
																												},
																												"nativeSrc": "7630:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "7630:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7624:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "7624:5:9"
																										},
																										"nativeSrc": "7624:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7624:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7609:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7609:6:9"
																								},
																								"nativeSrc": "7609:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7609:42:9"
																							},
																							"nativeSrc": "7609:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "7609:42:9"
																						},
																						{
																							"nativeSrc": "7668:24:9",
																							"nodeType": "YulAssignment",
																							"src": "7668:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7682:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7682:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7690:1:9",
																										"nodeType": "YulLiteral",
																										"src": "7690:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7678:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7678:3:9"
																								},
																								"nativeSrc": "7678:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7678:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7668:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7668:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7709:31:9",
																							"nodeType": "YulAssignment",
																							"src": "7709:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7726:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "7726:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7737:2:9",
																										"nodeType": "YulLiteral",
																										"src": "7737:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7722:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7722:3:9"
																								},
																								"nativeSrc": "7722:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7722:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7709:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "7709:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7557:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "7557:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7560:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "7560:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7554:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "7554:2:9"
																					},
																					"nativeSrc": "7554:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7554:14:9"
																				},
																				"nativeSrc": "7546:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7569:21:9",
																					"nodeType": "YulBlock",
																					"src": "7569:21:9",
																					"statements": [
																						{
																							"nativeSrc": "7571:17:9",
																							"nodeType": "YulAssignment",
																							"src": "7571:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7580:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "7580:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7583:4:9",
																										"nodeType": "YulLiteral",
																										"src": "7583:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7576:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7576:3:9"
																								},
																								"nativeSrc": "7576:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7576:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7571:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "7571:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7550:3:9",
																					"nodeType": "YulBlock",
																					"src": "7550:3:9",
																					"statements": []
																				},
																				"src": "7546:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "7790:156:9",
																					"nodeType": "YulBlock",
																					"src": "7790:156:9",
																					"statements": [
																						{
																							"nativeSrc": "7808:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7808:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7835:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "7835:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7840:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "7840:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7831:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "7831:3:9"
																										},
																										"nativeSrc": "7831:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7831:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7825:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7825:5:9"
																								},
																								"nativeSrc": "7825:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7825:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7812:9:9",
																									"nodeType": "YulTypedName",
																									"src": "7812:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7875:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7875:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7902:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "7902:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7917:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "7917:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7925:4:9",
																														"nodeType": "YulLiteral",
																														"src": "7925:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7913:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "7913:3:9"
																												},
																												"nativeSrc": "7913:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "7913:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7883:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "7883:18:9"
																										},
																										"nativeSrc": "7883:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7883:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7868:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7868:6:9"
																								},
																								"nativeSrc": "7868:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7868:64:9"
																							},
																							"nativeSrc": "7868:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "7868:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7773:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "7773:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7782:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7782:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7770:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "7770:2:9"
																					},
																					"nativeSrc": "7770:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7770:19:9"
																				},
																				"nativeSrc": "7767:179:9",
																				"nodeType": "YulIf",
																				"src": "7767:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7966:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7966:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7980:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "7980:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7988:1:9",
																											"nodeType": "YulLiteral",
																											"src": "7988:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7976:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "7976:3:9"
																									},
																									"nativeSrc": "7976:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "7976:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7992:1:9",
																									"nodeType": "YulLiteral",
																									"src": "7992:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7972:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "7972:3:9"
																							},
																							"nativeSrc": "7972:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7972:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7959:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7959:6:9"
																					},
																					"nativeSrc": "7959:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7959:36:9"
																				},
																				"nativeSrc": "7959:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7959:36:9"
																			}
																		]
																	},
																	"nativeSrc": "7387:618:9",
																	"nodeType": "YulCase",
																	"src": "7387:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7392:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7392:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8022:222:9",
																		"nodeType": "YulBlock",
																		"src": "8022:222:9",
																		"statements": [
																			{
																				"nativeSrc": "8036:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8036:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8049:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8049:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8040:5:9",
																						"nodeType": "YulTypedName",
																						"src": "8040:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8073:67:9",
																					"nodeType": "YulBlock",
																					"src": "8073:67:9",
																					"statements": [
																						{
																							"nativeSrc": "8091:35:9",
																							"nodeType": "YulAssignment",
																							"src": "8091:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8110:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8110:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8115:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8115:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8106:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8106:3:9"
																										},
																										"nativeSrc": "8106:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8106:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8100:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8100:5:9"
																								},
																								"nativeSrc": "8100:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8100:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8091:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8091:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8066:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8066:6:9"
																				},
																				"nativeSrc": "8063:77:9",
																				"nodeType": "YulIf",
																				"src": "8063:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8160:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8160:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8219:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8219:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8226:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8226:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8166:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "8166:52:9"
																							},
																							"nativeSrc": "8166:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8166:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8153:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8153:6:9"
																					},
																					"nativeSrc": "8153:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8153:81:9"
																				},
																				"nativeSrc": "8153:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8153:81:9"
																			}
																		]
																	},
																	"nativeSrc": "8014:230:9",
																	"nodeType": "YulCase",
																	"src": "8014:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7367:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7375:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7375:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7364:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7364:2:9"
																},
																"nativeSrc": "7364:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7364:14:9"
															},
															"nativeSrc": "7357:887:9",
															"nodeType": "YulSwitch",
															"src": "7357:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6855:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6936:4:9",
														"nodeType": "YulTypedName",
														"src": "6936:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6942:3:9",
														"nodeType": "YulTypedName",
														"src": "6942:3:9",
														"type": ""
													}
												],
												"src": "6855:1395:9"
											},
											{
												"body": {
													"nativeSrc": "8301:81:9",
													"nodeType": "YulBlock",
													"src": "8301:81:9",
													"statements": [
														{
															"nativeSrc": "8311:65:9",
															"nodeType": "YulAssignment",
															"src": "8311:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8326:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8326:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:42:9",
																		"nodeType": "YulLiteral",
																		"src": "8333:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8322:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:9"
																},
																"nativeSrc": "8322:54:9",
																"nodeType": "YulFunctionCall",
																"src": "8322:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8256:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:9",
														"nodeType": "YulTypedName",
														"src": "8283:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:9",
														"nodeType": "YulTypedName",
														"src": "8293:7:9",
														"type": ""
													}
												],
												"src": "8256:126:9"
											},
											{
												"body": {
													"nativeSrc": "8433:51:9",
													"nodeType": "YulBlock",
													"src": "8433:51:9",
													"statements": [
														{
															"nativeSrc": "8443:35:9",
															"nodeType": "YulAssignment",
															"src": "8443:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8472:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8472:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8454:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8454:17:9"
																},
																"nativeSrc": "8454:24:9",
																"nodeType": "YulFunctionCall",
																"src": "8454:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8443:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8443:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8388:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8415:5:9",
														"nodeType": "YulTypedName",
														"src": "8415:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8425:7:9",
														"nodeType": "YulTypedName",
														"src": "8425:7:9",
														"type": ""
													}
												],
												"src": "8388:96:9"
											},
											{
												"body": {
													"nativeSrc": "8555:53:9",
													"nodeType": "YulBlock",
													"src": "8555:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8572:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8572:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8595:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8595:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8577:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8577:17:9"
																		},
																		"nativeSrc": "8577:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:9"
																},
																"nativeSrc": "8565:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8565:37:9"
															},
															"nativeSrc": "8565:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8565:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8490:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:9",
														"nodeType": "YulTypedName",
														"src": "8543:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8550:3:9",
														"nodeType": "YulTypedName",
														"src": "8550:3:9",
														"type": ""
													}
												],
												"src": "8490:118:9"
											},
											{
												"body": {
													"nativeSrc": "8712:124:9",
													"nodeType": "YulBlock",
													"src": "8712:124:9",
													"statements": [
														{
															"nativeSrc": "8722:26:9",
															"nodeType": "YulAssignment",
															"src": "8722:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8734:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8734:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8730:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:9"
																},
																"nativeSrc": "8730:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8730:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8722:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8722:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8802:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8826:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:9"
																		},
																		"nativeSrc": "8811:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8758:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:9"
																},
																"nativeSrc": "8758:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8758:71:9"
															},
															"nativeSrc": "8758:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8758:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8614:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:9",
														"nodeType": "YulTypedName",
														"src": "8684:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8696:6:9",
														"nodeType": "YulTypedName",
														"src": "8696:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8707:4:9",
														"nodeType": "YulTypedName",
														"src": "8707:4:9",
														"type": ""
													}
												],
												"src": "8614:222:9"
											},
											{
												"body": {
													"nativeSrc": "8870:152:9",
													"nodeType": "YulBlock",
													"src": "8870:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8887:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8887:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8890:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8890:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8880:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8880:6:9"
																},
																"nativeSrc": "8880:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8880:88:9"
															},
															"nativeSrc": "8880:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8880:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8984:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8984:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8987:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8987:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8977:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8977:6:9"
																},
																"nativeSrc": "8977:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8977:15:9"
															},
															"nativeSrc": "8977:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8977:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9008:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9008:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9011:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9011:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:9"
																},
																"nativeSrc": "9001:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9001:15:9"
															},
															"nativeSrc": "9001:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9001:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8842:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8842:180:9"
											},
											{
												"body": {
													"nativeSrc": "9070:143:9",
													"nodeType": "YulBlock",
													"src": "9070:143:9",
													"statements": [
														{
															"nativeSrc": "9080:25:9",
															"nodeType": "YulAssignment",
															"src": "9080:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9103:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9103:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9085:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9085:17:9"
																},
																"nativeSrc": "9085:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9085:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9080:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9080:1:9"
																}
															]
														},
														{
															"nativeSrc": "9114:25:9",
															"nodeType": "YulAssignment",
															"src": "9114:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9137:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9137:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9119:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9119:17:9"
																},
																"nativeSrc": "9119:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9119:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9114:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9114:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9161:22:9",
																"nodeType": "YulBlock",
																"src": "9161:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9163:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9163:16:9"
																			},
																			"nativeSrc": "9163:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9163:18:9"
																		},
																		"nativeSrc": "9163:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9163:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9158:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9158:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9151:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9151:6:9"
																},
																"nativeSrc": "9151:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9151:9:9"
															},
															"nativeSrc": "9148:35:9",
															"nodeType": "YulIf",
															"src": "9148:35:9"
														},
														{
															"nativeSrc": "9193:14:9",
															"nodeType": "YulAssignment",
															"src": "9193:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9202:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9202:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9205:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9205:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9198:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9198:3:9"
																},
																"nativeSrc": "9198:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9198:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9193:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9193:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9028:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9059:1:9",
														"nodeType": "YulTypedName",
														"src": "9059:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9062:1:9",
														"nodeType": "YulTypedName",
														"src": "9062:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9068:1:9",
														"nodeType": "YulTypedName",
														"src": "9068:1:9",
														"type": ""
													}
												],
												"src": "9028:185:9"
											},
											{
												"body": {
													"nativeSrc": "9263:147:9",
													"nodeType": "YulBlock",
													"src": "9263:147:9",
													"statements": [
														{
															"nativeSrc": "9273:25:9",
															"nodeType": "YulAssignment",
															"src": "9273:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9296:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9296:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9278:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9278:17:9"
																},
																"nativeSrc": "9278:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9278:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9273:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9273:1:9"
																}
															]
														},
														{
															"nativeSrc": "9307:25:9",
															"nodeType": "YulAssignment",
															"src": "9307:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9330:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9330:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9312:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9312:17:9"
																},
																"nativeSrc": "9312:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9312:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9307:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9307:1:9"
																}
															]
														},
														{
															"nativeSrc": "9341:16:9",
															"nodeType": "YulAssignment",
															"src": "9341:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9352:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9352:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9355:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9355:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9348:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9348:3:9"
																},
																"nativeSrc": "9348:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9348:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9341:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9381:22:9",
																"nodeType": "YulBlock",
																"src": "9381:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9383:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9383:16:9"
																			},
																			"nativeSrc": "9383:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9383:18:9"
																		},
																		"nativeSrc": "9383:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9383:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9373:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9373:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9376:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9376:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9370:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9370:2:9"
																},
																"nativeSrc": "9370:10:9",
																"nodeType": "YulFunctionCall",
																"src": "9370:10:9"
															},
															"nativeSrc": "9367:36:9",
															"nodeType": "YulIf",
															"src": "9367:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9219:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9250:1:9",
														"nodeType": "YulTypedName",
														"src": "9250:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9253:1:9",
														"nodeType": "YulTypedName",
														"src": "9253:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9259:3:9",
														"nodeType": "YulTypedName",
														"src": "9259:3:9",
														"type": ""
													}
												],
												"src": "9219:191:9"
											},
											{
												"body": {
													"nativeSrc": "9481:53:9",
													"nodeType": "YulBlock",
													"src": "9481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "9503:17:9"
																		},
																		"nativeSrc": "9503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9491:6:9"
																},
																"nativeSrc": "9491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9491:37:9"
															},
															"nativeSrc": "9491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "9491:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9469:5:9",
														"nodeType": "YulTypedName",
														"src": "9469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9476:3:9",
														"nodeType": "YulTypedName",
														"src": "9476:3:9",
														"type": ""
													}
												],
												"src": "9416:118:9"
											},
											{
												"body": {
													"nativeSrc": "9694:288:9",
													"nodeType": "YulBlock",
													"src": "9694:288:9",
													"statements": [
														{
															"nativeSrc": "9704:26:9",
															"nodeType": "YulAssignment",
															"src": "9704:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9716:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9716:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9727:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9727:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9712:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9712:3:9"
																},
																"nativeSrc": "9712:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9712:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9704:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9704:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9784:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9797:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9797:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9808:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9808:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9793:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9793:3:9"
																		},
																		"nativeSrc": "9793:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9793:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9740:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9740:43:9"
																},
																"nativeSrc": "9740:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9740:71:9"
															},
															"nativeSrc": "9740:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9740:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9865:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9865:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9878:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9878:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9889:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9889:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9874:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9874:3:9"
																		},
																		"nativeSrc": "9874:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9874:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9821:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9821:43:9"
																},
																"nativeSrc": "9821:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9821:72:9"
															},
															"nativeSrc": "9821:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9821:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9947:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9947:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9960:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9960:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9971:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9971:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9956:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9956:3:9"
																		},
																		"nativeSrc": "9956:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9956:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9903:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9903:43:9"
																},
																"nativeSrc": "9903:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9903:72:9"
															},
															"nativeSrc": "9903:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9903:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9540:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9650:9:9",
														"nodeType": "YulTypedName",
														"src": "9650:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9662:6:9",
														"nodeType": "YulTypedName",
														"src": "9662:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9670:6:9",
														"nodeType": "YulTypedName",
														"src": "9670:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9678:6:9",
														"nodeType": "YulTypedName",
														"src": "9678:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9689:4:9",
														"nodeType": "YulTypedName",
														"src": "9689:4:9",
														"type": ""
													}
												],
												"src": "9540:442:9"
											},
											{
												"body": {
													"nativeSrc": "10086:124:9",
													"nodeType": "YulBlock",
													"src": "10086:124:9",
													"statements": [
														{
															"nativeSrc": "10096:26:9",
															"nodeType": "YulAssignment",
															"src": "10096:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10108:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10108:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10119:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10119:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10104:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:9"
																},
																"nativeSrc": "10104:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10104:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10096:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10176:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10189:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10189:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10200:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10200:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10185:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10185:3:9"
																		},
																		"nativeSrc": "10185:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10185:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10132:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10132:43:9"
																},
																"nativeSrc": "10132:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10132:71:9"
															},
															"nativeSrc": "10132:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10132:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9988:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10058:9:9",
														"nodeType": "YulTypedName",
														"src": "10058:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10070:6:9",
														"nodeType": "YulTypedName",
														"src": "10070:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10081:4:9",
														"nodeType": "YulTypedName",
														"src": "10081:4:9",
														"type": ""
													}
												],
												"src": "9988:222:9"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526301e1338060075561001a6101b660201b60201c565b600a6100269190610690565b606461003291906106da565b600955600a8055348015610044575f80fd5b50336040518060400160405280600b81526020017f456454656368546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454454000000000000000000000000000000000000000000000000000000000081525081600390816100c1919061094c565b5080600490816100d1919061094c565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610144575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161013b9190610a5a565b60405180910390fd5b610153816101be60201b60201c565b50600160068190555061016a6101b660201b60201c565b600a6101769190610690565b6305f5e10061018591906106da565b608081815250506101aa33600a60805161019f9190610aa0565b61028160201b60201c565b42600881905550610b60565b5f6012905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102f1575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102e89190610a5a565b60405180910390fd5b6103025f838361030660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610356578060025f82825461034a9190610ad0565b92505081905550610424565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103df578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103d693929190610b12565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361046b578060025f82825403925050819055506104b5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105129190610b47565b60405180910390a3505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156105a15780860481111561057d5761057c61051f565b5b600185161561058c5780820291505b808102905061059a8561054c565b9450610561565b94509492505050565b5f826105b95760019050610674565b816105c6575f9050610674565b81600181146105dc57600281146105e657610615565b6001915050610674565b60ff8411156105f8576105f761051f565b5b8360020a91508482111561060f5761060e61051f565b5b50610674565b5060208310610133831016604e8410600b841016171561064a5782820a9050838111156106455761064461051f565b5b610674565b6106578484846001610558565b9250905081840481111561066e5761066d61051f565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f61069a8261067b565b91506106a583610684565b92506106d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846105aa565b905092915050565b5f6106e48261067b565b91506106ef8361067b565b92508282026106fd8161067b565b915082820484148315176107145761071361051f565b5b5092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061079657607f821691505b6020821081036107a9576107a8610752565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261080b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107d0565b61081586836107d0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61085061084b6108468461067b565b61082d565b61067b565b9050919050565b5f819050919050565b61086983610836565b61087d61087582610857565b8484546107dc565b825550505050565b5f90565b610891610885565b61089c818484610860565b505050565b5b818110156108bf576108b45f82610889565b6001810190506108a2565b5050565b601f821115610904576108d5816107af565b6108de846107c1565b810160208510156108ed578190505b6109016108f9856107c1565b8301826108a1565b50505b505050565b5f82821c905092915050565b5f6109245f1984600802610909565b1980831691505092915050565b5f61093c8383610915565b9150826002028217905092915050565b6109558261071b565b67ffffffffffffffff81111561096e5761096d610725565b5b610978825461077f565b6109838282856108c3565b5f60209050601f8311600181146109b4575f84156109a2578287015190505b6109ac8582610931565b865550610a13565b601f1984166109c2866107af565b5f5b828110156109e9578489015182556001820191506020850194506020810190506109c4565b86831015610a065784890151610a02601f891682610915565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a4482610a1b565b9050919050565b610a5481610a3a565b82525050565b5f602082019050610a6d5f830184610a4b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610aaa8261067b565b9150610ab58361067b565b925082610ac557610ac4610a73565b5b828204905092915050565b5f610ada8261067b565b9150610ae58361067b565b9250828201905080821115610afd57610afc61051f565b5b92915050565b610b0c8161067b565b82525050565b5f606082019050610b255f830186610a4b565b610b326020830185610b03565b610b3f6040830184610b03565b949350505050565b5f602082019050610b5a5f830184610b03565b92915050565b608051611e8c610b865f395f81816109f401528181610cb10152610ced0152611e8c5ff3fe608060405234801561000f575f80fd5b50600436106101a7575f3560e01c80637547c7a3116100f7578063a5ce413b11610095578063db6e62cd1161006f578063db6e62cd14610485578063dd62ed3e146104a1578063f2fde38b146104d1578063f651ed5e146104ed576101a7565b8063a5ce413b1461042d578063a9059cbb14610437578063d5abeb0114610467576101a7565b80639168ae72116100d15780639168ae72146103a357806395d89b41146103d557806399caf010146103f35780639a1e19151461040f576101a7565b80637547c7a31461034d57806379cc6790146103695780638da5cb5b14610385576101a7565b806342966c68116101645780635a3e251f1161013e5780635a3e251f146102d95780636d1b229d146102f757806370a0823114610313578063715018a614610343576101a7565b806342966c68146102835780634f3ad3281461029f57806353aaa63b146102a9576101a7565b806306fdde03146101ab578063095ea7b3146101c95780631531b62a146101f957806318160ddd1461021757806323b872dd14610235578063313ce56714610265575b5f80fd5b6101b361050b565b6040516101c09190611764565b60405180910390f35b6101e360048036038101906101de9190611815565b61059b565b6040516101f0919061186d565b60405180910390f35b6102016105bd565b60405161020e9190611895565b60405180910390f35b61021f6105c3565b60405161022c9190611895565b60405180910390f35b61024f600480360381019061024a91906118ae565b6105cc565b60405161025c919061186d565b60405180910390f35b61026d6105fa565b60405161027a9190611919565b60405180910390f35b61029d60048036038101906102989190611932565b610602565b005b6102a7610616565b005b6102c360048036038101906102be919061195d565b610692565b6040516102d09190611895565b60405180910390f35b6102e16106a7565b6040516102ee9190611895565b60405180910390f35b610311600480360381019061030c9190611932565b6106ad565b005b61032d6004803603810190610328919061195d565b610700565b60405161033a9190611895565b60405180910390f35b61034b610745565b005b61036760048036038101906103629190611932565b610758565b005b610383600480360381019061037e9190611815565b6108e0565b005b61038d610900565b60405161039a9190611997565b60405180910390f35b6103bd60048036038101906103b8919061195d565b610928565b6040516103cc939291906119b0565b60405180910390f35b6103dd61095a565b6040516103ea9190611764565b60405180910390f35b61040d6004803603810190610408919061195d565b6109ea565b005b610417610ac8565b6040516104249190611895565b60405180910390f35b610435610ace565b005b610451600480360381019061044c9190611815565b610c8d565b60405161045e919061186d565b60405180910390f35b61046f610caf565b60405161047c9190611895565b60405180910390f35b61049f600480360381019061049a91906118ae565b610cd3565b005b6104bb60048036038101906104b691906119e5565b610dc3565b6040516104c89190611895565b60405180910390f35b6104eb60048036038101906104e6919061195d565b610e45565b005b6104f5610ec9565b6040516105029190611895565b60405180910390f35b60606003805461051a90611a50565b80601f016020809104026020016040519081016040528092919081815260200182805461054690611a50565b80156105915780601f1061056857610100808354040283529160200191610591565b820191905f5260205f20905b81548152906001019060200180831161057457829003601f168201915b5050505050905090565b5f806105a5610ecf565b90506105b2818585610ed6565b600191505092915050565b600a5481565b5f600254905090565b5f806105d6610ecf565b90506105e3858285610ee8565b6105ee858585610f7b565b60019150509392505050565b5f6012905090565b61061361060d610ecf565b8261106b565b50565b61061e6110ea565b60075460085461062e9190611aad565b421015610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066790611b2a565b60405180910390fd5b600260095f8282546106829190611b75565b9250508190555042600881905550565b600c602052805f5260405f205f915090505481565b60075481565b6106b56110ea565b6106c66106c0610900565b8261106b565b7f6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7816040516106f59190611895565b60405180910390a150565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61074d6110ea565b6107565f611171565b565b610760611234565b8061076a33610700565b10156107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290611bef565b60405180910390fd5b5f81116107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e490611c57565b60405180910390fd5b6107f8333083610f7b565b604051806060016040528082815260200142815260200160011515815250600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef826040516108cd9190611895565b60405180910390a26108dd611283565b50565b6108f2826108ec610ecf565b83610ee8565b6108fc828261106b565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff16905083565b60606004805461096990611a50565b80601f016020809104026020016040519081016040528092919081815260200182805461099590611a50565b80156109e05780601f106109b7576101008083540402835291602001916109e0565b820191905f5260205f20905b8154815290600101906020018083116109c357829003601f168201915b5050505050905090565b6109f26110ea565b7f0000000000000000000000000000000000000000000000000000000000000000600954610a1e6105c3565b610a289190611aad565b1115610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6090611cbf565b60405180910390fd5b610a758160095461128d565b8073ffffffffffffffffffffffffffffffffffffffff167ff684d89bb0f42287bf32838774e4b7f8a60c11804b3c6d1791fa55f306792643600954604051610abd9190611895565b60405180910390a250565b60085481565b610ad6611234565b5f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050806002015f9054906101000a900460ff16610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d90611d27565b60405180910390fd5b5f816001015442610b779190611d45565b90505f63bbf81e0082600a54855f0154610b919190611d78565b610b9b9190611d78565b610ba59190611b75565b90505f81845f0154610bb79190611aad565b9050610bc3338361128d565b610bd13033865f0154610f7b565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f9055600282015f6101000a81549060ff021916905550503373ffffffffffffffffffffffffffffffffffffffff167f9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f267982604051610c779190611895565b60405180910390a250505050610c8b611283565b565b5f80610c97610ecf565b9050610ca4818585610f7b565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610cdb6110ea565b5f600a82610ce99190611b75565b90507f000000000000000000000000000000000000000000000000000000000000000081610d156105c3565b610d1f9190611aad565b1115610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790611cbf565b60405180910390fd5b610d6a848261128d565b80600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610db69190611aad565b9250508190555050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e4d6110ea565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ebd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610eb49190611997565b60405180910390fd5b610ec681611171565b50565b60095481565b5f33905090565b610ee3838383600161130c565b505050565b5f610ef38484610dc3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f755781811015610f66578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f5d93929190611db9565b60405180910390fd5b610f7484848484035f61130c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610feb575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fe29190611997565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110529190611997565b60405180910390fd5b6110668383836114db565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110db575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110d29190611997565b60405180910390fd5b6110e6825f836114db565b5050565b6110f2610ecf565b73ffffffffffffffffffffffffffffffffffffffff16611110610900565b73ffffffffffffffffffffffffffffffffffffffff161461116f57611133610ecf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111669190611997565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260065403611279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127090611e38565b60405180910390fd5b6002600681905550565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112fd575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112f49190611997565b60405180910390fd5b6113085f83836114db565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361137c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113739190611997565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113ec575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113e39190611997565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156114d5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516114cc9190611895565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361152b578060025f82825461151f9190611aad565b925050819055506115f9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156115b4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016115ab93929190611db9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611640578060025f828254039250508190555061168a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116e79190611895565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611736826116f4565b61174081856116fe565b935061175081856020860161170e565b6117598161171c565b840191505092915050565b5f6020820190508181035f83015261177c818461172c565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117b182611788565b9050919050565b6117c1816117a7565b81146117cb575f80fd5b50565b5f813590506117dc816117b8565b92915050565b5f819050919050565b6117f4816117e2565b81146117fe575f80fd5b50565b5f8135905061180f816117eb565b92915050565b5f806040838503121561182b5761182a611784565b5b5f611838858286016117ce565b925050602061184985828601611801565b9150509250929050565b5f8115159050919050565b61186781611853565b82525050565b5f6020820190506118805f83018461185e565b92915050565b61188f816117e2565b82525050565b5f6020820190506118a85f830184611886565b92915050565b5f805f606084860312156118c5576118c4611784565b5b5f6118d2868287016117ce565b93505060206118e3868287016117ce565b92505060406118f486828701611801565b9150509250925092565b5f60ff82169050919050565b611913816118fe565b82525050565b5f60208201905061192c5f83018461190a565b92915050565b5f6020828403121561194757611946611784565b5b5f61195484828501611801565b91505092915050565b5f6020828403121561197257611971611784565b5b5f61197f848285016117ce565b91505092915050565b611991816117a7565b82525050565b5f6020820190506119aa5f830184611988565b92915050565b5f6060820190506119c35f830186611886565b6119d06020830185611886565b6119dd604083018461185e565b949350505050565b5f80604083850312156119fb576119fa611784565b5b5f611a08858286016117ce565b9250506020611a19858286016117ce565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a6757607f821691505b602082108103611a7a57611a79611a23565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ab7826117e2565b9150611ac2836117e2565b9250828201905080821115611ada57611ad9611a80565b5b92915050565b7f546f6f206561726c7920666f722068616c76696e6700000000000000000000005f82015250565b5f611b146015836116fe565b9150611b1f82611ae0565b602082019050919050565b5f6020820190508181035f830152611b4181611b08565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b7f826117e2565b9150611b8a836117e2565b925082611b9a57611b99611b48565b5b828204905092915050565b7f4e6f7420656e6f7567682062616c616e636500000000000000000000000000005f82015250565b5f611bd96012836116fe565b9150611be482611ba5565b602082019050919050565b5f6020820190508181035f830152611c0681611bcd565b9050919050565b7f416d6f756e742073686f756c642062652067726561746572207468616e2030005f82015250565b5f611c41601f836116fe565b9150611c4c82611c0d565b602082019050919050565b5f6020820190508181035f830152611c6e81611c35565b9050919050565b7f4d617820737570706c79207265616368656400000000000000000000000000005f82015250565b5f611ca96012836116fe565b9150611cb482611c75565b602082019050919050565b5f6020820190508181035f830152611cd681611c9d565b9050919050565b7f4e6f20746f6b656e73207374616b6564000000000000000000000000000000005f82015250565b5f611d116010836116fe565b9150611d1c82611cdd565b602082019050919050565b5f6020820190508181035f830152611d3e81611d05565b9050919050565b5f611d4f826117e2565b9150611d5a836117e2565b9250828203905081811115611d7257611d71611a80565b5b92915050565b5f611d82826117e2565b9150611d8d836117e2565b9250828202611d9b816117e2565b91508282048414831517611db257611db1611a80565b5b5092915050565b5f606082019050611dcc5f830186611988565b611dd96020830185611886565b611de66040830184611886565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611e22601f836116fe565b9150611e2d82611dee565b602082019050919050565b5f6020820190508181035f830152611e4f81611e16565b905091905056fea2646970667358221220e1c688412a4cd72c845d04e62f0158c451a0a69a7f55a56afb5a6dae1517f00e64736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH4 0x1E13380 PUSH1 0x7 SSTORE PUSH2 0x1A PUSH2 0x1B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x26 SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x456454656368546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4544540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x153 DUP2 PUSH2 0x1BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x16A PUSH2 0x1B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH2 0x1AA CALLER PUSH1 0xA PUSH1 0x80 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xB60 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x302 PUSH0 DUP4 DUP4 PUSH2 0x306 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x356 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x424 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x46B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4B5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x5A1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x57D JUMPI PUSH2 0x57C PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x58C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x59A DUP6 PUSH2 0x54C JUMP JUMPDEST SWAP5 POP PUSH2 0x561 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x5B9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x674 JUMP JUMPDEST DUP2 PUSH2 0x5C6 JUMPI PUSH0 SWAP1 POP PUSH2 0x674 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5DC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5E6 JUMPI PUSH2 0x615 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x674 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5F8 JUMPI PUSH2 0x5F7 PUSH2 0x51F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x60F JUMPI PUSH2 0x60E PUSH2 0x51F JUMP JUMPDEST JUMPDEST POP PUSH2 0x674 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x64A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x645 JUMPI PUSH2 0x644 PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x657 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x558 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66D PUSH2 0x51F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x69A DUP3 PUSH2 0x67B JUMP JUMPDEST SWAP2 POP PUSH2 0x6A5 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP3 POP PUSH2 0x6D2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x5AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E4 DUP3 PUSH2 0x67B JUMP JUMPDEST SWAP2 POP PUSH2 0x6EF DUP4 PUSH2 0x67B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x6FD DUP2 PUSH2 0x67B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x51F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x796 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A9 JUMPI PUSH2 0x7A8 PUSH2 0x752 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x80B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x815 DUP7 DUP4 PUSH2 0x7D0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x850 PUSH2 0x84B PUSH2 0x846 DUP5 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x869 DUP4 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x87D PUSH2 0x875 DUP3 PUSH2 0x857 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7DC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x891 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x89C DUP2 DUP5 DUP5 PUSH2 0x860 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x8B4 PUSH0 DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x904 JUMPI PUSH2 0x8D5 DUP2 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x8DE DUP5 PUSH2 0x7C1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8ED JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x901 PUSH2 0x8F9 DUP6 PUSH2 0x7C1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8A1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x924 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x909 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x93C DUP4 DUP4 PUSH2 0x915 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x955 DUP3 PUSH2 0x71B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96E JUMPI PUSH2 0x96D PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH2 0x978 DUP3 SLOAD PUSH2 0x77F JUMP JUMPDEST PUSH2 0x983 DUP3 DUP3 DUP6 PUSH2 0x8C3 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9B4 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9A2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9AC DUP6 DUP3 PUSH2 0x931 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9C2 DUP7 PUSH2 0x7AF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9E9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9C4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA06 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA02 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x915 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA44 DUP3 PUSH2 0xA1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA54 DUP2 PUSH2 0xA3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA6D PUSH0 DUP4 ADD DUP5 PUSH2 0xA4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAAA DUP3 PUSH2 0x67B JUMP JUMPDEST SWAP2 POP PUSH2 0xAB5 DUP4 PUSH2 0x67B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAC5 JUMPI PUSH2 0xAC4 PUSH2 0xA73 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xADA DUP3 PUSH2 0x67B JUMP JUMPDEST SWAP2 POP PUSH2 0xAE5 DUP4 PUSH2 0x67B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0x51F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH2 0x67B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB25 PUSH0 DUP4 ADD DUP7 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xB32 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0xB3F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB03 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5A PUSH0 DUP4 ADD DUP5 PUSH2 0xB03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1E8C PUSH2 0xB86 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x9F4 ADD MSTORE DUP2 DUP2 PUSH2 0xCB1 ADD MSTORE PUSH2 0xCED ADD MSTORE PUSH2 0x1E8C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA5CE413B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDB6E62CD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDB6E62CD EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xF651ED5E EQ PUSH2 0x4ED JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x467 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x9168AE72 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x99CAF010 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x9A1E1915 EQ PUSH2 0x40F JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x385 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x5A3E251F GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5A3E251F EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x343 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x4F3AD328 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x53AAA63B EQ PUSH2 0x2A9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1531B62A EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x745 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xACE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F5 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x51A SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x591 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x591 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x574 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5A5 PUSH2 0xECF JUMP JUMPDEST SWAP1 POP PUSH2 0x5B2 DUP2 DUP6 DUP6 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5D6 PUSH2 0xECF JUMP JUMPDEST SWAP1 POP PUSH2 0x5E3 DUP6 DUP3 DUP6 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0x5EE DUP6 DUP6 DUP6 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x613 PUSH2 0x60D PUSH2 0xECF JUMP JUMPDEST DUP3 PUSH2 0x106B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x61E PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x6C6 PUSH2 0x6C0 PUSH2 0x900 JUMP JUMPDEST DUP3 PUSH2 0x106B JUMP JUMPDEST PUSH32 0x6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74D PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x756 PUSH0 PUSH2 0x1171 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x760 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH2 0x76A CALLER PUSH2 0x700 JUMP JUMPDEST LT ISZERO PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 CALLER ADDRESS DUP4 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF DUP3 PUSH1 0x40 MLOAD PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x8DD PUSH2 0x1283 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8F2 DUP3 PUSH2 0x8EC PUSH2 0xECF JUMP JUMPDEST DUP4 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0x8FC DUP3 DUP3 PUSH2 0x106B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x969 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x995 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0x10EA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x9 SLOAD PUSH2 0xA1E PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST GT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 DUP2 PUSH1 0x9 SLOAD PUSH2 0x128D JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF684D89BB0F42287BF32838774E4B7F8A60C11804B3C6D1791FA55F306792643 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAD6 PUSH2 0x1234 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xB77 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0xBBF81E00 DUP3 PUSH1 0xA SLOAD DUP6 PUSH0 ADD SLOAD PUSH2 0xB91 SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH0 ADD SLOAD PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP PUSH2 0xBC3 CALLER DUP4 PUSH2 0x128D JUMP JUMPDEST PUSH2 0xBD1 ADDRESS CALLER DUP7 PUSH0 ADD SLOAD PUSH2 0xF7B JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9845E367B683334E5C0B12D7B81721AC518E649376FA65E3D68324E8F34F2679 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0xC8B PUSH2 0x1283 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC97 PUSH2 0xECF JUMP JUMPDEST SWAP1 POP PUSH2 0xCA4 DUP2 DUP6 DUP6 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xCDB PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH2 0xD15 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST GT ISZERO PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6A DUP5 DUP3 PUSH2 0x128D JUMP JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC6 DUP2 PUSH2 0x1171 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x130C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEF3 DUP5 DUP5 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF75 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF66 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x130C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE2 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1052 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1066 DUP4 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E6 DUP3 PUSH0 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0xECF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1110 PUSH2 0x900 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116F JUMPI PUSH2 0x1133 PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1270 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1308 PUSH0 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14D5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x152B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15F9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x15B4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1640 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x168A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1736 DUP3 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x1740 DUP2 DUP6 PUSH2 0x16FE JUMP JUMPDEST SWAP4 POP PUSH2 0x1750 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x170E JUMP JUMPDEST PUSH2 0x1759 DUP2 PUSH2 0x171C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 DUP5 PUSH2 0x172C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B1 DUP3 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C1 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17DC DUP2 PUSH2 0x17B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x17E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180F DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182B JUMPI PUSH2 0x182A PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1849 DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1867 DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1880 PUSH0 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x188F DUP2 PUSH2 0x17E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D2 DUP7 DUP3 DUP8 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18E3 DUP7 DUP3 DUP8 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18F4 DUP7 DUP3 DUP8 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x18FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192C PUSH0 DUP4 ADD DUP5 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1946 PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1954 DUP5 DUP3 DUP6 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197F DUP5 DUP3 DUP6 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AA PUSH0 DUP4 ADD DUP5 PUSH2 0x1988 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19C3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x19D0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x19DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A08 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A19 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A67 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x1A23 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AB7 DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC2 DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6F206561726C7920666F722068616C76696E670000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 PUSH1 0x15 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B7F DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8A DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B9A JUMPI PUSH2 0x1B99 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD9 PUSH1 0x12 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP3 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C06 DUP2 PUSH2 0x1BCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 PUSH1 0x1F DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4C DUP3 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6E DUP2 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820737570706C7920726561636865640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA9 PUSH1 0x12 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP3 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73207374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D11 PUSH1 0x10 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1C DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3E DUP2 PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4F DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5A DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D72 JUMPI PUSH2 0x1D71 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8D DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D9B DUP2 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DCC PUSH0 DUP4 ADD DUP7 PUSH2 0x1988 JUMP JUMPDEST PUSH2 0x1DD9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E22 PUSH1 0x1F DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2D DUP3 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4F DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC6 DUP9 COINBASE 0x2A 0x4C 0xD7 0x2C DUP5 TSTORE DIV 0xE6 0x2F ADD PC 0xC4 MLOAD LOG0 0xA6 SWAP11 PUSH32 0x55A56AFB5A6DAE1517F00E64736F6C6343000819003300000000000000000000 ",
							"sourceMap": "314:3185:8:-:0;;;464:8;433:39;;553:10;:8;;;:10;;:::i;:::-;549:2;:14;;;;:::i;:::-;543:3;:20;;;;:::i;:::-;512:51;;598:2;570:30;;1218:279;;;;;;;;;;1288:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1345:10:8::2;:8;;;:10;;:::i;:::-;1341:2;:14;;;;:::i;:::-;1329:9;:26;;;;:::i;:::-;1317:38;;;;::::0;::::2;1388:33;1394:10;1418:2;1406:9;;:14;;;;:::i;:::-;1388:5;;;:33;;:::i;:::-;1474:15;1460:11;:29;;;;314:3185:::0;;2707:82:3;2756:5;2780:2;2773:9;;2707:82;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:180:9:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:410::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2848:1;2845;2841:9;2870:30;2888:11;2870:30;:::i;:::-;2859:41;;3049:1;3040:7;3036:15;3033:1;3030:22;3010:1;3003:9;2983:83;2960:139;;3079:18;;:::i;:::-;2960:139;2744:362;2696:410;;;;:::o;3112:99::-;3164:6;3198:5;3192:12;3182:22;;3112:99;;;:::o;3217:180::-;3265:77;3262:1;3255:88;3362:4;3359:1;3352:15;3386:4;3383:1;3376:15;3403:180;3451:77;3448:1;3441:88;3548:4;3545:1;3538:15;3572:4;3569:1;3562:15;3589:320;3633:6;3670:1;3664:4;3660:12;3650:22;;3717:1;3711:4;3707:12;3738:18;3728:81;;3794:4;3786:6;3782:17;3772:27;;3728:81;3856:2;3848:6;3845:14;3825:18;3822:38;3819:84;;3875:18;;:::i;:::-;3819:84;3640:269;3589:320;;;:::o;3915:141::-;3964:4;3987:3;3979:11;;4010:3;4007:1;4000:14;4044:4;4041:1;4031:18;4023:26;;3915:141;;;:::o;4062:93::-;4099:6;4146:2;4141;4134:5;4130:14;4126:23;4116:33;;4062:93;;;:::o;4161:107::-;4205:8;4255:5;4249:4;4245:16;4224:37;;4161:107;;;;:::o;4274:393::-;4343:6;4393:1;4381:10;4377:18;4416:97;4446:66;4435:9;4416:97;:::i;:::-;4534:39;4564:8;4553:9;4534:39;:::i;:::-;4522:51;;4606:4;4602:9;4595:5;4591:21;4582:30;;4655:4;4645:8;4641:19;4634:5;4631:30;4621:40;;4350:317;;4274:393;;;;;:::o;4673:60::-;4701:3;4722:5;4715:12;;4673:60;;;:::o;4739:142::-;4789:9;4822:53;4840:34;4849:24;4867:5;4849:24;:::i;:::-;4840:34;:::i;:::-;4822:53;:::i;:::-;4809:66;;4739:142;;;:::o;4887:75::-;4930:3;4951:5;4944:12;;4887:75;;;:::o;4968:269::-;5078:39;5109:7;5078:39;:::i;:::-;5139:91;5188:41;5212:16;5188:41;:::i;:::-;5180:6;5173:4;5167:11;5139:91;:::i;:::-;5133:4;5126:105;5044:193;4968:269;;;:::o;5243:73::-;5288:3;5243:73;:::o;5322:189::-;5399:32;;:::i;:::-;5440:65;5498:6;5490;5484:4;5440:65;:::i;:::-;5375:136;5322:189;;:::o;5517:186::-;5577:120;5594:3;5587:5;5584:14;5577:120;;;5648:39;5685:1;5678:5;5648:39;:::i;:::-;5621:1;5614:5;5610:13;5601:22;;5577:120;;;5517:186;;:::o;5709:543::-;5810:2;5805:3;5802:11;5799:446;;;5844:38;5876:5;5844:38;:::i;:::-;5928:29;5946:10;5928:29;:::i;:::-;5918:8;5914:44;6111:2;6099:10;6096:18;6093:49;;;6132:8;6117:23;;6093:49;6155:80;6211:22;6229:3;6211:22;:::i;:::-;6201:8;6197:37;6184:11;6155:80;:::i;:::-;5814:431;;5799:446;5709:543;;;:::o;6258:117::-;6312:8;6362:5;6356:4;6352:16;6331:37;;6258:117;;;;:::o;6381:169::-;6425:6;6458:51;6506:1;6502:6;6494:5;6491:1;6487:13;6458:51;:::i;:::-;6454:56;6539:4;6533;6529:15;6519:25;;6432:118;6381:169;;;;:::o;6555:295::-;6631:4;6777:29;6802:3;6796:4;6777:29;:::i;:::-;6769:37;;6839:3;6836:1;6832:11;6826:4;6823:21;6815:29;;6555:295;;;;:::o;6855:1395::-;6972:37;7005:3;6972:37;:::i;:::-;7074:18;7066:6;7063:30;7060:56;;;7096:18;;:::i;:::-;7060:56;7140:38;7172:4;7166:11;7140:38;:::i;:::-;7225:67;7285:6;7277;7271:4;7225:67;:::i;:::-;7319:1;7343:4;7330:17;;7375:2;7367:6;7364:14;7392:1;7387:618;;;;8049:1;8066:6;8063:77;;;8115:9;8110:3;8106:19;8100:26;8091:35;;8063:77;8166:67;8226:6;8219:5;8166:67;:::i;:::-;8160:4;8153:81;8022:222;7357:887;;7387:618;7439:4;7435:9;7427:6;7423:22;7473:37;7505:4;7473:37;:::i;:::-;7532:1;7546:208;7560:7;7557:1;7554:14;7546:208;;;7639:9;7634:3;7630:19;7624:26;7616:6;7609:42;7690:1;7682:6;7678:14;7668:24;;7737:2;7726:9;7722:18;7709:31;;7583:4;7580:1;7576:12;7571:17;;7546:208;;;7782:6;7773:7;7770:19;7767:179;;;7840:9;7835:3;7831:19;7825:26;7883:48;7925:4;7917:6;7913:17;7902:9;7883:48;:::i;:::-;7875:6;7868:64;7790:156;7767:179;7992:1;7988;7980:6;7976:14;7972:22;7966:4;7959:36;7394:611;;;7357:887;;6947:1303;;;6855:1395;;:::o;8256:126::-;8293:7;8333:42;8326:5;8322:54;8311:65;;8256:126;;;:::o;8388:96::-;8425:7;8454:24;8472:5;8454:24;:::i;:::-;8443:35;;8388:96;;;:::o;8490:118::-;8577:24;8595:5;8577:24;:::i;:::-;8572:3;8565:37;8490:118;;:::o;8614:222::-;8707:4;8745:2;8734:9;8730:18;8722:26;;8758:71;8826:1;8815:9;8811:17;8802:6;8758:71;:::i;:::-;8614:222;;;;:::o;8842:180::-;8890:77;8887:1;8880:88;8987:4;8984:1;8977:15;9011:4;9008:1;9001:15;9028:185;9068:1;9085:20;9103:1;9085:20;:::i;:::-;9080:25;;9119:20;9137:1;9119:20;:::i;:::-;9114:25;;9158:1;9148:35;;9163:18;;:::i;:::-;9148:35;9205:1;9202;9198:9;9193:14;;9028:185;;;;:::o;9219:191::-;9259:3;9278:20;9296:1;9278:20;:::i;:::-;9273:25;;9312:20;9330:1;9312:20;:::i;:::-;9307:25;;9355:1;9352;9348:9;9341:16;;9376:3;9373:1;9370:10;9367:36;;;9383:18;;:::i;:::-;9367:36;9219:191;;;;:::o;9416:118::-;9503:24;9521:5;9503:24;:::i;:::-;9498:3;9491:37;9416:118;;:::o;9540:442::-;9689:4;9727:2;9716:9;9712:18;9704:26;;9740:71;9808:1;9797:9;9793:17;9784:6;9740:71;:::i;:::-;9821:72;9889:2;9878:9;9874:18;9865:6;9821:72;:::i;:::-;9903;9971:2;9960:9;9956:18;9947:6;9903:72;:::i;:::-;9540:442;;;;;;:::o;9988:222::-;10081:4;10119:2;10108:9;10104:18;10096:26;;10132:71;10200:1;10189:9;10185:17;10176:6;10132:71;:::i;:::-;9988:222;;;;:::o;314:3185:8:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_755": {
									"entryPoint": 3798,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 4876,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_737": {
									"entryPoint": 4203,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4330,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 4749,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1026": {
									"entryPoint": 3791,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 4739,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 4660,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 3816,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4465,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 3963,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 5339,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 3523,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1435,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 1792,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_987": {
									"entryPoint": 2272,
									"id": 987,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnTokens_1396": {
									"entryPoint": 1709,
									"id": 1396,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_966": {
									"entryPoint": 1538,
									"id": 966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 1530,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@halveReward_1207": {
									"entryPoint": 1558,
									"id": 1207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@halvingPeriod_1063": {
									"entryPoint": 1703,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastHalving_1065": {
									"entryPoint": 2760,
									"id": 1065,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxSupply_1060": {
									"entryPoint": 3247,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1291,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2304,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@referralRewards_1092": {
									"entryPoint": 1682,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1861,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardForTaskCompletion_1182": {
									"entryPoint": 2538,
									"id": 1182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@rewardPerTask_1073": {
									"entryPoint": 3785,
									"id": 1073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardReferral_1378": {
									"entryPoint": 3283,
									"id": 1378,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakeTokens_1260": {
									"entryPoint": 1880,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakers_1088": {
									"entryPoint": 2344,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingAPY_1076": {
									"entryPoint": 1469,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 2394,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 1475,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 1484,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3653,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 3213,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstakeTokens_1339": {
									"entryPoint": 2766,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7609,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b": {
									"entryPoint": 7389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14870:9",
										"nodeType": "YulBlock",
										"src": "0:14870:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3791:519:9",
													"nodeType": "YulBlock",
													"src": "3791:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:9",
																"nodeType": "YulBlock",
																"src": "3837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:9"
																			},
																			"nativeSrc": "3839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:9"
																		},
																		"nativeSrc": "3839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:9"
																},
																"nativeSrc": "3804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:9"
															},
															"nativeSrc": "3801:119:9",
															"nodeType": "YulIf",
															"src": "3801:119:9"
														},
														{
															"nativeSrc": "3930:117:9",
															"nodeType": "YulBlock",
															"src": "3930:117:9",
															"statements": [
																{
																	"nativeSrc": "3945:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:9"
																				},
																				"nativeSrc": "4005:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:9"
																		},
																		"nativeSrc": "3984:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:9",
															"nodeType": "YulBlock",
															"src": "4057:118:9",
															"statements": [
																{
																	"nativeSrc": "4072:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:9"
																				},
																				"nativeSrc": "4133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:9"
																		},
																		"nativeSrc": "4112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:9",
															"nodeType": "YulBlock",
															"src": "4185:118:9",
															"statements": [
																{
																	"nativeSrc": "4200:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:9"
																				},
																				"nativeSrc": "4261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:9"
																		},
																		"nativeSrc": "4240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:9",
														"nodeType": "YulTypedName",
														"src": "3745:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:9",
														"nodeType": "YulTypedName",
														"src": "3756:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:9",
														"nodeType": "YulTypedName",
														"src": "3768:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:9",
														"nodeType": "YulTypedName",
														"src": "3776:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:9",
														"nodeType": "YulTypedName",
														"src": "3784:6:9",
														"type": ""
													}
												],
												"src": "3691:619:9"
											},
											{
												"body": {
													"nativeSrc": "4359:43:9",
													"nodeType": "YulBlock",
													"src": "4359:43:9",
													"statements": [
														{
															"nativeSrc": "4369:27:9",
															"nodeType": "YulAssignment",
															"src": "4369:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:9"
																},
																"nativeSrc": "4380:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:9",
														"nodeType": "YulTypedName",
														"src": "4341:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:9",
														"nodeType": "YulTypedName",
														"src": "4351:7:9",
														"type": ""
													}
												],
												"src": "4316:86:9"
											},
											{
												"body": {
													"nativeSrc": "4469:51:9",
													"nodeType": "YulBlock",
													"src": "4469:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:9"
																		},
																		"nativeSrc": "4491:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:9"
																},
																"nativeSrc": "4479:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:9"
															},
															"nativeSrc": "4479:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:9",
														"nodeType": "YulTypedName",
														"src": "4457:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:9",
														"nodeType": "YulTypedName",
														"src": "4464:3:9",
														"type": ""
													}
												],
												"src": "4408:112:9"
											},
											{
												"body": {
													"nativeSrc": "4620:120:9",
													"nodeType": "YulBlock",
													"src": "4620:120:9",
													"statements": [
														{
															"nativeSrc": "4630:26:9",
															"nodeType": "YulAssignment",
															"src": "4630:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:9"
																},
																"nativeSrc": "4638:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:9"
																		},
																		"nativeSrc": "4715:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:9"
																},
																"nativeSrc": "4666:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:9"
															},
															"nativeSrc": "4666:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:9",
														"nodeType": "YulTypedName",
														"src": "4592:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:9",
														"nodeType": "YulTypedName",
														"src": "4604:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:9",
														"nodeType": "YulTypedName",
														"src": "4615:4:9",
														"type": ""
													}
												],
												"src": "4526:214:9"
											},
											{
												"body": {
													"nativeSrc": "4812:263:9",
													"nodeType": "YulBlock",
													"src": "4812:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:9",
																"nodeType": "YulBlock",
																"src": "4858:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:9"
																			},
																			"nativeSrc": "4860:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:9"
																		},
																		"nativeSrc": "4860:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:9"
																		},
																		"nativeSrc": "4829:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:9"
																},
																"nativeSrc": "4825:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:9"
															},
															"nativeSrc": "4822:119:9",
															"nodeType": "YulIf",
															"src": "4822:119:9"
														},
														{
															"nativeSrc": "4951:117:9",
															"nodeType": "YulBlock",
															"src": "4951:117:9",
															"statements": [
																{
																	"nativeSrc": "4966:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:9"
																				},
																				"nativeSrc": "5026:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:9"
																		},
																		"nativeSrc": "5005:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:9",
														"nodeType": "YulTypedName",
														"src": "4782:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:9",
														"nodeType": "YulTypedName",
														"src": "4793:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:9",
														"nodeType": "YulTypedName",
														"src": "4805:6:9",
														"type": ""
													}
												],
												"src": "4746:329:9"
											},
											{
												"body": {
													"nativeSrc": "5147:263:9",
													"nodeType": "YulBlock",
													"src": "5147:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:9",
																"nodeType": "YulBlock",
																"src": "5193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:9"
																			},
																			"nativeSrc": "5195:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:9"
																		},
																		"nativeSrc": "5195:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:9"
																		},
																		"nativeSrc": "5164:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nativeSrc": "5160:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:9"
															},
															"nativeSrc": "5157:119:9",
															"nodeType": "YulIf",
															"src": "5157:119:9"
														},
														{
															"nativeSrc": "5286:117:9",
															"nodeType": "YulBlock",
															"src": "5286:117:9",
															"statements": [
																{
																	"nativeSrc": "5301:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:9"
																				},
																				"nativeSrc": "5361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:9"
																		},
																		"nativeSrc": "5340:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:9",
														"nodeType": "YulTypedName",
														"src": "5117:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:9",
														"nodeType": "YulTypedName",
														"src": "5128:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:9",
														"nodeType": "YulTypedName",
														"src": "5140:6:9",
														"type": ""
													}
												],
												"src": "5081:329:9"
											},
											{
												"body": {
													"nativeSrc": "5481:53:9",
													"nodeType": "YulBlock",
													"src": "5481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:9"
																		},
																		"nativeSrc": "5503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:9"
																},
																"nativeSrc": "5491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:9"
															},
															"nativeSrc": "5491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:9",
														"nodeType": "YulTypedName",
														"src": "5469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"src": "5416:118:9"
											},
											{
												"body": {
													"nativeSrc": "5638:124:9",
													"nodeType": "YulBlock",
													"src": "5638:124:9",
													"statements": [
														{
															"nativeSrc": "5648:26:9",
															"nodeType": "YulAssignment",
															"src": "5648:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:9"
																},
																"nativeSrc": "5656:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:9"
																		},
																		"nativeSrc": "5737:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:9"
																},
																"nativeSrc": "5684:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:9"
															},
															"nativeSrc": "5684:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:9",
														"nodeType": "YulTypedName",
														"src": "5610:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:9",
														"nodeType": "YulTypedName",
														"src": "5622:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:9",
														"nodeType": "YulTypedName",
														"src": "5633:4:9",
														"type": ""
													}
												],
												"src": "5540:222:9"
											},
											{
												"body": {
													"nativeSrc": "5916:282:9",
													"nodeType": "YulBlock",
													"src": "5916:282:9",
													"statements": [
														{
															"nativeSrc": "5926:26:9",
															"nodeType": "YulAssignment",
															"src": "5926:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5938:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5938:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5949:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5934:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:9"
																},
																"nativeSrc": "5934:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5934:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5926:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5926:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6006:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6006:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6019:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6030:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6030:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6015:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:9"
																		},
																		"nativeSrc": "6015:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5962:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5962:43:9"
																},
																"nativeSrc": "5962:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5962:71:9"
															},
															"nativeSrc": "5962:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5962:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6087:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6087:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6100:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6100:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6111:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6111:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6096:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6096:3:9"
																		},
																		"nativeSrc": "6096:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6096:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6043:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6043:43:9"
																},
																"nativeSrc": "6043:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6043:72:9"
															},
															"nativeSrc": "6043:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6043:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6163:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6163:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6176:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6176:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6187:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6187:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6172:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:9"
																		},
																		"nativeSrc": "6172:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6125:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "6125:37:9"
																},
																"nativeSrc": "6125:66:9",
																"nodeType": "YulFunctionCall",
																"src": "6125:66:9"
															},
															"nativeSrc": "6125:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "6125:66:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "5768:430:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5872:9:9",
														"nodeType": "YulTypedName",
														"src": "5872:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5884:6:9",
														"nodeType": "YulTypedName",
														"src": "5884:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5892:6:9",
														"nodeType": "YulTypedName",
														"src": "5892:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5900:6:9",
														"nodeType": "YulTypedName",
														"src": "5900:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5911:4:9",
														"nodeType": "YulTypedName",
														"src": "5911:4:9",
														"type": ""
													}
												],
												"src": "5768:430:9"
											},
											{
												"body": {
													"nativeSrc": "6287:391:9",
													"nodeType": "YulBlock",
													"src": "6287:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6333:83:9",
																"nodeType": "YulBlock",
																"src": "6333:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6335:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6335:77:9"
																			},
																			"nativeSrc": "6335:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6335:79:9"
																		},
																		"nativeSrc": "6335:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6335:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6308:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6308:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6317:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6317:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6304:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6304:3:9"
																		},
																		"nativeSrc": "6304:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6304:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6329:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6329:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6300:3:9"
																},
																"nativeSrc": "6300:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6300:32:9"
															},
															"nativeSrc": "6297:119:9",
															"nodeType": "YulIf",
															"src": "6297:119:9"
														},
														{
															"nativeSrc": "6426:117:9",
															"nodeType": "YulBlock",
															"src": "6426:117:9",
															"statements": [
																{
																	"nativeSrc": "6441:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6441:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6455:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6455:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6445:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6445:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6470:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6470:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6505:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6505:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6516:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6516:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6501:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6501:3:9"
																				},
																				"nativeSrc": "6501:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6501:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6525:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6525:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6480:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6480:20:9"
																		},
																		"nativeSrc": "6480:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6480:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6470:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6470:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6553:118:9",
															"nodeType": "YulBlock",
															"src": "6553:118:9",
															"statements": [
																{
																	"nativeSrc": "6568:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6568:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6582:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6582:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6572:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6572:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6598:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6598:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6633:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6633:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6644:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6644:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6629:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6629:3:9"
																				},
																				"nativeSrc": "6629:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6629:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6653:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6653:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6608:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6608:20:9"
																		},
																		"nativeSrc": "6608:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6608:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6598:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6598:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6204:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6249:9:9",
														"nodeType": "YulTypedName",
														"src": "6249:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6260:7:9",
														"nodeType": "YulTypedName",
														"src": "6260:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6272:6:9",
														"nodeType": "YulTypedName",
														"src": "6272:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6280:6:9",
														"nodeType": "YulTypedName",
														"src": "6280:6:9",
														"type": ""
													}
												],
												"src": "6204:474:9"
											},
											{
												"body": {
													"nativeSrc": "6712:152:9",
													"nodeType": "YulBlock",
													"src": "6712:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6729:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6729:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6732:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6732:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6722:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:9"
																},
																"nativeSrc": "6722:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6722:88:9"
															},
															"nativeSrc": "6722:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6722:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6829:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:9"
																},
																"nativeSrc": "6819:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6819:15:9"
															},
															"nativeSrc": "6819:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6819:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6850:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6850:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6853:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6853:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6843:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6843:6:9"
																},
																"nativeSrc": "6843:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6843:15:9"
															},
															"nativeSrc": "6843:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6843:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6684:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6684:180:9"
											},
											{
												"body": {
													"nativeSrc": "6921:269:9",
													"nodeType": "YulBlock",
													"src": "6921:269:9",
													"statements": [
														{
															"nativeSrc": "6931:22:9",
															"nodeType": "YulAssignment",
															"src": "6931:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6945:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6945:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6951:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6951:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6941:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6941:3:9"
																},
																"nativeSrc": "6941:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6941:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6931:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6931:6:9"
																}
															]
														},
														{
															"nativeSrc": "6962:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6962:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6992:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6992:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6998:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6998:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6988:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6988:3:9"
																},
																"nativeSrc": "6988:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6988:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6966:18:9",
																	"nodeType": "YulTypedName",
																	"src": "6966:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7039:51:9",
																"nodeType": "YulBlock",
																"src": "7039:51:9",
																"statements": [
																	{
																		"nativeSrc": "7053:27:9",
																		"nodeType": "YulAssignment",
																		"src": "7053:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7067:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7067:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7075:4:9",
																					"nodeType": "YulLiteral",
																					"src": "7075:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7063:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7063:3:9"
																			},
																			"nativeSrc": "7063:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7063:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7053:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7053:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7019:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7019:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7012:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:9"
																},
																"nativeSrc": "7012:26:9",
																"nodeType": "YulFunctionCall",
																"src": "7012:26:9"
															},
															"nativeSrc": "7009:81:9",
															"nodeType": "YulIf",
															"src": "7009:81:9"
														},
														{
															"body": {
																"nativeSrc": "7142:42:9",
																"nodeType": "YulBlock",
																"src": "7142:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7156:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7156:16:9"
																			},
																			"nativeSrc": "7156:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7156:18:9"
																		},
																		"nativeSrc": "7156:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7156:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7106:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7106:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7129:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7129:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7137:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7126:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7126:2:9"
																		},
																		"nativeSrc": "7126:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7126:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7103:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7103:2:9"
																},
																"nativeSrc": "7103:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7103:38:9"
															},
															"nativeSrc": "7100:84:9",
															"nodeType": "YulIf",
															"src": "7100:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6870:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6905:4:9",
														"nodeType": "YulTypedName",
														"src": "6905:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6914:6:9",
														"nodeType": "YulTypedName",
														"src": "6914:6:9",
														"type": ""
													}
												],
												"src": "6870:320:9"
											},
											{
												"body": {
													"nativeSrc": "7224:152:9",
													"nodeType": "YulBlock",
													"src": "7224:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7241:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7241:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7244:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7244:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7234:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7234:6:9"
																},
																"nativeSrc": "7234:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7234:88:9"
															},
															"nativeSrc": "7234:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7234:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7338:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7338:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7341:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7341:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7331:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:9"
																},
																"nativeSrc": "7331:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7331:15:9"
															},
															"nativeSrc": "7331:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7331:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7362:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7362:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7365:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7365:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7355:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7355:6:9"
																},
																"nativeSrc": "7355:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7355:15:9"
															},
															"nativeSrc": "7355:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7355:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7196:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7196:180:9"
											},
											{
												"body": {
													"nativeSrc": "7426:147:9",
													"nodeType": "YulBlock",
													"src": "7426:147:9",
													"statements": [
														{
															"nativeSrc": "7436:25:9",
															"nodeType": "YulAssignment",
															"src": "7436:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7459:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7459:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7441:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7441:17:9"
																},
																"nativeSrc": "7441:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7441:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7436:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7436:1:9"
																}
															]
														},
														{
															"nativeSrc": "7470:25:9",
															"nodeType": "YulAssignment",
															"src": "7470:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7493:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7493:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7475:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7475:17:9"
																},
																"nativeSrc": "7475:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7475:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7470:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7470:1:9"
																}
															]
														},
														{
															"nativeSrc": "7504:16:9",
															"nodeType": "YulAssignment",
															"src": "7504:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7515:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7515:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7518:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7518:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:9"
																},
																"nativeSrc": "7511:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7511:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7504:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7504:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7544:22:9",
																"nodeType": "YulBlock",
																"src": "7544:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7546:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7546:16:9"
																			},
																			"nativeSrc": "7546:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7546:18:9"
																		},
																		"nativeSrc": "7546:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7546:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7536:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7536:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7539:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7539:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7533:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7533:2:9"
																},
																"nativeSrc": "7533:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7533:10:9"
															},
															"nativeSrc": "7530:36:9",
															"nodeType": "YulIf",
															"src": "7530:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7382:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7413:1:9",
														"nodeType": "YulTypedName",
														"src": "7413:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7416:1:9",
														"nodeType": "YulTypedName",
														"src": "7416:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7422:3:9",
														"nodeType": "YulTypedName",
														"src": "7422:3:9",
														"type": ""
													}
												],
												"src": "7382:191:9"
											},
											{
												"body": {
													"nativeSrc": "7685:65:9",
													"nodeType": "YulBlock",
													"src": "7685:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7707:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7707:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7715:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7715:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7703:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:9"
																		},
																		"nativeSrc": "7703:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7703:14:9"
																	},
																	{
																		"hexValue": "546f6f206561726c7920666f722068616c76696e67",
																		"kind": "string",
																		"nativeSrc": "7719:23:9",
																		"nodeType": "YulLiteral",
																		"src": "7719:23:9",
																		"type": "",
																		"value": "Too early for halving"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7696:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:9"
																},
																"nativeSrc": "7696:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7696:47:9"
															},
															"nativeSrc": "7696:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7696:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901",
												"nativeSrc": "7579:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7677:6:9",
														"nodeType": "YulTypedName",
														"src": "7677:6:9",
														"type": ""
													}
												],
												"src": "7579:171:9"
											},
											{
												"body": {
													"nativeSrc": "7902:220:9",
													"nodeType": "YulBlock",
													"src": "7902:220:9",
													"statements": [
														{
															"nativeSrc": "7912:74:9",
															"nodeType": "YulAssignment",
															"src": "7912:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7978:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7978:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7983:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7983:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7919:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7919:58:9"
																},
																"nativeSrc": "7919:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7919:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7912:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7912:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8084:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901",
																	"nativeSrc": "7995:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7995:88:9"
																},
																"nativeSrc": "7995:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7995:93:9"
															},
															"nativeSrc": "7995:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7995:93:9"
														},
														{
															"nativeSrc": "8097:19:9",
															"nodeType": "YulAssignment",
															"src": "8097:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8108:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8108:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8113:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8113:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8104:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8104:3:9"
																},
																"nativeSrc": "8104:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8104:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8097:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7756:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7890:3:9",
														"nodeType": "YulTypedName",
														"src": "7890:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7898:3:9",
														"nodeType": "YulTypedName",
														"src": "7898:3:9",
														"type": ""
													}
												],
												"src": "7756:366:9"
											},
											{
												"body": {
													"nativeSrc": "8299:248:9",
													"nodeType": "YulBlock",
													"src": "8299:248:9",
													"statements": [
														{
															"nativeSrc": "8309:26:9",
															"nodeType": "YulAssignment",
															"src": "8309:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8321:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8321:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8332:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8332:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8317:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8317:3:9"
																},
																"nativeSrc": "8317:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8317:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8309:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8309:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8356:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8356:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8367:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8367:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8352:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:9"
																		},
																		"nativeSrc": "8352:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8352:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8375:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8375:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8381:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8381:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8371:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:9"
																		},
																		"nativeSrc": "8371:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8371:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8345:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:9"
																},
																"nativeSrc": "8345:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8345:47:9"
															},
															"nativeSrc": "8345:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8345:47:9"
														},
														{
															"nativeSrc": "8401:139:9",
															"nodeType": "YulAssignment",
															"src": "8401:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8535:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8535:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8409:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8409:124:9"
																},
																"nativeSrc": "8409:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8409:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8401:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8401:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8128:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8279:9:9",
														"nodeType": "YulTypedName",
														"src": "8279:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8294:4:9",
														"nodeType": "YulTypedName",
														"src": "8294:4:9",
														"type": ""
													}
												],
												"src": "8128:419:9"
											},
											{
												"body": {
													"nativeSrc": "8581:152:9",
													"nodeType": "YulBlock",
													"src": "8581:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8598:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8598:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8601:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8601:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8591:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:9"
																},
																"nativeSrc": "8591:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8591:88:9"
															},
															"nativeSrc": "8591:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8591:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8695:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8695:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8698:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8698:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8688:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8688:6:9"
																},
																"nativeSrc": "8688:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8688:15:9"
															},
															"nativeSrc": "8688:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8688:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8719:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8719:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8722:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8722:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8712:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8712:6:9"
																},
																"nativeSrc": "8712:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8712:15:9"
															},
															"nativeSrc": "8712:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8712:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8553:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8553:180:9"
											},
											{
												"body": {
													"nativeSrc": "8781:143:9",
													"nodeType": "YulBlock",
													"src": "8781:143:9",
													"statements": [
														{
															"nativeSrc": "8791:25:9",
															"nodeType": "YulAssignment",
															"src": "8791:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8814:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8814:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8796:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8796:17:9"
																},
																"nativeSrc": "8796:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8796:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8791:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8791:1:9"
																}
															]
														},
														{
															"nativeSrc": "8825:25:9",
															"nodeType": "YulAssignment",
															"src": "8825:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8848:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8848:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8830:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8830:17:9"
																},
																"nativeSrc": "8830:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8830:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8825:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8825:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8872:22:9",
																"nodeType": "YulBlock",
																"src": "8872:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8874:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8874:16:9"
																			},
																			"nativeSrc": "8874:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8874:18:9"
																		},
																		"nativeSrc": "8874:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8874:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8869:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8869:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8862:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8862:6:9"
																},
																"nativeSrc": "8862:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8862:9:9"
															},
															"nativeSrc": "8859:35:9",
															"nodeType": "YulIf",
															"src": "8859:35:9"
														},
														{
															"nativeSrc": "8904:14:9",
															"nodeType": "YulAssignment",
															"src": "8904:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8913:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8913:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8916:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8916:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8909:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8909:3:9"
																},
																"nativeSrc": "8909:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8909:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8904:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8904:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8739:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8770:1:9",
														"nodeType": "YulTypedName",
														"src": "8770:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8773:1:9",
														"nodeType": "YulTypedName",
														"src": "8773:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8779:1:9",
														"nodeType": "YulTypedName",
														"src": "8779:1:9",
														"type": ""
													}
												],
												"src": "8739:185:9"
											},
											{
												"body": {
													"nativeSrc": "9036:62:9",
													"nodeType": "YulBlock",
													"src": "9036:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9058:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9058:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9066:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9066:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9054:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9054:3:9"
																		},
																		"nativeSrc": "9054:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9054:14:9"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9070:20:9",
																		"nodeType": "YulLiteral",
																		"src": "9070:20:9",
																		"type": "",
																		"value": "Not enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9047:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9047:6:9"
																},
																"nativeSrc": "9047:44:9",
																"nodeType": "YulFunctionCall",
																"src": "9047:44:9"
															},
															"nativeSrc": "9047:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "9047:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
												"nativeSrc": "8930:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9028:6:9",
														"nodeType": "YulTypedName",
														"src": "9028:6:9",
														"type": ""
													}
												],
												"src": "8930:168:9"
											},
											{
												"body": {
													"nativeSrc": "9250:220:9",
													"nodeType": "YulBlock",
													"src": "9250:220:9",
													"statements": [
														{
															"nativeSrc": "9260:74:9",
															"nodeType": "YulAssignment",
															"src": "9260:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9326:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9326:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9331:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9331:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9267:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9267:58:9"
																},
																"nativeSrc": "9267:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9267:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9260:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9260:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9432:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9432:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																	"nativeSrc": "9343:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9343:88:9"
																},
																"nativeSrc": "9343:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9343:93:9"
															},
															"nativeSrc": "9343:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9343:93:9"
														},
														{
															"nativeSrc": "9445:19:9",
															"nodeType": "YulAssignment",
															"src": "9445:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9456:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9456:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9461:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9461:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9452:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9452:3:9"
																},
																"nativeSrc": "9452:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9452:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9445:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9445:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9104:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9238:3:9",
														"nodeType": "YulTypedName",
														"src": "9238:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9246:3:9",
														"nodeType": "YulTypedName",
														"src": "9246:3:9",
														"type": ""
													}
												],
												"src": "9104:366:9"
											},
											{
												"body": {
													"nativeSrc": "9647:248:9",
													"nodeType": "YulBlock",
													"src": "9647:248:9",
													"statements": [
														{
															"nativeSrc": "9657:26:9",
															"nodeType": "YulAssignment",
															"src": "9657:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9669:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9669:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9680:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9680:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9665:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9665:3:9"
																},
																"nativeSrc": "9665:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9665:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9657:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9657:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9704:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9704:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9715:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9715:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9700:3:9"
																		},
																		"nativeSrc": "9700:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9700:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9723:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9723:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9729:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9729:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9719:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9719:3:9"
																		},
																		"nativeSrc": "9719:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9719:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9693:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9693:6:9"
																},
																"nativeSrc": "9693:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9693:47:9"
															},
															"nativeSrc": "9693:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9693:47:9"
														},
														{
															"nativeSrc": "9749:139:9",
															"nodeType": "YulAssignment",
															"src": "9749:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9883:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9883:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9757:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9757:124:9"
																},
																"nativeSrc": "9757:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9757:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9749:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9749:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9476:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9627:9:9",
														"nodeType": "YulTypedName",
														"src": "9627:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9642:4:9",
														"nodeType": "YulTypedName",
														"src": "9642:4:9",
														"type": ""
													}
												],
												"src": "9476:419:9"
											},
											{
												"body": {
													"nativeSrc": "10007:75:9",
													"nodeType": "YulBlock",
													"src": "10007:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10029:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10029:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10037:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10037:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10025:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10025:3:9"
																		},
																		"nativeSrc": "10025:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10025:14:9"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "10041:33:9",
																		"nodeType": "YulLiteral",
																		"src": "10041:33:9",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10018:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10018:6:9"
																},
																"nativeSrc": "10018:57:9",
																"nodeType": "YulFunctionCall",
																"src": "10018:57:9"
															},
															"nativeSrc": "10018:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "10018:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nativeSrc": "9901:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9999:6:9",
														"nodeType": "YulTypedName",
														"src": "9999:6:9",
														"type": ""
													}
												],
												"src": "9901:181:9"
											},
											{
												"body": {
													"nativeSrc": "10234:220:9",
													"nodeType": "YulBlock",
													"src": "10234:220:9",
													"statements": [
														{
															"nativeSrc": "10244:74:9",
															"nodeType": "YulAssignment",
															"src": "10244:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10310:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10310:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10315:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10315:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10251:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10251:58:9"
																},
																"nativeSrc": "10251:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10251:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10244:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10244:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10416:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10416:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nativeSrc": "10327:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10327:88:9"
																},
																"nativeSrc": "10327:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10327:93:9"
															},
															"nativeSrc": "10327:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10327:93:9"
														},
														{
															"nativeSrc": "10429:19:9",
															"nodeType": "YulAssignment",
															"src": "10429:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10440:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10440:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10445:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10445:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10436:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10436:3:9"
																},
																"nativeSrc": "10436:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10436:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10429:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10429:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10088:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10222:3:9",
														"nodeType": "YulTypedName",
														"src": "10222:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10230:3:9",
														"nodeType": "YulTypedName",
														"src": "10230:3:9",
														"type": ""
													}
												],
												"src": "10088:366:9"
											},
											{
												"body": {
													"nativeSrc": "10631:248:9",
													"nodeType": "YulBlock",
													"src": "10631:248:9",
													"statements": [
														{
															"nativeSrc": "10641:26:9",
															"nodeType": "YulAssignment",
															"src": "10641:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10653:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10653:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10664:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10664:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10649:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10649:3:9"
																},
																"nativeSrc": "10649:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10649:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10641:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10641:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10688:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10688:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10699:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10699:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10684:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10684:3:9"
																		},
																		"nativeSrc": "10684:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10684:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10707:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10707:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10713:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10713:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10703:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10703:3:9"
																		},
																		"nativeSrc": "10703:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10703:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10677:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10677:6:9"
																},
																"nativeSrc": "10677:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10677:47:9"
															},
															"nativeSrc": "10677:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10677:47:9"
														},
														{
															"nativeSrc": "10733:139:9",
															"nodeType": "YulAssignment",
															"src": "10733:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10867:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10867:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10741:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10741:124:9"
																},
																"nativeSrc": "10741:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10741:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10733:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10733:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10460:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10611:9:9",
														"nodeType": "YulTypedName",
														"src": "10611:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10626:4:9",
														"nodeType": "YulTypedName",
														"src": "10626:4:9",
														"type": ""
													}
												],
												"src": "10460:419:9"
											},
											{
												"body": {
													"nativeSrc": "10991:62:9",
													"nodeType": "YulBlock",
													"src": "10991:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11013:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11013:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11021:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11021:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11009:3:9"
																		},
																		"nativeSrc": "11009:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11009:14:9"
																	},
																	{
																		"hexValue": "4d617820737570706c792072656163686564",
																		"kind": "string",
																		"nativeSrc": "11025:20:9",
																		"nodeType": "YulLiteral",
																		"src": "11025:20:9",
																		"type": "",
																		"value": "Max supply reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11002:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11002:6:9"
																},
																"nativeSrc": "11002:44:9",
																"nodeType": "YulFunctionCall",
																"src": "11002:44:9"
															},
															"nativeSrc": "11002:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "11002:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
												"nativeSrc": "10885:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10983:6:9",
														"nodeType": "YulTypedName",
														"src": "10983:6:9",
														"type": ""
													}
												],
												"src": "10885:168:9"
											},
											{
												"body": {
													"nativeSrc": "11205:220:9",
													"nodeType": "YulBlock",
													"src": "11205:220:9",
													"statements": [
														{
															"nativeSrc": "11215:74:9",
															"nodeType": "YulAssignment",
															"src": "11215:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11281:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11281:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11286:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11286:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11222:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11222:58:9"
																},
																"nativeSrc": "11222:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11222:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11215:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11215:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11387:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11387:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																	"nativeSrc": "11298:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11298:88:9"
																},
																"nativeSrc": "11298:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11298:93:9"
															},
															"nativeSrc": "11298:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11298:93:9"
														},
														{
															"nativeSrc": "11400:19:9",
															"nodeType": "YulAssignment",
															"src": "11400:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11411:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11411:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11416:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11416:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11407:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11407:3:9"
																},
																"nativeSrc": "11407:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11407:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11400:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11059:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11193:3:9",
														"nodeType": "YulTypedName",
														"src": "11193:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11201:3:9",
														"nodeType": "YulTypedName",
														"src": "11201:3:9",
														"type": ""
													}
												],
												"src": "11059:366:9"
											},
											{
												"body": {
													"nativeSrc": "11602:248:9",
													"nodeType": "YulBlock",
													"src": "11602:248:9",
													"statements": [
														{
															"nativeSrc": "11612:26:9",
															"nodeType": "YulAssignment",
															"src": "11612:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11624:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11624:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11635:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11635:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11620:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11620:3:9"
																},
																"nativeSrc": "11620:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11620:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11612:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11612:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11659:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11659:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11670:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11670:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11655:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11655:3:9"
																		},
																		"nativeSrc": "11655:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11655:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11678:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11678:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11684:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11684:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11674:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11674:3:9"
																		},
																		"nativeSrc": "11674:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11674:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11648:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11648:6:9"
																},
																"nativeSrc": "11648:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11648:47:9"
															},
															"nativeSrc": "11648:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11648:47:9"
														},
														{
															"nativeSrc": "11704:139:9",
															"nodeType": "YulAssignment",
															"src": "11704:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11838:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11838:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11712:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11712:124:9"
																},
																"nativeSrc": "11712:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11712:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11704:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11704:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11431:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11582:9:9",
														"nodeType": "YulTypedName",
														"src": "11582:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11597:4:9",
														"nodeType": "YulTypedName",
														"src": "11597:4:9",
														"type": ""
													}
												],
												"src": "11431:419:9"
											},
											{
												"body": {
													"nativeSrc": "11962:60:9",
													"nodeType": "YulBlock",
													"src": "11962:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11984:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11984:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11992:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11992:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11980:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11980:3:9"
																		},
																		"nativeSrc": "11980:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11980:14:9"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nativeSrc": "11996:18:9",
																		"nodeType": "YulLiteral",
																		"src": "11996:18:9",
																		"type": "",
																		"value": "No tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11973:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11973:6:9"
																},
																"nativeSrc": "11973:42:9",
																"nodeType": "YulFunctionCall",
																"src": "11973:42:9"
															},
															"nativeSrc": "11973:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "11973:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
												"nativeSrc": "11856:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11954:6:9",
														"nodeType": "YulTypedName",
														"src": "11954:6:9",
														"type": ""
													}
												],
												"src": "11856:166:9"
											},
											{
												"body": {
													"nativeSrc": "12174:220:9",
													"nodeType": "YulBlock",
													"src": "12174:220:9",
													"statements": [
														{
															"nativeSrc": "12184:74:9",
															"nodeType": "YulAssignment",
															"src": "12184:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12250:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12250:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12255:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12255:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12191:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12191:58:9"
																},
																"nativeSrc": "12191:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12191:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12184:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12184:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12356:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12356:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																	"nativeSrc": "12267:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12267:88:9"
																},
																"nativeSrc": "12267:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12267:93:9"
															},
															"nativeSrc": "12267:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12267:93:9"
														},
														{
															"nativeSrc": "12369:19:9",
															"nodeType": "YulAssignment",
															"src": "12369:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12380:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12380:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12385:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12385:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12376:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12376:3:9"
																},
																"nativeSrc": "12376:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12376:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12369:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12028:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12162:3:9",
														"nodeType": "YulTypedName",
														"src": "12162:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12170:3:9",
														"nodeType": "YulTypedName",
														"src": "12170:3:9",
														"type": ""
													}
												],
												"src": "12028:366:9"
											},
											{
												"body": {
													"nativeSrc": "12571:248:9",
													"nodeType": "YulBlock",
													"src": "12571:248:9",
													"statements": [
														{
															"nativeSrc": "12581:26:9",
															"nodeType": "YulAssignment",
															"src": "12581:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12593:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12593:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12604:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12604:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12589:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12589:3:9"
																},
																"nativeSrc": "12589:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12589:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12581:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12581:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12628:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12628:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12639:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12639:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12624:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12624:3:9"
																		},
																		"nativeSrc": "12624:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12624:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12647:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12647:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12653:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12653:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12643:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12643:3:9"
																		},
																		"nativeSrc": "12643:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12643:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12617:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12617:6:9"
																},
																"nativeSrc": "12617:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12617:47:9"
															},
															"nativeSrc": "12617:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12617:47:9"
														},
														{
															"nativeSrc": "12673:139:9",
															"nodeType": "YulAssignment",
															"src": "12673:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12807:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12807:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12681:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12681:124:9"
																},
																"nativeSrc": "12681:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12681:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12673:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12673:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12400:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12551:9:9",
														"nodeType": "YulTypedName",
														"src": "12551:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12566:4:9",
														"nodeType": "YulTypedName",
														"src": "12566:4:9",
														"type": ""
													}
												],
												"src": "12400:419:9"
											},
											{
												"body": {
													"nativeSrc": "12870:149:9",
													"nodeType": "YulBlock",
													"src": "12870:149:9",
													"statements": [
														{
															"nativeSrc": "12880:25:9",
															"nodeType": "YulAssignment",
															"src": "12880:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12903:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12903:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12885:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12885:17:9"
																},
																"nativeSrc": "12885:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12885:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12880:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12880:1:9"
																}
															]
														},
														{
															"nativeSrc": "12914:25:9",
															"nodeType": "YulAssignment",
															"src": "12914:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12937:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12937:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12919:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12919:17:9"
																},
																"nativeSrc": "12919:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12919:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12914:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12914:1:9"
																}
															]
														},
														{
															"nativeSrc": "12948:17:9",
															"nodeType": "YulAssignment",
															"src": "12948:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12960:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12960:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12963:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12963:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12956:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12956:3:9"
																},
																"nativeSrc": "12956:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12956:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12948:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12948:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12990:22:9",
																"nodeType": "YulBlock",
																"src": "12990:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12992:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12992:16:9"
																			},
																			"nativeSrc": "12992:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12992:18:9"
																		},
																		"nativeSrc": "12992:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12992:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12981:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12981:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12987:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12987:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12978:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "12978:2:9"
																},
																"nativeSrc": "12978:11:9",
																"nodeType": "YulFunctionCall",
																"src": "12978:11:9"
															},
															"nativeSrc": "12975:37:9",
															"nodeType": "YulIf",
															"src": "12975:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12825:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12856:1:9",
														"nodeType": "YulTypedName",
														"src": "12856:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12859:1:9",
														"nodeType": "YulTypedName",
														"src": "12859:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12865:4:9",
														"nodeType": "YulTypedName",
														"src": "12865:4:9",
														"type": ""
													}
												],
												"src": "12825:194:9"
											},
											{
												"body": {
													"nativeSrc": "13073:362:9",
													"nodeType": "YulBlock",
													"src": "13073:362:9",
													"statements": [
														{
															"nativeSrc": "13083:25:9",
															"nodeType": "YulAssignment",
															"src": "13083:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13106:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13106:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13088:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13088:17:9"
																},
																"nativeSrc": "13088:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13088:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13083:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13083:1:9"
																}
															]
														},
														{
															"nativeSrc": "13117:25:9",
															"nodeType": "YulAssignment",
															"src": "13117:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13140:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13140:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13122:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13122:17:9"
																},
																"nativeSrc": "13122:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13122:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13117:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13117:1:9"
																}
															]
														},
														{
															"nativeSrc": "13151:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "13151:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13174:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13174:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13177:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13177:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13170:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13170:3:9"
																},
																"nativeSrc": "13170:9:9",
																"nodeType": "YulFunctionCall",
																"src": "13170:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13155:11:9",
																	"nodeType": "YulTypedName",
																	"src": "13155:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13188:41:9",
															"nodeType": "YulAssignment",
															"src": "13188:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13217:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "13217:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13199:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13199:17:9"
																},
																"nativeSrc": "13199:30:9",
																"nodeType": "YulFunctionCall",
																"src": "13199:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13188:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "13188:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13406:22:9",
																"nodeType": "YulBlock",
																"src": "13406:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13408:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "13408:16:9"
																			},
																			"nativeSrc": "13408:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13408:18:9"
																		},
																		"nativeSrc": "13408:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13408:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13339:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "13339:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13332:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "13332:6:9"
																				},
																				"nativeSrc": "13332:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13332:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13362:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "13362:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13369:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "13369:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13378:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "13378:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13365:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "13365:3:9"
																						},
																						"nativeSrc": "13365:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "13365:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13359:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "13359:2:9"
																				},
																				"nativeSrc": "13359:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13359:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13312:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "13312:2:9"
																		},
																		"nativeSrc": "13312:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13312:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13292:6:9"
																},
																"nativeSrc": "13292:113:9",
																"nodeType": "YulFunctionCall",
																"src": "13292:113:9"
															},
															"nativeSrc": "13289:139:9",
															"nodeType": "YulIf",
															"src": "13289:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13025:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13056:1:9",
														"nodeType": "YulTypedName",
														"src": "13056:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13059:1:9",
														"nodeType": "YulTypedName",
														"src": "13059:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13065:7:9",
														"nodeType": "YulTypedName",
														"src": "13065:7:9",
														"type": ""
													}
												],
												"src": "13025:410:9"
											},
											{
												"body": {
													"nativeSrc": "13595:288:9",
													"nodeType": "YulBlock",
													"src": "13595:288:9",
													"statements": [
														{
															"nativeSrc": "13605:26:9",
															"nodeType": "YulAssignment",
															"src": "13605:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13617:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13617:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13628:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13628:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13613:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13613:3:9"
																},
																"nativeSrc": "13613:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13613:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13605:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13605:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13685:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13685:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13698:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13698:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13709:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13709:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13694:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13694:3:9"
																		},
																		"nativeSrc": "13694:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13694:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13641:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13641:43:9"
																},
																"nativeSrc": "13641:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13641:71:9"
															},
															"nativeSrc": "13641:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13641:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13766:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13766:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13779:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13779:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13790:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13790:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13775:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13775:3:9"
																		},
																		"nativeSrc": "13775:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13775:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13722:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13722:43:9"
																},
																"nativeSrc": "13722:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13722:72:9"
															},
															"nativeSrc": "13722:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13722:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13848:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13848:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13861:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13861:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13872:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13872:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13857:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13857:3:9"
																		},
																		"nativeSrc": "13857:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13857:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13804:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13804:43:9"
																},
																"nativeSrc": "13804:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13804:72:9"
															},
															"nativeSrc": "13804:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13804:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13441:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13551:9:9",
														"nodeType": "YulTypedName",
														"src": "13551:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13563:6:9",
														"nodeType": "YulTypedName",
														"src": "13563:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13571:6:9",
														"nodeType": "YulTypedName",
														"src": "13571:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13579:6:9",
														"nodeType": "YulTypedName",
														"src": "13579:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13590:4:9",
														"nodeType": "YulTypedName",
														"src": "13590:4:9",
														"type": ""
													}
												],
												"src": "13441:442:9"
											},
											{
												"body": {
													"nativeSrc": "13995:75:9",
													"nodeType": "YulBlock",
													"src": "13995:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14017:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14017:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14025:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14025:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14013:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14013:3:9"
																		},
																		"nativeSrc": "14013:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14013:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14029:33:9",
																		"nodeType": "YulLiteral",
																		"src": "14029:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14006:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14006:6:9"
																},
																"nativeSrc": "14006:57:9",
																"nodeType": "YulFunctionCall",
																"src": "14006:57:9"
															},
															"nativeSrc": "14006:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "14006:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "13889:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13987:6:9",
														"nodeType": "YulTypedName",
														"src": "13987:6:9",
														"type": ""
													}
												],
												"src": "13889:181:9"
											},
											{
												"body": {
													"nativeSrc": "14222:220:9",
													"nodeType": "YulBlock",
													"src": "14222:220:9",
													"statements": [
														{
															"nativeSrc": "14232:74:9",
															"nodeType": "YulAssignment",
															"src": "14232:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14298:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14298:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14303:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14303:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14239:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14239:58:9"
																},
																"nativeSrc": "14239:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14239:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14232:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14232:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14404:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14404:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "14315:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14315:88:9"
																},
																"nativeSrc": "14315:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14315:93:9"
															},
															"nativeSrc": "14315:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14315:93:9"
														},
														{
															"nativeSrc": "14417:19:9",
															"nodeType": "YulAssignment",
															"src": "14417:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14428:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14428:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14433:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14433:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14424:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14424:3:9"
																},
																"nativeSrc": "14424:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14424:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14417:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14417:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14076:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14210:3:9",
														"nodeType": "YulTypedName",
														"src": "14210:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14218:3:9",
														"nodeType": "YulTypedName",
														"src": "14218:3:9",
														"type": ""
													}
												],
												"src": "14076:366:9"
											},
											{
												"body": {
													"nativeSrc": "14619:248:9",
													"nodeType": "YulBlock",
													"src": "14619:248:9",
													"statements": [
														{
															"nativeSrc": "14629:26:9",
															"nodeType": "YulAssignment",
															"src": "14629:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14641:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14641:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14652:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14652:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14637:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14637:3:9"
																},
																"nativeSrc": "14637:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14637:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14629:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14629:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14676:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14676:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14687:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14687:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14672:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:9"
																		},
																		"nativeSrc": "14672:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14672:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14695:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14695:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14701:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14701:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14691:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14691:3:9"
																		},
																		"nativeSrc": "14691:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14691:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14665:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14665:6:9"
																},
																"nativeSrc": "14665:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14665:47:9"
															},
															"nativeSrc": "14665:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14665:47:9"
														},
														{
															"nativeSrc": "14721:139:9",
															"nodeType": "YulAssignment",
															"src": "14721:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14855:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14855:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14729:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14729:124:9"
																},
																"nativeSrc": "14729:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14729:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14721:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14721:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14448:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14599:9:9",
														"nodeType": "YulTypedName",
														"src": "14599:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14614:4:9",
														"nodeType": "YulTypedName",
														"src": "14614:4:9",
														"type": ""
													}
												],
												"src": "14448:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901(memPtr) {\n\n        mstore(add(memPtr, 0), \"Too early for halving\")\n\n    }\n\n    function abi_encode_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max supply reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1060": [
									{
										"length": 32,
										"start": 2548
									},
									{
										"length": 32,
										"start": 3249
									},
									{
										"length": 32,
										"start": 3309
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a7575f3560e01c80637547c7a3116100f7578063a5ce413b11610095578063db6e62cd1161006f578063db6e62cd14610485578063dd62ed3e146104a1578063f2fde38b146104d1578063f651ed5e146104ed576101a7565b8063a5ce413b1461042d578063a9059cbb14610437578063d5abeb0114610467576101a7565b80639168ae72116100d15780639168ae72146103a357806395d89b41146103d557806399caf010146103f35780639a1e19151461040f576101a7565b80637547c7a31461034d57806379cc6790146103695780638da5cb5b14610385576101a7565b806342966c68116101645780635a3e251f1161013e5780635a3e251f146102d95780636d1b229d146102f757806370a0823114610313578063715018a614610343576101a7565b806342966c68146102835780634f3ad3281461029f57806353aaa63b146102a9576101a7565b806306fdde03146101ab578063095ea7b3146101c95780631531b62a146101f957806318160ddd1461021757806323b872dd14610235578063313ce56714610265575b5f80fd5b6101b361050b565b6040516101c09190611764565b60405180910390f35b6101e360048036038101906101de9190611815565b61059b565b6040516101f0919061186d565b60405180910390f35b6102016105bd565b60405161020e9190611895565b60405180910390f35b61021f6105c3565b60405161022c9190611895565b60405180910390f35b61024f600480360381019061024a91906118ae565b6105cc565b60405161025c919061186d565b60405180910390f35b61026d6105fa565b60405161027a9190611919565b60405180910390f35b61029d60048036038101906102989190611932565b610602565b005b6102a7610616565b005b6102c360048036038101906102be919061195d565b610692565b6040516102d09190611895565b60405180910390f35b6102e16106a7565b6040516102ee9190611895565b60405180910390f35b610311600480360381019061030c9190611932565b6106ad565b005b61032d6004803603810190610328919061195d565b610700565b60405161033a9190611895565b60405180910390f35b61034b610745565b005b61036760048036038101906103629190611932565b610758565b005b610383600480360381019061037e9190611815565b6108e0565b005b61038d610900565b60405161039a9190611997565b60405180910390f35b6103bd60048036038101906103b8919061195d565b610928565b6040516103cc939291906119b0565b60405180910390f35b6103dd61095a565b6040516103ea9190611764565b60405180910390f35b61040d6004803603810190610408919061195d565b6109ea565b005b610417610ac8565b6040516104249190611895565b60405180910390f35b610435610ace565b005b610451600480360381019061044c9190611815565b610c8d565b60405161045e919061186d565b60405180910390f35b61046f610caf565b60405161047c9190611895565b60405180910390f35b61049f600480360381019061049a91906118ae565b610cd3565b005b6104bb60048036038101906104b691906119e5565b610dc3565b6040516104c89190611895565b60405180910390f35b6104eb60048036038101906104e6919061195d565b610e45565b005b6104f5610ec9565b6040516105029190611895565b60405180910390f35b60606003805461051a90611a50565b80601f016020809104026020016040519081016040528092919081815260200182805461054690611a50565b80156105915780601f1061056857610100808354040283529160200191610591565b820191905f5260205f20905b81548152906001019060200180831161057457829003601f168201915b5050505050905090565b5f806105a5610ecf565b90506105b2818585610ed6565b600191505092915050565b600a5481565b5f600254905090565b5f806105d6610ecf565b90506105e3858285610ee8565b6105ee858585610f7b565b60019150509392505050565b5f6012905090565b61061361060d610ecf565b8261106b565b50565b61061e6110ea565b60075460085461062e9190611aad565b421015610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066790611b2a565b60405180910390fd5b600260095f8282546106829190611b75565b9250508190555042600881905550565b600c602052805f5260405f205f915090505481565b60075481565b6106b56110ea565b6106c66106c0610900565b8261106b565b7f6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7816040516106f59190611895565b60405180910390a150565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61074d6110ea565b6107565f611171565b565b610760611234565b8061076a33610700565b10156107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290611bef565b60405180910390fd5b5f81116107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e490611c57565b60405180910390fd5b6107f8333083610f7b565b604051806060016040528082815260200142815260200160011515815250600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef826040516108cd9190611895565b60405180910390a26108dd611283565b50565b6108f2826108ec610ecf565b83610ee8565b6108fc828261106b565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff16905083565b60606004805461096990611a50565b80601f016020809104026020016040519081016040528092919081815260200182805461099590611a50565b80156109e05780601f106109b7576101008083540402835291602001916109e0565b820191905f5260205f20905b8154815290600101906020018083116109c357829003601f168201915b5050505050905090565b6109f26110ea565b7f0000000000000000000000000000000000000000000000000000000000000000600954610a1e6105c3565b610a289190611aad565b1115610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6090611cbf565b60405180910390fd5b610a758160095461128d565b8073ffffffffffffffffffffffffffffffffffffffff167ff684d89bb0f42287bf32838774e4b7f8a60c11804b3c6d1791fa55f306792643600954604051610abd9190611895565b60405180910390a250565b60085481565b610ad6611234565b5f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050806002015f9054906101000a900460ff16610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d90611d27565b60405180910390fd5b5f816001015442610b779190611d45565b90505f63bbf81e0082600a54855f0154610b919190611d78565b610b9b9190611d78565b610ba59190611b75565b90505f81845f0154610bb79190611aad565b9050610bc3338361128d565b610bd13033865f0154610f7b565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f9055600282015f6101000a81549060ff021916905550503373ffffffffffffffffffffffffffffffffffffffff167f9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f267982604051610c779190611895565b60405180910390a250505050610c8b611283565b565b5f80610c97610ecf565b9050610ca4818585610f7b565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610cdb6110ea565b5f600a82610ce99190611b75565b90507f000000000000000000000000000000000000000000000000000000000000000081610d156105c3565b610d1f9190611aad565b1115610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790611cbf565b60405180910390fd5b610d6a848261128d565b80600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610db69190611aad565b9250508190555050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e4d6110ea565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ebd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610eb49190611997565b60405180910390fd5b610ec681611171565b50565b60095481565b5f33905090565b610ee3838383600161130c565b505050565b5f610ef38484610dc3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f755781811015610f66578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f5d93929190611db9565b60405180910390fd5b610f7484848484035f61130c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610feb575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fe29190611997565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110529190611997565b60405180910390fd5b6110668383836114db565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110db575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110d29190611997565b60405180910390fd5b6110e6825f836114db565b5050565b6110f2610ecf565b73ffffffffffffffffffffffffffffffffffffffff16611110610900565b73ffffffffffffffffffffffffffffffffffffffff161461116f57611133610ecf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111669190611997565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260065403611279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127090611e38565b60405180910390fd5b6002600681905550565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112fd575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112f49190611997565b60405180910390fd5b6113085f83836114db565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361137c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113739190611997565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113ec575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113e39190611997565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156114d5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516114cc9190611895565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361152b578060025f82825461151f9190611aad565b925050819055506115f9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156115b4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016115ab93929190611db9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611640578060025f828254039250508190555061168a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116e79190611895565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611736826116f4565b61174081856116fe565b935061175081856020860161170e565b6117598161171c565b840191505092915050565b5f6020820190508181035f83015261177c818461172c565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117b182611788565b9050919050565b6117c1816117a7565b81146117cb575f80fd5b50565b5f813590506117dc816117b8565b92915050565b5f819050919050565b6117f4816117e2565b81146117fe575f80fd5b50565b5f8135905061180f816117eb565b92915050565b5f806040838503121561182b5761182a611784565b5b5f611838858286016117ce565b925050602061184985828601611801565b9150509250929050565b5f8115159050919050565b61186781611853565b82525050565b5f6020820190506118805f83018461185e565b92915050565b61188f816117e2565b82525050565b5f6020820190506118a85f830184611886565b92915050565b5f805f606084860312156118c5576118c4611784565b5b5f6118d2868287016117ce565b93505060206118e3868287016117ce565b92505060406118f486828701611801565b9150509250925092565b5f60ff82169050919050565b611913816118fe565b82525050565b5f60208201905061192c5f83018461190a565b92915050565b5f6020828403121561194757611946611784565b5b5f61195484828501611801565b91505092915050565b5f6020828403121561197257611971611784565b5b5f61197f848285016117ce565b91505092915050565b611991816117a7565b82525050565b5f6020820190506119aa5f830184611988565b92915050565b5f6060820190506119c35f830186611886565b6119d06020830185611886565b6119dd604083018461185e565b949350505050565b5f80604083850312156119fb576119fa611784565b5b5f611a08858286016117ce565b9250506020611a19858286016117ce565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a6757607f821691505b602082108103611a7a57611a79611a23565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ab7826117e2565b9150611ac2836117e2565b9250828201905080821115611ada57611ad9611a80565b5b92915050565b7f546f6f206561726c7920666f722068616c76696e6700000000000000000000005f82015250565b5f611b146015836116fe565b9150611b1f82611ae0565b602082019050919050565b5f6020820190508181035f830152611b4181611b08565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b7f826117e2565b9150611b8a836117e2565b925082611b9a57611b99611b48565b5b828204905092915050565b7f4e6f7420656e6f7567682062616c616e636500000000000000000000000000005f82015250565b5f611bd96012836116fe565b9150611be482611ba5565b602082019050919050565b5f6020820190508181035f830152611c0681611bcd565b9050919050565b7f416d6f756e742073686f756c642062652067726561746572207468616e2030005f82015250565b5f611c41601f836116fe565b9150611c4c82611c0d565b602082019050919050565b5f6020820190508181035f830152611c6e81611c35565b9050919050565b7f4d617820737570706c79207265616368656400000000000000000000000000005f82015250565b5f611ca96012836116fe565b9150611cb482611c75565b602082019050919050565b5f6020820190508181035f830152611cd681611c9d565b9050919050565b7f4e6f20746f6b656e73207374616b6564000000000000000000000000000000005f82015250565b5f611d116010836116fe565b9150611d1c82611cdd565b602082019050919050565b5f6020820190508181035f830152611d3e81611d05565b9050919050565b5f611d4f826117e2565b9150611d5a836117e2565b9250828203905081811115611d7257611d71611a80565b5b92915050565b5f611d82826117e2565b9150611d8d836117e2565b9250828202611d9b816117e2565b91508282048414831517611db257611db1611a80565b5b5092915050565b5f606082019050611dcc5f830186611988565b611dd96020830185611886565b611de66040830184611886565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611e22601f836116fe565b9150611e2d82611dee565b602082019050919050565b5f6020820190508181035f830152611e4f81611e16565b905091905056fea2646970667358221220e1c688412a4cd72c845d04e62f0158c451a0a69a7f55a56afb5a6dae1517f00e64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA5CE413B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDB6E62CD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDB6E62CD EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xF651ED5E EQ PUSH2 0x4ED JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x467 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x9168AE72 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x99CAF010 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x9A1E1915 EQ PUSH2 0x40F JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x385 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x5A3E251F GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5A3E251F EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x343 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x4F3AD328 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x53AAA63B EQ PUSH2 0x2A9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1531B62A EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH2 0x616 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x745 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xACE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x195D JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F5 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x51A SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x591 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x591 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x574 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5A5 PUSH2 0xECF JUMP JUMPDEST SWAP1 POP PUSH2 0x5B2 DUP2 DUP6 DUP6 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5D6 PUSH2 0xECF JUMP JUMPDEST SWAP1 POP PUSH2 0x5E3 DUP6 DUP3 DUP6 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0x5EE DUP6 DUP6 DUP6 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x613 PUSH2 0x60D PUSH2 0xECF JUMP JUMPDEST DUP3 PUSH2 0x106B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x61E PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x6C6 PUSH2 0x6C0 PUSH2 0x900 JUMP JUMPDEST DUP3 PUSH2 0x106B JUMP JUMPDEST PUSH32 0x6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74D PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x756 PUSH0 PUSH2 0x1171 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x760 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH2 0x76A CALLER PUSH2 0x700 JUMP JUMPDEST LT ISZERO PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 CALLER ADDRESS DUP4 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF DUP3 PUSH1 0x40 MLOAD PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x8DD PUSH2 0x1283 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8F2 DUP3 PUSH2 0x8EC PUSH2 0xECF JUMP JUMPDEST DUP4 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0x8FC DUP3 DUP3 PUSH2 0x106B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x969 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x995 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0x10EA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x9 SLOAD PUSH2 0xA1E PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST GT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 DUP2 PUSH1 0x9 SLOAD PUSH2 0x128D JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF684D89BB0F42287BF32838774E4B7F8A60C11804B3C6D1791FA55F306792643 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAD6 PUSH2 0x1234 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xB77 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0xBBF81E00 DUP3 PUSH1 0xA SLOAD DUP6 PUSH0 ADD SLOAD PUSH2 0xB91 SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH0 ADD SLOAD PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP PUSH2 0xBC3 CALLER DUP4 PUSH2 0x128D JUMP JUMPDEST PUSH2 0xBD1 ADDRESS CALLER DUP7 PUSH0 ADD SLOAD PUSH2 0xF7B JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9845E367B683334E5C0B12D7B81721AC518E649376FA65E3D68324E8F34F2679 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0xC8B PUSH2 0x1283 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC97 PUSH2 0xECF JUMP JUMPDEST SWAP1 POP PUSH2 0xCA4 DUP2 DUP6 DUP6 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xCDB PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH2 0xD15 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST GT ISZERO PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6A DUP5 DUP3 PUSH2 0x128D JUMP JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x10EA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC6 DUP2 PUSH2 0x1171 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEE3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x130C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEF3 DUP5 DUP5 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF75 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF66 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x130C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE2 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1052 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1066 DUP4 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E6 DUP3 PUSH0 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0xECF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1110 PUSH2 0x900 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116F JUMPI PUSH2 0x1133 PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1270 SWAP1 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1308 PUSH0 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14D5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x152B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15F9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x15B4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1640 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x168A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1736 DUP3 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x1740 DUP2 DUP6 PUSH2 0x16FE JUMP JUMPDEST SWAP4 POP PUSH2 0x1750 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x170E JUMP JUMPDEST PUSH2 0x1759 DUP2 PUSH2 0x171C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 DUP5 PUSH2 0x172C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B1 DUP3 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C1 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x17CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17DC DUP2 PUSH2 0x17B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x17E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180F DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182B JUMPI PUSH2 0x182A PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1838 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1849 DUP6 DUP3 DUP7 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1867 DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1880 PUSH0 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x188F DUP2 PUSH2 0x17E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D2 DUP7 DUP3 DUP8 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18E3 DUP7 DUP3 DUP8 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18F4 DUP7 DUP3 DUP8 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x18FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192C PUSH0 DUP4 ADD DUP5 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1946 PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1954 DUP5 DUP3 DUP6 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197F DUP5 DUP3 DUP6 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AA PUSH0 DUP4 ADD DUP5 PUSH2 0x1988 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19C3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x19D0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x19DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x185E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x1784 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A08 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A19 DUP6 DUP3 DUP7 ADD PUSH2 0x17CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A67 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x1A23 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AB7 DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC2 DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6F206561726C7920666F722068616C76696E670000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 PUSH1 0x15 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B7F DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8A DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B9A JUMPI PUSH2 0x1B99 PUSH2 0x1B48 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD9 PUSH1 0x12 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP3 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C06 DUP2 PUSH2 0x1BCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 PUSH1 0x1F DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4C DUP3 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6E DUP2 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820737570706C7920726561636865640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA9 PUSH1 0x12 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP3 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73207374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D11 PUSH1 0x10 DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1C DUP3 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3E DUP2 PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4F DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5A DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D72 JUMPI PUSH2 0x1D71 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8D DUP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D9B DUP2 PUSH2 0x17E2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DCC PUSH0 DUP4 ADD DUP7 PUSH2 0x1988 JUMP JUMPDEST PUSH2 0x1DD9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E22 PUSH1 0x1F DUP4 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2D DUP3 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E4F DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC6 DUP9 COINBASE 0x2A 0x4C 0xD7 0x2C DUP5 TSTORE DIV 0xE6 0x2F ADD PC 0xC4 MLOAD LOG0 0xA6 SWAP11 PUSH32 0x55A56AFB5A6DAE1517F00E64736F6C6343000819003300000000000000000000 ",
							"sourceMap": "314:3185:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;570:30:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1775:210:8;;;:::i;:::-;;797:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;433:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3364:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1997:398:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;749:41:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1509:254:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;479:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2407:625;;;:::i;:::-;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:34:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3044:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;512:51:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;570:30:8:-;;;;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1775:210:8:-;1531:13:0;:11;:13::i;:::-;1869::8::1;;1855:11;;:27;;;;:::i;:::-;1836:15;:46;;1828:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:1;1919:13;;:18;;;;;;;:::i;:::-;;;;;;;;1962:15;1948:11;:29;;;;1775:210::o:0;797:50::-;;;;;;;;;;;;;;;;;:::o;433:39::-;;;;:::o;3364:132::-;1531:13:0;:11;:13::i;:::-;3430:22:8::1;3436:7;:5;:7::i;:::-;3445:6;3430:5;:22::i;:::-;3468:20;3481:6;3468:20;;;;;;:::i;:::-;;;;;;;;3364:132:::0;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1997:398:8:-;2261:21:2;:19;:21::i;:::-;2100:6:8::1;2075:21;2085:10;2075:9;:21::i;:::-;:31;;2067:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2157:1;2148:6;:10;2140:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2215:44;2225:10;2245:4;2252:6;2215:9;:44::i;:::-;2292:37;;;;;;;;2299:6;2292:37;;;;2307:15;2292:37;;;;2324:4;2292:37;;;;::::0;2270:7:::1;:19;2278:10;2270:19;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2368:10;2355:32;;;2380:6;2355:32;;;;;;:::i;:::-;;;;;;;;2303:20:2::0;:18;:20::i;:::-;1997:398:8;:::o;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;749:41:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1509:254:8:-;1531:13:0;:11;:13::i;:::-;1630:9:8::1;1613:13;;1597;:11;:13::i;:::-;:29;;;;:::i;:::-;:42;;1589:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1673:29;1679:7;1688:13;;1673:5;:29::i;:::-;1732:7;1718:37;;;1741:13;;1718:37;;;;;;:::i;:::-;;;;;;;;1509:254:::0;:::o;479:26::-;;;;:::o;2407:625::-;2261:21:2;:19;:21::i;:::-;2465::8::1;2489:7;:19;2497:10;2489:19;;;;;;;;;;;;;;;2465:43;;2527:6;:16;;;;;;;;;;;;2519:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2585:16;2622:6;:23;;;2604:15;:41;;;;:::i;:::-;2585:60;;2656:14;2722;2709:8;2696:10;;2674:6;:19;;;:32;;;;:::i;:::-;:43;;;;:::i;:::-;2673:64;;;;:::i;:::-;2656:81;;2748:19;2792:6;2770;:19;;;:28;;;;:::i;:::-;2748:50;;2819:25;2825:10;2837:6;2819:5;:25::i;:::-;2855:57;2873:4;2880:10;2892:6;:19;;;2855:9;:57::i;:::-;2940:7;:19;2948:10;2940:19;;;;;;;;;;;;;;;;2933:26:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3000:10;2985:39;;;3012:11;2985:39;;;;;;:::i;:::-;;;;;;;;2454:578;;;;2303:20:2::0;:18;:20::i;:::-;2407:625:8:o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;392:34:8:-;;;:::o;3044:308::-;1531:13:0;:11;:13::i;:::-;3149:14:8::1;3175:2;3166:6;:11;;;;:::i;:::-;3149:28;;3222:9;3212:6;3196:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;;3188:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3275:23;3281:8;3291:6;3275:5;:23::i;:::-;3338:6;3309:15;:25;3325:8;3309:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;3138:214;3044:308:::0;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;512:51:8:-;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:430::-;5911:4;5949:2;5938:9;5934:18;5926:26;;5962:71;6030:1;6019:9;6015:17;6006:6;5962:71;:::i;:::-;6043:72;6111:2;6100:9;6096:18;6087:6;6043:72;:::i;:::-;6125:66;6187:2;6176:9;6172:18;6163:6;6125:66;:::i;:::-;5768:430;;;;;;:::o;6204:474::-;6272:6;6280;6329:2;6317:9;6308:7;6304:23;6300:32;6297:119;;;6335:79;;:::i;:::-;6297:119;6455:1;6480:53;6525:7;6516:6;6505:9;6501:22;6480:53;:::i;:::-;6470:63;;6426:117;6582:2;6608:53;6653:7;6644:6;6633:9;6629:22;6608:53;:::i;:::-;6598:63;;6553:118;6204:474;;;;;:::o;6684:180::-;6732:77;6729:1;6722:88;6829:4;6826:1;6819:15;6853:4;6850:1;6843:15;6870:320;6914:6;6951:1;6945:4;6941:12;6931:22;;6998:1;6992:4;6988:12;7019:18;7009:81;;7075:4;7067:6;7063:17;7053:27;;7009:81;7137:2;7129:6;7126:14;7106:18;7103:38;7100:84;;7156:18;;:::i;:::-;7100:84;6921:269;6870:320;;;:::o;7196:180::-;7244:77;7241:1;7234:88;7341:4;7338:1;7331:15;7365:4;7362:1;7355:15;7382:191;7422:3;7441:20;7459:1;7441:20;:::i;:::-;7436:25;;7475:20;7493:1;7475:20;:::i;:::-;7470:25;;7518:1;7515;7511:9;7504:16;;7539:3;7536:1;7533:10;7530:36;;;7546:18;;:::i;:::-;7530:36;7382:191;;;;:::o;7579:171::-;7719:23;7715:1;7707:6;7703:14;7696:47;7579:171;:::o;7756:366::-;7898:3;7919:67;7983:2;7978:3;7919:67;:::i;:::-;7912:74;;7995:93;8084:3;7995:93;:::i;:::-;8113:2;8108:3;8104:12;8097:19;;7756:366;;;:::o;8128:419::-;8294:4;8332:2;8321:9;8317:18;8309:26;;8381:9;8375:4;8371:20;8367:1;8356:9;8352:17;8345:47;8409:131;8535:4;8409:131;:::i;:::-;8401:139;;8128:419;;;:::o;8553:180::-;8601:77;8598:1;8591:88;8698:4;8695:1;8688:15;8722:4;8719:1;8712:15;8739:185;8779:1;8796:20;8814:1;8796:20;:::i;:::-;8791:25;;8830:20;8848:1;8830:20;:::i;:::-;8825:25;;8869:1;8859:35;;8874:18;;:::i;:::-;8859:35;8916:1;8913;8909:9;8904:14;;8739:185;;;;:::o;8930:168::-;9070:20;9066:1;9058:6;9054:14;9047:44;8930:168;:::o;9104:366::-;9246:3;9267:67;9331:2;9326:3;9267:67;:::i;:::-;9260:74;;9343:93;9432:3;9343:93;:::i;:::-;9461:2;9456:3;9452:12;9445:19;;9104:366;;;:::o;9476:419::-;9642:4;9680:2;9669:9;9665:18;9657:26;;9729:9;9723:4;9719:20;9715:1;9704:9;9700:17;9693:47;9757:131;9883:4;9757:131;:::i;:::-;9749:139;;9476:419;;;:::o;9901:181::-;10041:33;10037:1;10029:6;10025:14;10018:57;9901:181;:::o;10088:366::-;10230:3;10251:67;10315:2;10310:3;10251:67;:::i;:::-;10244:74;;10327:93;10416:3;10327:93;:::i;:::-;10445:2;10440:3;10436:12;10429:19;;10088:366;;;:::o;10460:419::-;10626:4;10664:2;10653:9;10649:18;10641:26;;10713:9;10707:4;10703:20;10699:1;10688:9;10684:17;10677:47;10741:131;10867:4;10741:131;:::i;:::-;10733:139;;10460:419;;;:::o;10885:168::-;11025:20;11021:1;11013:6;11009:14;11002:44;10885:168;:::o;11059:366::-;11201:3;11222:67;11286:2;11281:3;11222:67;:::i;:::-;11215:74;;11298:93;11387:3;11298:93;:::i;:::-;11416:2;11411:3;11407:12;11400:19;;11059:366;;;:::o;11431:419::-;11597:4;11635:2;11624:9;11620:18;11612:26;;11684:9;11678:4;11674:20;11670:1;11659:9;11655:17;11648:47;11712:131;11838:4;11712:131;:::i;:::-;11704:139;;11431:419;;;:::o;11856:166::-;11996:18;11992:1;11984:6;11980:14;11973:42;11856:166;:::o;12028:366::-;12170:3;12191:67;12255:2;12250:3;12191:67;:::i;:::-;12184:74;;12267:93;12356:3;12267:93;:::i;:::-;12385:2;12380:3;12376:12;12369:19;;12028:366;;;:::o;12400:419::-;12566:4;12604:2;12593:9;12589:18;12581:26;;12653:9;12647:4;12643:20;12639:1;12628:9;12624:17;12617:47;12681:131;12807:4;12681:131;:::i;:::-;12673:139;;12400:419;;;:::o;12825:194::-;12865:4;12885:20;12903:1;12885:20;:::i;:::-;12880:25;;12919:20;12937:1;12919:20;:::i;:::-;12914:25;;12963:1;12960;12956:9;12948:17;;12987:1;12981:4;12978:11;12975:37;;;12992:18;;:::i;:::-;12975:37;12825:194;;;;:::o;13025:410::-;13065:7;13088:20;13106:1;13088:20;:::i;:::-;13083:25;;13122:20;13140:1;13122:20;:::i;:::-;13117:25;;13177:1;13174;13170:9;13199:30;13217:11;13199:30;:::i;:::-;13188:41;;13378:1;13369:7;13365:15;13362:1;13359:22;13339:1;13332:9;13312:83;13289:139;;13408:18;;:::i;:::-;13289:139;13073:362;13025:410;;;;:::o;13441:442::-;13590:4;13628:2;13617:9;13613:18;13605:26;;13641:71;13709:1;13698:9;13694:17;13685:6;13641:71;:::i;:::-;13722:72;13790:2;13779:9;13775:18;13766:6;13722:72;:::i;:::-;13804;13872:2;13861:9;13857:18;13848:6;13804:72;:::i;:::-;13441:442;;;;;;:::o;13889:181::-;14029:33;14025:1;14017:6;14013:14;14006:57;13889:181;:::o;14076:366::-;14218:3;14239:67;14303:2;14298:3;14239:67;:::i;:::-;14232:74;;14315:93;14404:3;14315:93;:::i;:::-;14433:2;14428:3;14424:12;14417:19;;14076:366;;;:::o;14448:419::-;14614:4;14652:2;14641:9;14637:18;14629:26;;14701:9;14695:4;14691:20;14687:1;14676:9;14672:17;14665:47;14729:131;14855:4;14729:131;:::i;:::-;14721:139;;14448:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1564000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"burnTokens(uint256)": "infinite",
								"decimals()": "472",
								"halveReward()": "infinite",
								"halvingPeriod()": "2470",
								"lastHalving()": "2536",
								"maxSupply()": "infinite",
								"name()": "infinite",
								"owner()": "2605",
								"referralRewards(address)": "2892",
								"renounceOwnership()": "infinite",
								"rewardForTaskCompletion(address)": "infinite",
								"rewardPerTask()": "2535",
								"rewardReferral(address,address,uint256)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakers(address)": "infinite",
								"stakingAPY()": "2493",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unstakeTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 464,
									"end": 472,
									"name": "PUSH",
									"source": 8,
									"value": "1E13380"
								},
								{
									"begin": 433,
									"end": 472,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 433,
									"end": 472,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 553,
									"end": 563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 561,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 553,
									"end": 561,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 553,
									"end": 561,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 553,
									"end": 563,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 553,
									"end": 563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 553,
									"end": 563,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 549,
									"end": 563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 549,
									"end": 563,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 549,
									"end": 563,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 549,
									"end": 563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 549,
									"end": 563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 549,
									"end": 563,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 549,
									"end": 563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 543,
									"end": 546,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 543,
									"end": 563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 543,
									"end": 563,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 543,
									"end": 563,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 543,
									"end": 563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 543,
									"end": 563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 543,
									"end": 563,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 543,
									"end": 563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 512,
									"end": 563,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 512,
									"end": 563,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 598,
									"end": 600,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 570,
									"end": 600,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 570,
									"end": 600,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1497,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1288,
									"end": 1298,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "456454656368546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "4544540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1345,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1345,
									"end": 1353,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1345,
									"end": 1353,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1345,
									"end": 1353,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1345,
									"end": 1355,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1355,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1355,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1345,
									"end": 1355,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1343,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1341,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1341,
									"end": 1355,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1355,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1341,
									"end": 1355,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1355,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1341,
									"end": 1355,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1338,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "5F5E100"
								},
								{
									"begin": 1329,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1329,
									"end": 1355,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1355,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1329,
									"end": 1355,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1355,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1329,
									"end": 1355,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1317,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1317,
									"end": 1355,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1317,
									"end": 1355,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1317,
									"end": 1355,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1317,
									"end": 1355,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1317,
									"end": 1355,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1421,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1394,
									"end": 1404,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1406,
									"end": 1415,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1406,
									"end": 1415,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1406,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1406,
									"end": 1420,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1406,
									"end": 1420,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1406,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1406,
									"end": 1420,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1406,
									"end": 1420,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1406,
									"end": 1420,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1393,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1388,
									"end": 1393,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 1393,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1421,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 1421,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1421,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1421,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1388,
									"end": 1421,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1489,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1460,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1489,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 193,
									"end": 295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 556,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1101,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 301,
									"end": 1149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1666,
									"end": 1684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1757,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2012,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2085,
									"end": 2127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2168,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2352,
									"end": 2359,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2381,
									"end": 2397,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2317,
									"end": 2403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2472,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2491,
									"end": 2514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 2551,
									"end": 2559,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2535,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 2616,
									"end": 2682,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2614,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2600,
									"end": 2604,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2579,
									"end": 2683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2736,
									"end": 2743,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 2777,
									"end": 2778,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2759,
									"end": 2779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 2811,
									"end": 2812,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2793,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2845,
									"end": 2846,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2841,
									"end": 2850,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2870,
									"end": 2900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3040,
									"end": 3047,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3030,
									"end": 3052,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3003,
									"end": 3012,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2983,
									"end": 3066,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 3079,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2744,
									"end": 3106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 3106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3170,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3198,
									"end": 3203,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3192,
									"end": 3204,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3182,
									"end": 3204,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3182,
									"end": 3204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3112,
									"end": 3211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3112,
									"end": 3211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3397,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3217,
									"end": 3397,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3265,
									"end": 3342,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3262,
									"end": 3263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3255,
									"end": 3343,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3362,
									"end": 3366,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3359,
									"end": 3360,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3352,
									"end": 3367,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3386,
									"end": 3390,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3383,
									"end": 3384,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3376,
									"end": 3391,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3403,
									"end": 3583,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3403,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3451,
									"end": 3528,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3448,
									"end": 3449,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3441,
									"end": 3529,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3548,
									"end": 3552,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3545,
									"end": 3546,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3538,
									"end": 3553,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3576,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3569,
									"end": 3570,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3562,
									"end": 3577,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3664,
									"end": 3668,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3660,
									"end": 3672,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3717,
									"end": 3718,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3715,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3707,
									"end": 3719,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3738,
									"end": 3756,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3794,
									"end": 3798,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3782,
									"end": 3799,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3772,
									"end": 3799,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3772,
									"end": 3799,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 3728,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3858,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3848,
									"end": 3854,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3845,
									"end": 3859,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3825,
									"end": 3843,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3822,
									"end": 3860,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3875,
									"end": 3893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 3875,
									"end": 3893,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 3819,
									"end": 3903,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3640,
									"end": 3909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3589,
									"end": 3909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3589,
									"end": 3909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3964,
									"end": 3968,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3987,
									"end": 3990,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3979,
									"end": 3990,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3979,
									"end": 3990,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4013,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4008,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4000,
									"end": 4014,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4044,
									"end": 4048,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4041,
									"end": 4042,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4031,
									"end": 4049,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4023,
									"end": 4049,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4023,
									"end": 4049,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 4056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3915,
									"end": 4056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4099,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4146,
									"end": 4148,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4141,
									"end": 4143,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4139,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4130,
									"end": 4144,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4149,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4116,
									"end": 4149,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4116,
									"end": 4149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4205,
									"end": 4213,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4245,
									"end": 4261,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4224,
									"end": 4261,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4224,
									"end": 4261,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4268,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4343,
									"end": 4349,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4393,
									"end": 4394,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4381,
									"end": 4391,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4446,
									"end": 4512,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4435,
									"end": 4444,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4416,
									"end": 4513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 4416,
									"end": 4513,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4564,
									"end": 4572,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4553,
									"end": 4562,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4534,
									"end": 4573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 4534,
									"end": 4573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4522,
									"end": 4573,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4522,
									"end": 4573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4606,
									"end": 4610,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4602,
									"end": 4611,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4595,
									"end": 4600,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4591,
									"end": 4612,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4582,
									"end": 4612,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4582,
									"end": 4612,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4655,
									"end": 4659,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4645,
									"end": 4653,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4641,
									"end": 4660,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4634,
									"end": 4639,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4661,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4661,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4661,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4350,
									"end": 4667,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4350,
									"end": 4667,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4274,
									"end": 4667,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4274,
									"end": 4667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4701,
									"end": 4704,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4722,
									"end": 4727,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4727,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4727,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4733,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4789,
									"end": 4798,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 4867,
									"end": 4872,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 4849,
									"end": 4873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 4849,
									"end": 4873,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 4840,
									"end": 4874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 4840,
									"end": 4874,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 4822,
									"end": 4875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 4822,
									"end": 4875,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4875,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4875,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4739,
									"end": 4881,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4739,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4930,
									"end": 4933,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4951,
									"end": 4956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4956,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4956,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4962,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5109,
									"end": 5116,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 5078,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5078,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 5212,
									"end": 5228,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5188,
									"end": 5229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 5188,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5180,
									"end": 5186,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5173,
									"end": 5177,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5167,
									"end": 5178,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5139,
									"end": 5230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5139,
									"end": 5230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5133,
									"end": 5137,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5126,
									"end": 5231,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5044,
									"end": 5237,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4968,
									"end": 5237,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4968,
									"end": 5237,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5243,
									"end": 5316,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5243,
									"end": 5316,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5288,
									"end": 5291,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5243,
									"end": 5316,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5243,
									"end": 5316,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5399,
									"end": 5431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 5399,
									"end": 5431,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5498,
									"end": 5504,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5490,
									"end": 5496,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5484,
									"end": 5488,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 5440,
									"end": 5505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5440,
									"end": 5505,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5375,
									"end": 5511,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5322,
									"end": 5511,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5322,
									"end": 5511,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5594,
									"end": 5597,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5587,
									"end": 5592,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5584,
									"end": 5598,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 5685,
									"end": 5686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5678,
									"end": 5683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 5648,
									"end": 5687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 5648,
									"end": 5687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5621,
									"end": 5622,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5614,
									"end": 5619,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5610,
									"end": 5623,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 5577,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5517,
									"end": 5703,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5517,
									"end": 5703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5810,
									"end": 5812,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5805,
									"end": 5808,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5802,
									"end": 5813,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 5876,
									"end": 5881,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 5844,
									"end": 5882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 5844,
									"end": 5882,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5946,
									"end": 5956,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5928,
									"end": 5957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 5928,
									"end": 5957,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5918,
									"end": 5926,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5914,
									"end": 5958,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6111,
									"end": 6113,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6099,
									"end": 6109,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6114,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6117,
									"end": 6140,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6117,
									"end": 6140,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 6093,
									"end": 6142,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 6229,
									"end": 6232,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 6211,
									"end": 6233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 6211,
									"end": 6233,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6201,
									"end": 6209,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6197,
									"end": 6234,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6184,
									"end": 6195,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 6155,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 6155,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5814,
									"end": 6245,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5814,
									"end": 6245,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 5799,
									"end": 6245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5709,
									"end": 6252,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5709,
									"end": 6252,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6312,
									"end": 6320,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6362,
									"end": 6367,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6356,
									"end": 6360,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6352,
									"end": 6368,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6368,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6368,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6258,
									"end": 6375,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6258,
									"end": 6375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6425,
									"end": 6431,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 6506,
									"end": 6507,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6502,
									"end": 6508,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6494,
									"end": 6499,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6491,
									"end": 6492,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 6487,
									"end": 6500,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6458,
									"end": 6509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 6458,
									"end": 6509,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6454,
									"end": 6510,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6539,
									"end": 6543,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6533,
									"end": 6537,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6529,
									"end": 6544,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6519,
									"end": 6544,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6519,
									"end": 6544,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6432,
									"end": 6550,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6381,
									"end": 6550,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6381,
									"end": 6550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6631,
									"end": 6635,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 6802,
									"end": 6805,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6796,
									"end": 6800,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6777,
									"end": 6806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 6777,
									"end": 6806,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 6806,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6769,
									"end": 6806,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6839,
									"end": 6842,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6836,
									"end": 6837,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6832,
									"end": 6843,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6826,
									"end": 6830,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6823,
									"end": 6844,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6844,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6844,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6555,
									"end": 6850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 7005,
									"end": 7008,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 6972,
									"end": 7009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 6972,
									"end": 7009,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7074,
									"end": 7092,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7066,
									"end": 7072,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7063,
									"end": 7093,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 7096,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7096,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7060,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7172,
									"end": 7176,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7166,
									"end": 7177,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 7140,
									"end": 7178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 7140,
									"end": 7178,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7285,
									"end": 7291,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7277,
									"end": 7283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7271,
									"end": 7275,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 7225,
									"end": 7292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 7225,
									"end": 7292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7319,
									"end": 7320,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7343,
									"end": 7347,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7330,
									"end": 7347,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7330,
									"end": 7347,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7375,
									"end": 7377,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7367,
									"end": 7373,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7364,
									"end": 7378,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7392,
									"end": 7393,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8049,
									"end": 8050,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8066,
									"end": 8072,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8115,
									"end": 8124,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8110,
									"end": 8113,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8106,
									"end": 8125,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8100,
									"end": 8126,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8091,
									"end": 8126,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8091,
									"end": 8126,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 8063,
									"end": 8140,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 8226,
									"end": 8232,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8219,
									"end": 8224,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 8166,
									"end": 8233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 8166,
									"end": 8233,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8160,
									"end": 8164,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8153,
									"end": 8234,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8022,
									"end": 8244,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 7387,
									"end": 8005,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7439,
									"end": 7443,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7435,
									"end": 7444,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7427,
									"end": 7433,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7423,
									"end": 7445,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7505,
									"end": 7509,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 7473,
									"end": 7510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7473,
									"end": 7510,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7532,
									"end": 7533,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7560,
									"end": 7567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7557,
									"end": 7558,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7554,
									"end": 7568,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7639,
									"end": 7648,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7634,
									"end": 7637,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7630,
									"end": 7649,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7624,
									"end": 7650,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7616,
									"end": 7622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7609,
									"end": 7651,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7690,
									"end": 7691,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7682,
									"end": 7688,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 7692,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7668,
									"end": 7692,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7668,
									"end": 7692,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7737,
									"end": 7739,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7726,
									"end": 7735,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7722,
									"end": 7740,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7709,
									"end": 7740,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7709,
									"end": 7740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7583,
									"end": 7587,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7580,
									"end": 7581,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7576,
									"end": 7588,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7571,
									"end": 7588,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7571,
									"end": 7588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 7546,
									"end": 7754,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7782,
									"end": 7788,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7773,
									"end": 7780,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7770,
									"end": 7789,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7840,
									"end": 7849,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7835,
									"end": 7838,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7831,
									"end": 7850,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7825,
									"end": 7851,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 7925,
									"end": 7929,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7917,
									"end": 7923,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7913,
									"end": 7930,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7902,
									"end": 7911,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 7883,
									"end": 7931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 7883,
									"end": 7931,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 7881,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7868,
									"end": 7932,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7790,
									"end": 7946,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 7767,
									"end": 7946,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7988,
									"end": 7989,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7980,
									"end": 7986,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 7976,
									"end": 7990,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7972,
									"end": 7994,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7966,
									"end": 7970,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 7959,
									"end": 7995,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7394,
									"end": 8005,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7394,
									"end": 8005,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7394,
									"end": 8005,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7357,
									"end": 8244,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6947,
									"end": 8250,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6947,
									"end": 8250,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6947,
									"end": 8250,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6855,
									"end": 8250,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6855,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8333,
									"end": 8375,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8326,
									"end": 8331,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8322,
									"end": 8376,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8256,
									"end": 8382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8425,
									"end": 8432,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 8472,
									"end": 8477,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 8454,
									"end": 8478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8388,
									"end": 8484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8595,
									"end": 8600,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 8577,
									"end": 8601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "tag",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8572,
									"end": 8575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8565,
									"end": 8602,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8490,
									"end": 8608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8707,
									"end": 8711,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8745,
									"end": 8747,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8734,
									"end": 8743,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8824,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8811,
									"end": 8828,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8802,
									"end": 8808,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 8758,
									"end": 8829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8614,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8842,
									"end": 9022,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 8842,
									"end": 9022,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8890,
									"end": 8967,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8887,
									"end": 8888,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8880,
									"end": 8968,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8987,
									"end": 8991,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 8984,
									"end": 8985,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 8977,
									"end": 8992,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9011,
									"end": 9015,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 9008,
									"end": 9009,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9001,
									"end": 9016,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 9028,
									"end": 9213,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 9028,
									"end": 9213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9068,
									"end": 9069,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9085,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 9103,
									"end": 9104,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9085,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 9085,
									"end": 9105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9085,
									"end": 9105,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 9085,
									"end": 9105,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9080,
									"end": 9105,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9080,
									"end": 9105,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9137,
									"end": 9138,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 9119,
									"end": 9139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 9119,
									"end": 9139,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9114,
									"end": 9139,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9114,
									"end": 9139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9158,
									"end": 9159,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9148,
									"end": 9183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9148,
									"end": 9183,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9163,
									"end": 9181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 9163,
									"end": 9181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 9163,
									"end": 9181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9163,
									"end": 9181,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 9163,
									"end": 9181,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9148,
									"end": 9183,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 9148,
									"end": 9183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9205,
									"end": 9206,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9202,
									"end": 9203,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9198,
									"end": 9207,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 9193,
									"end": 9207,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9193,
									"end": 9207,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9028,
									"end": 9213,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9028,
									"end": 9213,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9028,
									"end": 9213,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9028,
									"end": 9213,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9028,
									"end": 9213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9219,
									"end": 9410,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 9219,
									"end": 9410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9259,
									"end": 9262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9278,
									"end": 9298,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9296,
									"end": 9297,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9278,
									"end": 9298,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 9278,
									"end": 9298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9278,
									"end": 9298,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 9278,
									"end": 9298,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9273,
									"end": 9298,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9273,
									"end": 9298,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9312,
									"end": 9332,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9330,
									"end": 9331,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9312,
									"end": 9332,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 9312,
									"end": 9332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9312,
									"end": 9332,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 9312,
									"end": 9332,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9307,
									"end": 9332,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9307,
									"end": 9332,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9355,
									"end": 9356,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9352,
									"end": 9353,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9348,
									"end": 9357,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9341,
									"end": 9357,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9341,
									"end": 9357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9376,
									"end": 9379,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 9373,
									"end": 9374,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9370,
									"end": 9380,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9367,
									"end": 9403,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9367,
									"end": 9403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9367,
									"end": 9403,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9383,
									"end": 9401,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9383,
									"end": 9401,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 9383,
									"end": 9401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9383,
									"end": 9401,
									"name": "tag",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 9383,
									"end": 9401,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9367,
									"end": 9403,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 9367,
									"end": 9403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9219,
									"end": 9410,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9219,
									"end": 9410,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9219,
									"end": 9410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9219,
									"end": 9410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9219,
									"end": 9410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9416,
									"end": 9534,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 9416,
									"end": 9534,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9503,
									"end": 9527,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9521,
									"end": 9526,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9503,
									"end": 9527,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 9503,
									"end": 9527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9503,
									"end": 9527,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9503,
									"end": 9527,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9498,
									"end": 9501,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9491,
									"end": 9528,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9416,
									"end": 9534,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9416,
									"end": 9534,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9416,
									"end": 9534,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9689,
									"end": 9693,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9727,
									"end": 9729,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 9716,
									"end": 9725,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9712,
									"end": 9730,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9704,
									"end": 9730,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9704,
									"end": 9730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9740,
									"end": 9811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 9808,
									"end": 9809,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9797,
									"end": 9806,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9793,
									"end": 9810,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9784,
									"end": 9790,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9740,
									"end": 9811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 9740,
									"end": 9811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9740,
									"end": 9811,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 9740,
									"end": 9811,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9821,
									"end": 9893,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9889,
									"end": 9891,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9878,
									"end": 9887,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9874,
									"end": 9892,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9865,
									"end": 9871,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9821,
									"end": 9893,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 9821,
									"end": 9893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9821,
									"end": 9893,
									"name": "tag",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9821,
									"end": 9893,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9903,
									"end": 9975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 9971,
									"end": 9973,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 9960,
									"end": 9969,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9956,
									"end": 9974,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9947,
									"end": 9953,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9903,
									"end": 9975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 9903,
									"end": 9975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9903,
									"end": 9975,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 9903,
									"end": 9975,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9988,
									"end": 10210,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 9988,
									"end": 10210,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10081,
									"end": 10085,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10119,
									"end": 10121,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10108,
									"end": 10117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10104,
									"end": 10122,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10096,
									"end": 10122,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10096,
									"end": 10122,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10132,
									"end": 10203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 10200,
									"end": 10201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10189,
									"end": 10198,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10185,
									"end": 10202,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10176,
									"end": 10182,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10132,
									"end": 10203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 10132,
									"end": 10203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10132,
									"end": 10203,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 10132,
									"end": 10203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9988,
									"end": 10210,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9988,
									"end": 10210,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9988,
									"end": 10210,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9988,
									"end": 10210,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9988,
									"end": 10210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1060"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 3499,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1c688412a4cd72c845d04e62f0158c451a0a69a7f55a56afb5a6dae1517f00e64736f6c63430008190033",
									".code": [
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "7547C7A3"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "A5CE413B"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "DB6E62CD"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "DB6E62CD"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "F651ED5E"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "A5CE413B"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "D5ABEB01"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "9168AE72"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "9168AE72"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "99CAF010"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "9A1E1915"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "7547C7A3"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "5A3E251F"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "5A3E251F"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "6D1B229D"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "4F3AD328"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "53AAA63B"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "1531B62A"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 3499,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 570,
											"end": 600,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 570,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 570,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1775,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 797,
											"end": 847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 797,
											"end": 847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 433,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 433,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3364,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3364,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1997,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1997,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 749,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 749,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 749,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 749,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1509,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1509,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 479,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 479,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2407,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 392,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 392,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 392,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3044,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3044,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 563,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 512,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 512,
											"end": 563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 600,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 570,
											"end": 600,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 570,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1775,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1869,
											"end": 1882,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1855,
											"end": 1866,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1855,
											"end": 1882,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1855,
											"end": 1882,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1855,
											"end": 1882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1851,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1882,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1882,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1828,
											"end": 1908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1828,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1919,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1919,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1919,
											"end": 1937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1977,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1948,
											"end": 1977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1977,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3436,
											"end": 3443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3436,
											"end": 3441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3436,
											"end": 3443,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3436,
											"end": 3443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3430,
											"end": 3435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 3430,
											"end": 3452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3430,
											"end": 3452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3430,
											"end": 3452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6EF4855B666DCC7884561072E4358B28DFE01FEB1B7F4DCEBC00E62D50394AC7"
										},
										{
											"begin": 3481,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3468,
											"end": 3488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3488,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3364,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2085,
											"end": 2095,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2075,
											"end": 2096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2075,
											"end": 2096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2106,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2106,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2067,
											"end": 2129,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2067,
											"end": 2129,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2157,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2158,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2140,
											"end": 2194,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2140,
											"end": 2194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2225,
											"end": 2235,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2249,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2258,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2215,
											"end": 2259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2215,
											"end": 2259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2305,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2322,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2324,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2292,
											"end": 2329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2288,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2289,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2378,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF"
										},
										{
											"begin": 2380,
											"end": 2386,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2355,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2387,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 749,
											"end": 790,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 749,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1060"
										},
										{
											"begin": 1613,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1613,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1597,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1597,
											"end": 1610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1597,
											"end": 1610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1597,
											"end": 1626,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1639,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1639,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1589,
											"end": 1662,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1589,
											"end": 1662,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1679,
											"end": 1686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1673,
											"end": 1702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1673,
											"end": 1702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1732,
											"end": 1739,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F684D89BB0F42287BF32838774E4B7F8A60C11804B3C6D1791FA55F306792643"
										},
										{
											"begin": 1741,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1741,
											"end": 1754,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1718,
											"end": 1755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1755,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 479,
											"end": 505,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 479,
											"end": 505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2407,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2507,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2508,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2533,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2527,
											"end": 2543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2519,
											"end": 2564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2519,
											"end": 2564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2619,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2604,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2604,
											"end": 2645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2604,
											"end": 2645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2656,
											"end": 2670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "BBF81E00"
										},
										{
											"begin": 2709,
											"end": 2717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2696,
											"end": 2706,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2680,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2674,
											"end": 2706,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2674,
											"end": 2706,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2674,
											"end": 2706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2674,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2674,
											"end": 2717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2674,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2673,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2673,
											"end": 2737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2673,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2656,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2656,
											"end": 2737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2776,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2770,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2770,
											"end": 2798,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2770,
											"end": 2798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2825,
											"end": 2835,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 2843,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2819,
											"end": 2844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2819,
											"end": 2844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2855,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2873,
											"end": 2877,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 2890,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2898,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2855,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2855,
											"end": 2912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2855,
											"end": 2912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2855,
											"end": 2912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2958,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2940,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2959,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2959,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3010,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9845E367B683334E5C0B12D7B81721AC518E649376FA65E3D68324E8F34F2679"
										},
										{
											"begin": 3012,
											"end": 3023,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2985,
											"end": 3024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3024,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 3032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 3032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 3032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 3032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 3032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 392,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1060"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 392,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3166,
											"end": 3172,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3166,
											"end": 3177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3166,
											"end": 3177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3166,
											"end": 3177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1060"
										},
										{
											"begin": 3212,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3196,
											"end": 3207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3196,
											"end": 3209,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3209,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3196,
											"end": 3209,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3196,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3196,
											"end": 3218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3196,
											"end": 3218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3231,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3188,
											"end": 3254,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3188,
											"end": 3254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3281,
											"end": 3289,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3291,
											"end": 3297,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3275,
											"end": 3298,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3275,
											"end": 3298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3333,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3309,
											"end": 3344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 563,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 512,
											"end": 563,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 512,
											"end": 563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5911,
											"end": 5915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5951,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5938,
											"end": 5947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5962,
											"end": 6033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 6033,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 5962,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 6111,
											"end": 6113,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6100,
											"end": 6109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6043,
											"end": 6115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6115,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 6043,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 6187,
											"end": 6189,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6169,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 6125,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6191,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 6125,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6678,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6204,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6331,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6304,
											"end": 6327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6332,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6297,
											"end": 6416,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6297,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 6297,
											"end": 6416,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6335,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 6335,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6335,
											"end": 6414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6335,
											"end": 6414,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 6335,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6297,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 6297,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 6525,
											"end": 6532,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6505,
											"end": 6514,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6501,
											"end": 6523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6480,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6480,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6480,
											"end": 6533,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 6480,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6426,
											"end": 6543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6584,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6608,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6633,
											"end": 6642,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6608,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6661,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 6608,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6598,
											"end": 6661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6553,
											"end": 6671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6678,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6678,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6684,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6809,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6829,
											"end": 6833,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6826,
											"end": 6827,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6819,
											"end": 6834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6853,
											"end": 6857,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6850,
											"end": 6851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6858,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 7190,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 6870,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6914,
											"end": 6920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6945,
											"end": 6949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 6953,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6931,
											"end": 6953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6992,
											"end": 6996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7000,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 7009,
											"end": 7090,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7075,
											"end": 7079,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7063,
											"end": 7080,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7090,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 7009,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7129,
											"end": 7135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7126,
											"end": 7140,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7141,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 7100,
											"end": 7184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 7156,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7184,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 7100,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 7190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 7190,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 7190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 7190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 7190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7196,
											"end": 7376,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7196,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7321,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7341,
											"end": 7345,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7338,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7369,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7362,
											"end": 7363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7355,
											"end": 7370,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7573,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7382,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7422,
											"end": 7425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 7459,
											"end": 7460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7441,
											"end": 7461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 7493,
											"end": 7494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7475,
											"end": 7495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7495,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7518,
											"end": 7519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7504,
											"end": 7520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7536,
											"end": 7537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7543,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7566,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 7530,
											"end": 7566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7546,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7566,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 7530,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7573,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7579,
											"end": 7750,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7579,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7719,
											"end": 7742,
											"name": "PUSH",
											"source": 9,
											"value": "546F6F206561726C7920666F722068616C76696E670000000000000000000000"
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7579,
											"end": 7750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7579,
											"end": 7750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8122,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7756,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 7983,
											"end": 7985,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7978,
											"end": 7981,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7919,
											"end": 7986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 7986,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 7919,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7912,
											"end": 7986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7912,
											"end": 7986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 8084,
											"end": 8087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7995,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 7995,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8108,
											"end": 8111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8334,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8309,
											"end": 8335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8309,
											"end": 8335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8381,
											"end": 8390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8375,
											"end": 8379,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8367,
											"end": 8368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8365,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 8409,
											"end": 8540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 8409,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8128,
											"end": 8547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8128,
											"end": 8547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8553,
											"end": 8733,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 8553,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8601,
											"end": 8678,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8702,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8695,
											"end": 8696,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8688,
											"end": 8703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8722,
											"end": 8726,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8719,
											"end": 8720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8727,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8924,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 8739,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8796,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 8814,
											"end": 8815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 8796,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8816,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 8796,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8791,
											"end": 8816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8791,
											"end": 8816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 8830,
											"end": 8850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8850,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 8830,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8825,
											"end": 8850,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8825,
											"end": 8850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8859,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 8859,
											"end": 8894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 8874,
											"end": 8892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8859,
											"end": 8894,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 8859,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8913,
											"end": 8914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8918,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8924,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8924,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9070,
											"end": 9090,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F7420656E6F7567682062616C616E63650000000000000000000000000000"
										},
										{
											"begin": 9066,
											"end": 9067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9054,
											"end": 9068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9047,
											"end": 9091,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 9098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 9098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9470,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9104,
											"end": 9470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9246,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9267,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 9331,
											"end": 9333,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 9326,
											"end": 9329,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9267,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 9267,
											"end": 9334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9267,
											"end": 9334,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 9267,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 9432,
											"end": 9435,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9343,
											"end": 9436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9436,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 9343,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9461,
											"end": 9463,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9895,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9476,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9657,
											"end": 9683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9657,
											"end": 9683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9729,
											"end": 9738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9723,
											"end": 9727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9719,
											"end": 9739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9700,
											"end": 9717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9693,
											"end": 9740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 9883,
											"end": 9887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9757,
											"end": 9888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 9757,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10082,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 9901,
											"end": 10082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 10037,
											"end": 10038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10029,
											"end": 10035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10025,
											"end": 10039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10018,
											"end": 10075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 10082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10454,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 10088,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10230,
											"end": 10233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 10315,
											"end": 10317,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10310,
											"end": 10313,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 10251,
											"end": 10318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10318,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 10251,
											"end": 10318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10244,
											"end": 10318,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10244,
											"end": 10318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10327,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 10416,
											"end": 10419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10327,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 10327,
											"end": 10420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10327,
											"end": 10420,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 10327,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10445,
											"end": 10447,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10440,
											"end": 10443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10436,
											"end": 10448,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10454,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10879,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 10460,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10666,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10653,
											"end": 10662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10667,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 10667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 10667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10713,
											"end": 10722,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10707,
											"end": 10711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10703,
											"end": 10723,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10699,
											"end": 10700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10688,
											"end": 10697,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10684,
											"end": 10701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10677,
											"end": 10724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10741,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10741,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 10741,
											"end": 10872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10741,
											"end": 10872,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 10741,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10733,
											"end": 10872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10733,
											"end": 10872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10879,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10879,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10885,
											"end": 11053,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 10885,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11025,
											"end": 11045,
											"name": "PUSH",
											"source": 9,
											"value": "4D617820737570706C7920726561636865640000000000000000000000000000"
										},
										{
											"begin": 11021,
											"end": 11022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11009,
											"end": 11023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11002,
											"end": 11046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10885,
											"end": 11053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10885,
											"end": 11053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11425,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11059,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11286,
											"end": 11288,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11281,
											"end": 11284,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11222,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 11222,
											"end": 11289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11222,
											"end": 11289,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11222,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11215,
											"end": 11289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11215,
											"end": 11289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11298,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 11387,
											"end": 11390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11298,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 11298,
											"end": 11391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11298,
											"end": 11391,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 11298,
											"end": 11391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11418,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11411,
											"end": 11414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11407,
											"end": 11419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11400,
											"end": 11419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11400,
											"end": 11419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11850,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 11431,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11597,
											"end": 11601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11635,
											"end": 11637,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11624,
											"end": 11633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11678,
											"end": 11682,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 11694,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 11671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11668,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11655,
											"end": 11672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11648,
											"end": 11695,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 11838,
											"end": 11842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11712,
											"end": 11843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11843,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 11712,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 11843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 11843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11856,
											"end": 12022,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 11856,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20746F6B656E73207374616B656400000000000000000000000000000000"
										},
										{
											"begin": 11992,
											"end": 11993,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11984,
											"end": 11990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 11994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 12015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11856,
											"end": 12022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11856,
											"end": 12022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12028,
											"end": 12394,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 12028,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 12255,
											"end": 12257,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 12250,
											"end": 12253,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 12191,
											"end": 12258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12191,
											"end": 12258,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 12191,
											"end": 12258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12184,
											"end": 12258,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12184,
											"end": 12258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 12356,
											"end": 12359,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 12267,
											"end": 12360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12360,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 12267,
											"end": 12360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12380,
											"end": 12383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12028,
											"end": 12394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12028,
											"end": 12394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12028,
											"end": 12394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12028,
											"end": 12394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12819,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 12400,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12566,
											"end": 12570,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12604,
											"end": 12606,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12589,
											"end": 12607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12581,
											"end": 12607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12581,
											"end": 12607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12647,
											"end": 12651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12643,
											"end": 12663,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12628,
											"end": 12637,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12624,
											"end": 12641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12617,
											"end": 12664,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12681,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 12807,
											"end": 12811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12681,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 12681,
											"end": 12812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12681,
											"end": 12812,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 12681,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12673,
											"end": 12812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12673,
											"end": 12812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12819,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12819,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 13019,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12825,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12865,
											"end": 12869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12885,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 12903,
											"end": 12904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12885,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 12885,
											"end": 12905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12885,
											"end": 12905,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 12885,
											"end": 12905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 12905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 12905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12919,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 12937,
											"end": 12938,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12919,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 12919,
											"end": 12939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12919,
											"end": 12939,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 12919,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12914,
											"end": 12939,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12914,
											"end": 12939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12960,
											"end": 12961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12948,
											"end": 12965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12948,
											"end": 12965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12987,
											"end": 12988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12981,
											"end": 12985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12978,
											"end": 12989,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12992,
											"end": 13010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 13019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 13019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 13019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 13019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12825,
											"end": 13019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13435,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 13025,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 13106,
											"end": 13107,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13088,
											"end": 13108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 13088,
											"end": 13108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13088,
											"end": 13108,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 13088,
											"end": 13108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13083,
											"end": 13108,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13083,
											"end": 13108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13122,
											"end": 13142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 13140,
											"end": 13141,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13122,
											"end": 13142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 13122,
											"end": 13142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13122,
											"end": 13142,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 13122,
											"end": 13142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13142,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13177,
											"end": 13178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13174,
											"end": 13175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13170,
											"end": 13179,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13199,
											"end": 13229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 13217,
											"end": 13228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13199,
											"end": 13229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 13199,
											"end": 13229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13199,
											"end": 13229,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 13199,
											"end": 13229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13188,
											"end": 13229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13188,
											"end": 13229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13378,
											"end": 13379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13369,
											"end": 13376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13380,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13362,
											"end": 13363,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13381,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13339,
											"end": 13340,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13332,
											"end": 13341,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13312,
											"end": 13395,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 13289,
											"end": 13428,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13408,
											"end": 13426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 13408,
											"end": 13426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 13408,
											"end": 13426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13408,
											"end": 13426,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 13408,
											"end": 13426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13428,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 13289,
											"end": 13428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13435,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13590,
											"end": 13594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13628,
											"end": 13630,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13617,
											"end": 13626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13605,
											"end": 13631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13605,
											"end": 13631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13641,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 13709,
											"end": 13710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13694,
											"end": 13711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 13691,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13641,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 13641,
											"end": 13712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13641,
											"end": 13712,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 13641,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13722,
											"end": 13794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 13790,
											"end": 13792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13779,
											"end": 13788,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13775,
											"end": 13793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13766,
											"end": 13772,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13722,
											"end": 13794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 13722,
											"end": 13794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13722,
											"end": 13794,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 13722,
											"end": 13794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13804,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 13872,
											"end": 13874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13861,
											"end": 13870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13848,
											"end": 13854,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13804,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 13804,
											"end": 13876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13804,
											"end": 13876,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 13804,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13441,
											"end": 13883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13889,
											"end": 14070,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 13889,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14029,
											"end": 14062,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14025,
											"end": 14026,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14017,
											"end": 14023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14013,
											"end": 14027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14006,
											"end": 14063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13889,
											"end": 14070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13889,
											"end": 14070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14442,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 14076,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14218,
											"end": 14221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 14303,
											"end": 14305,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14298,
											"end": 14301,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14239,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 14239,
											"end": 14306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14239,
											"end": 14306,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 14239,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14232,
											"end": 14306,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14232,
											"end": 14306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14315,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 14404,
											"end": 14407,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14315,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 14315,
											"end": 14408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14315,
											"end": 14408,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 14315,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14433,
											"end": 14435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14428,
											"end": 14431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14424,
											"end": 14436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14417,
											"end": 14436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14417,
											"end": 14436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14442,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14867,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 14448,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14652,
											"end": 14654,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14641,
											"end": 14650,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14637,
											"end": 14655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14629,
											"end": 14655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14629,
											"end": 14655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14701,
											"end": 14710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14695,
											"end": 14699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14691,
											"end": 14711,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14687,
											"end": 14688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14676,
											"end": 14685,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14672,
											"end": 14689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 14712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14729,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 14855,
											"end": 14859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14729,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 14729,
											"end": 14860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14729,
											"end": 14860,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 14729,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14721,
											"end": 14860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14721,
											"end": 14860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14867,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/EdTechToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnTokens(uint256)": "6d1b229d",
							"decimals()": "313ce567",
							"halveReward()": "4f3ad328",
							"halvingPeriod()": "5a3e251f",
							"lastHalving()": "9a1e1915",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"referralRewards(address)": "53aaa63b",
							"renounceOwnership()": "715018a6",
							"rewardForTaskCompletion(address)": "99caf010",
							"rewardPerTask()": "f651ed5e",
							"rewardReferral(address,address,uint256)": "db6e62cd",
							"stakeTokens(uint256)": "7547c7a3",
							"stakers(address)": "9168ae72",
							"stakingAPY()": "1531b62a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unstakeTokens()": "a5ce413b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TaskCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halveReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halvingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHalving\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"}],\"name\":\"rewardForTaskCompletion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStaking\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EdTechToken.sol\":\"EdTechToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/EdTechToken.sol\":{\"keccak256\":\"0x3e796c076501a1678e247d079269bc90c4b884ba5747165205459c6e12018fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f60cfd5d19adaf05a8aa21fa505be9f6e5b8a0269ba19a079331da076dcba5e\",\"dweb:/ipfs/QmWoxebC9cqsqrR8MXsKDCCUoctr1agYsmbtLH9QoaAri8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1063,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "halvingPeriod",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1065,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "lastHalving",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1073,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "rewardPerTask",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1076,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "stakingAPY",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1088,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "stakers",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(Staker)1083_storage)"
							},
							{
								"astId": 1092,
								"contract": "contracts/EdTechToken.sol:EdTechToken",
								"label": "referralRewards",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Staker)1083_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct EdTechToken.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1083_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Staker)1083_storage": {
								"encoding": "inplace",
								"label": "struct EdTechToken.Staker",
								"members": [
									{
										"astId": 1078,
										"contract": "contracts/EdTechToken.sol:EdTechToken",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1080,
										"contract": "contracts/EdTechToken.sol:EdTechToken",
										"label": "stakingStartTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1082,
										"contract": "contracts/EdTechToken.sol:EdTechToken",
										"label": "isStaking",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/EdTechToken.sol:79:47:\n   |\n79 |     function rewardReferral(address referrer, address referee, uint256 amount) external onlyOwner {\n   |                                               ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3101,
					"file": "contracts/EdTechToken.sol",
					"start": 3086
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1045,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1044
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1015,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1014,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1045,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1013
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 865,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 864,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 1045,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 947,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 950,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "483:7:5"
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 952,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "492:5:5"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 988,
							"linearizedBaseContracts": [
								988,
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 988,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 976,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 988,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 989,
							"src": "448:733:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 943,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 991,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 994,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:6"
									},
									"id": 995,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 993,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1014,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1014,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1010,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1014,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1015,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1044
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1022,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1024,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1044,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1031,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1033,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1044,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1039,
												"id": 1041,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1044,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"contracts/EdTechToken.sol": {
				"ast": {
					"absolutePath": "contracts/EdTechToken.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						],
						"EdTechToken": [
							1397
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1014
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						]
					},
					"id": 1398,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 865,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 148,
							"src": "118:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 989,
							"src": "172:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 350,
							"src": "248:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1051,
										"name": "ERC20",
										"nameLocations": [
											"338:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "338:5:8"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "338:5:8"
								},
								{
									"baseName": {
										"id": 1053,
										"name": "ERC20Burnable",
										"nameLocations": [
											"345:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "345:13:8"
									},
									"id": 1054,
									"nodeType": "InheritanceSpecifier",
									"src": "345:13:8"
								},
								{
									"baseName": {
										"id": 1055,
										"name": "Ownable",
										"nameLocations": [
											"360:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "360:7:8"
									},
									"id": 1056,
									"nodeType": "InheritanceSpecifier",
									"src": "360:7:8"
								},
								{
									"baseName": {
										"id": 1057,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"369:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "369:15:8"
									},
									"id": 1058,
									"nodeType": "InheritanceSpecifier",
									"src": "369:15:8"
								}
							],
							"canonicalName": "EdTechToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1397,
							"linearizedBaseContracts": [
								1397,
								349,
								147,
								988,
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "EdTechToken",
							"nameLocation": "323:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1060,
									"mutability": "immutable",
									"name": "maxSupply",
									"nameLocation": "417:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "392:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1059,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a3e251f",
									"id": 1063,
									"mutability": "mutable",
									"name": "halvingPeriod",
									"nameLocation": "448:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "433:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1061,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1062,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "464:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9a1e1915",
									"id": 1065,
									"mutability": "mutable",
									"name": "lastHalving",
									"nameLocation": "494:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "479:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1064,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "479:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f651ed5e",
									"id": 1073,
									"mutability": "mutable",
									"name": "rewardPerTask",
									"nameLocation": "527:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "512:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1066,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "512:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1072,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1067,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "543:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1071,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1068,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "549:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 1069,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "553:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
														"typeString": "function () view returns (uint8)"
													}
												},
												"id": 1070,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "553:10:8",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"src": "549:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "543:20:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1531b62a",
									"id": 1076,
									"mutability": "mutable",
									"name": "stakingAPY",
									"nameLocation": "585:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "570:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1074,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "570:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1075,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "598:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "EdTechToken.Staker",
									"id": 1083,
									"members": [
										{
											"constant": false,
											"id": 1078,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "657:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1083,
											"src": "649:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1077,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "649:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1080,
											"mutability": "mutable",
											"name": "stakingStartTime",
											"nameLocation": "688:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1083,
											"src": "680:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1079,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "680:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1082,
											"mutability": "mutable",
											"name": "isStaking",
											"nameLocation": "720:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1083,
											"src": "715:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1081,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "715:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "631:6:8",
									"nodeType": "StructDefinition",
									"scope": 1397,
									"src": "624:113:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 1088,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "783:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "749:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1083_storage_$",
										"typeString": "mapping(address => struct EdTechToken.Staker)"
									},
									"typeName": {
										"id": 1087,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1084,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "757:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "749:26:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1083_storage_$",
											"typeString": "mapping(address => struct EdTechToken.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1086,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1085,
												"name": "Staker",
												"nameLocations": [
													"768:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1083,
												"src": "768:6:8"
											},
											"referencedDeclaration": 1083,
											"src": "768:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
												"typeString": "struct EdTechToken.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53aaa63b",
									"id": 1092,
									"mutability": "mutable",
									"name": "referralRewards",
									"nameLocation": "832:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "797:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1091,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1089,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "797:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1090,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef",
									"id": 1098,
									"name": "TokensStaked",
									"nameLocation": "866:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "895:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "879:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "909:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "901:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:38:8"
									},
									"src": "860:57:8"
								},
								{
									"anonymous": false,
									"eventSelector": "9845e367b683334e5c0b12d7b81721ac518e649376fa65e3d68324e8f34f2679",
									"id": 1104,
									"name": "TokensUnstaked",
									"nameLocation": "929:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "960:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "944:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "974:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "966:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:38:8"
									},
									"src": "923:59:8"
								},
								{
									"anonymous": false,
									"eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
									"id": 1110,
									"name": "TokensClaimed",
									"nameLocation": "994:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1024:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1008:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1038:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1030:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:38:8"
									},
									"src": "988:58:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6ef4855b666dcc7884561072e4358b28dfe01feb1b7f4dcebc00e62d50394ac7",
									"id": 1114,
									"name": "TokensBurned",
									"nameLocation": "1058:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1079:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "1071:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:16:8"
									},
									"src": "1052:35:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f684d89bb0f42287bf32838774e4b7f8a60c11804b3c6d1791fa55f306792643",
									"id": 1120,
									"name": "TaskCompleted",
									"nameLocation": "1099:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1129:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1113:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1143:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1135:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:38:8"
									},
									"src": "1093:58:8"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "1306:191:8",
										"statements": [
											{
												"expression": {
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1317:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030303030",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1329:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															},
															"value": "100000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1341:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1134,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "1345:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1345:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "1341:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1329:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1317:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "1317:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1394:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1398:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1394:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "1406:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1418:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "1406:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1140,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1388:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "1388:33:8"
											},
											{
												"expression": {
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1148,
														"name": "lastHalving",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "1460:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1149,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1474:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1480:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1474:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1460:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "1460:29:8"
											}
										]
									},
									"id": 1154,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "456454656368546f6b656e",
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1248:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_49bd1efdd60e55a1a5dbaae5bc0423c0788104be500afcbb50196a7410f1b198",
														"typeString": "literal_string \"EdTechToken\""
													},
													"value": "EdTechToken"
												},
												{
													"hexValue": "454454",
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1263:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2112127c91009e096647d103a23f0cbb9a8b822c5e1085f154038b104a2cf570",
														"typeString": "literal_string \"EDT\""
													},
													"value": "EDT"
												}
											],
											"id": 1125,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1122,
												"name": "ERC20",
												"nameLocations": [
													"1242:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1242:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1242:27:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1127,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1288:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1292:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1288:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1129,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1126,
												"name": "Ownable",
												"nameLocations": [
													"1280:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1280:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1280:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:2:8"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:8"
									},
									"scope": 1397,
									"src": "1218:279:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "1578:185:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1162,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "1597:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1597:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1164,
																	"name": "rewardPerTask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "1613:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1597:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1166,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "1630:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1597:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c792072656163686564",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															},
															"value": "Max supply reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1589:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "1589:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "student",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1679:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "rewardPerTask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "1688:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1171,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1673:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "1673:29:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1177,
															"name": "student",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1732:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1178,
															"name": "rewardPerTask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "1741:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1176,
														"name": "TaskCompleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "1718:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "EmitStatement",
												"src": "1713:42:8"
											}
										]
									},
									"functionSelector": "99caf010",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1158,
												"name": "onlyOwner",
												"nameLocations": [
													"1568:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1568:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1568:9:8"
										}
									],
									"name": "rewardForTaskCompletion",
									"nameLocation": "1518:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "student",
												"nameLocation": "1550:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "1542:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:17:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1578:0:8"
									},
									"scope": 1397,
									"src": "1509:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "1817:168:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1188,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1836:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1842:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1836:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "lastHalving",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "1855:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1191,
																	"name": "halvingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "1869:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1855:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1836:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206561726c7920666f722068616c76696e67",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1884:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901",
																"typeString": "literal_string \"Too early for halving\""
															},
															"value": "Too early for halving"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fcc14a92ffb542ce519db08eaf73383f5ce44d24c540a5361cef5a4cc488b901",
																"typeString": "literal_string \"Too early for halving\""
															}
														],
														"id": 1187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "1828:80:8"
											},
											{
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1197,
														"name": "rewardPerTask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "1919:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "/=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1936:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1919:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "1919:18:8"
											},
											{
												"expression": {
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1201,
														"name": "lastHalving",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "1948:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1202,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1962:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1968:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1962:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1948:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "1948:29:8"
											}
										]
									},
									"functionSelector": "4f3ad328",
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1184,
												"name": "onlyOwner",
												"nameLocations": [
													"1807:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1807:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1807:9:8"
										}
									],
									"name": "halveReward",
									"nameLocation": "1784:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1795:2:8"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1817:0:8"
									},
									"scope": 1397,
									"src": "1775:210:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "2056:339:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1216,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2085:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2089:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2085:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1215,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "2075:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2075:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1219,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2100:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2075:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e6365",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2108:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																"typeString": "literal_string \"Not enough balance\""
															},
															"value": "Not enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																"typeString": "literal_string \"Not enough balance\""
															}
														],
														"id": 1214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2067:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "2067:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1225,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2148:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2157:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2148:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2160:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2140:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2140:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "2140:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1232,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2225:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2229:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2225:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1236,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2245:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EdTechToken_$1397",
																		"typeString": "contract EdTechToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EdTechToken_$1397",
																		"typeString": "contract EdTechToken"
																	}
																],
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2237:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2237:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2237:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2252:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2215:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2215:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "2215:44:8"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1241,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2270:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1083_storage_$",
																"typeString": "mapping(address => struct EdTechToken.Staker storage ref)"
															}
														},
														"id": 1244,
														"indexExpression": {
															"expression": {
																"id": 1242,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2278:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2282:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2278:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2270:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1083_storage",
															"typeString": "struct EdTechToken.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1246,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2299:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1247,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2307:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2313:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2307:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2324:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1245,
															"name": "Staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2292:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Staker_$1083_storage_ptr_$",
																"typeString": "type(struct EdTechToken.Staker storage pointer)"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2292:37:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1083_memory_ptr",
															"typeString": "struct EdTechToken.Staker memory"
														}
													},
													"src": "2270:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1083_storage",
														"typeString": "struct EdTechToken.Staker storage ref"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "2270:59:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2368:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2372:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2368:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2380:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2355:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "EmitStatement",
												"src": "2350:37:8"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1211,
												"name": "nonReentrant",
												"nameLocations": [
													"2043:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2043:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2043:12:8"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "2006:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2026:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "2018:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:16:8"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:0:8"
									},
									"scope": 1397,
									"src": "1997:398:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "2454:578:8",
										"statements": [
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2480:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "2465:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
															"typeString": "struct EdTechToken.Staker"
														},
														"typeName": {
															"id": 1266,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1265,
																"name": "Staker",
																"nameLocations": [
																	"2465:6:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1083,
																"src": "2465:6:8"
															},
															"referencedDeclaration": 1083,
															"src": "2465:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
																"typeString": "struct EdTechToken.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"baseExpression": {
														"id": 1268,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "2489:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1083_storage_$",
															"typeString": "mapping(address => struct EdTechToken.Staker storage ref)"
														}
													},
													"id": 1271,
													"indexExpression": {
														"expression": {
															"id": 1269,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2497:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2501:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2497:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2489:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1083_storage",
														"typeString": "struct EdTechToken.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2465:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1274,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "2527:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
																	"typeString": "struct EdTechToken.Staker storage pointer"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2534:9:8",
															"memberName": "isStaking",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1082,
															"src": "2527:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b6564",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															},
															"value": "No tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															}
														],
														"id": 1273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2519:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "2519:45:8"
											},
											{
												"assignments": [
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "2593:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "2585:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2585:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1281,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2604:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2610:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2604:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1283,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "2622:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
																"typeString": "struct EdTechToken.Staker storage pointer"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2629:16:8",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1080,
														"src": "2622:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2604:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2585:60:8"
											},
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2664:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "2656:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2656:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1301,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1289,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1267,
																			"src": "2674:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
																				"typeString": "struct EdTechToken.Staker storage pointer"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2681:12:8",
																		"memberName": "stakedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1078,
																		"src": "2674:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1291,
																		"name": "stakingAPY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "2696:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2674:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1293,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "2709:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2674:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1295,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2673:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_3153600000_by_1",
																	"typeString": "int_const 3153600000"
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "333635",
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2722:8:8",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2733:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2722:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3153600000_by_1",
																	"typeString": "int_const 3153600000"
																}
															}
														],
														"id": 1299,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2721:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3153600000_by_1",
															"typeString": "int_const 3153600000"
														}
													},
													"src": "2673:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2656:81:8"
											},
											{
												"assignments": [
													1303
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "2756:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "2748:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1302,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2748:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1304,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "2770:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
																"typeString": "struct EdTechToken.Staker storage pointer"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2777:12:8",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1078,
														"src": "2770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1306,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "2792:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2770:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2748:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2825:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2829:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2825:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "2837:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1309,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2819:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2819:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "2819:25:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1318,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2873:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EdTechToken_$1397",
																		"typeString": "contract EdTechToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EdTechToken_$1397",
																		"typeString": "contract EdTechToken"
																	}
																],
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2865:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1316,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2865:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2865:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2880:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2884:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2880:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1322,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "2892:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1083_storage_ptr",
																	"typeString": "struct EdTechToken.Staker storage pointer"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2899:12:8",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1078,
															"src": "2892:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1315,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2855:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2855:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "2855:57:8"
											},
											{
												"expression": {
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2933:26:8",
													"subExpression": {
														"baseExpression": {
															"id": 1326,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2940:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1083_storage_$",
																"typeString": "mapping(address => struct EdTechToken.Staker storage ref)"
															}
														},
														"id": 1329,
														"indexExpression": {
															"expression": {
																"id": 1327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2948:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2952:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2948:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2940:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1083_storage",
															"typeString": "struct EdTechToken.Staker storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "2933:26:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1333,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3000:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3004:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3000:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "3012:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1332,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "2985:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2985:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "EmitStatement",
												"src": "2980:44:8"
											}
										]
									},
									"functionSelector": "a5ce413b",
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1262,
												"name": "nonReentrant",
												"nameLocations": [
													"2441:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2441:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2441:12:8"
										}
									],
									"name": "unstakeTokens",
									"nameLocation": "2416:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2429:2:8"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:8"
									},
									"scope": 1397,
									"src": "2407:625:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "3138:214:8",
										"statements": [
											{
												"assignments": [
													1351
												],
												"declarations": [
													{
														"constant": false,
														"id": 1351,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3157:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1377,
														"src": "3149:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1350,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3149:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1352,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "3166:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3175:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "3166:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3149:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1357,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3196:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3196:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1359,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "3212:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3196:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1361,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "3222:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3196:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c792072656163686564",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3233:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															},
															"value": "Max supply reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															}
														],
														"id": 1356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3188:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3188:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "3188:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1367,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3281:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1368,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "3291:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1366,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3275:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3275:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "3275:23:8"
											},
											{
												"expression": {
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1371,
															"name": "referralRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "3309:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1373,
														"indexExpression": {
															"id": 1372,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3325:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3309:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1374,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "3338:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3309:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "3309:35:8"
											}
										]
									},
									"functionSelector": "db6e62cd",
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "onlyOwner",
												"nameLocations": [
													"3128:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3128:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3128:9:8"
										}
									],
									"name": "rewardReferral",
									"nameLocation": "3053:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "3076:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3068:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3068:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "referee",
												"nameLocation": "3094:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3086:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3111:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3103:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:51:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3138:0:8"
									},
									"scope": 1397,
									"src": "3044:308:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "3419:77:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1386,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3436:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3445:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1385,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "3430:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3430:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "3430:22:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1392,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3481:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1391,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "3468:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3468:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "EmitStatement",
												"src": "3463:25:8"
											}
										]
									},
									"functionSelector": "6d1b229d",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1382,
												"name": "onlyOwner",
												"nameLocations": [
													"3409:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3409:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3409:9:8"
										}
									],
									"name": "burnTokens",
									"nameLocation": "3373:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3392:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "3384:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:16:8"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3419:0:8"
									},
									"scope": 1397,
									"src": "3364:132:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "314:3185:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1098,
								1104,
								1110,
								1114,
								1120
							]
						}
					],
					"src": "33:3466:8"
				},
				"id": 8
			}
		}
	}
}